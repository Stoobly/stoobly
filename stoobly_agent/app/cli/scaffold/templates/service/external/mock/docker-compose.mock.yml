version: '2.4'
services:
  # Serves as the proxy to upstream service, enables recording HTTP requests and mocking
  {service}.agent:
    build:
      context: ./
      dockerfile: ../../Dockerfile.proxy
    depends_on:
      {service}.configure:
        condition: service_completed_successfully
    environment:
      - VIRTUAL_HOST=${SERVICE_HOSTNAME}
      - VIRTUAL_PORT=${SERVICE_PORT}
      - VIRTUAL_PROTO=${SERVICE_SCHEME}
    extends:
      file: ../docker-compose.base.yml
      service: {service}.mock_base
    networks:
      - gateway
      - {service}
    profiles:
      - {workflow}
  {service}.build:
    build:
      context: ./
      dockerfile: ../../Dockerfile.proxy
    extends:
      file: ../docker-compose.base.yml
      service: {service}.build_base
    profiles:
      - {workflow}
  {service}.configure:
    build:
      context: ./
      dockerfile: ../../Dockerfile.proxy
    depends_on:
      {service}.build:
        condition: service_completed_successfully
    extends:
      file: ../docker-compose.base.yml
      service: {service}.configure_base
    profiles:
      - {workflow}
networks:
  gateway:
    name: ${NETWORK} # important: name has to match, this is how we connect to upstream services
    external: true # use pre-existing network instead of attempting to create one
  {service}:
    name: {service}
