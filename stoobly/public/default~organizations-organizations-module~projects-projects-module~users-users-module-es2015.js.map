{"version":3,"sources":["./src/app/modules/organizations/components/organizations-create/organizations-create.component.scss","./node_modules/@iconify/icons-ic/twotone-work.js","./node_modules/@iconify/icons-ic/twotone-mail.js","./src/app/shared/pipes/request-component-label.pipe.ts","./src/app/modules/organizations/components/organizations-create/organizations-create.module.ts","./node_modules/@iconify/icons-ic/twotone-whatshot.js","./src/app/shared/shared.module.ts","./node_modules/ngx-avatar/fesm2015/ngx-avatar.js","./node_modules/ts-md5/dist/md5.js","./src/app/modules/organizations/components/organizations-create/organizations-create.component.html","./src/app/modules/organizations/components/organizations-create/organizations-create.component.ts","./node_modules/is-retina/index.js","./src/app/modules/projects/services/projects-resolver.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,6GAA8C,2IAA2I,E;;;;;;;;;;;ACAxM;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACNoD;AAET;AACjB;IAKb,yBAAyB,SAAzB,yBAAyB;;QACpC,WAAM,GAAG;YACP,OAAO,EAAE;gBACP,IAAI,EAAE,SAAS;gBACf,eAAe,EAAE,4CAAK,CAAC,8DAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC3D,KAAK,EAAE,8DAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;aACjC;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,cAAc;gBACpB,eAAe,EAAE,4CAAK,CAAC,8DAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC1D,KAAK,EAAE,8DAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;aAChC;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,aAAa;gBACnB,eAAe,EAAE,4CAAK,CAAC,8DAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC1D,KAAK,EAAE,8DAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;aAChC;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,UAAU;gBAChB,eAAe,EAAE,4CAAK,CAAC,8DAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC5D,KAAK,EAAE,8DAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;aAClC;SACF,CAAC;IAQJ,CAAC;IANC,SAAS,CAAC,MAAkB;QAC1B,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACxB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AA9BY,yBAAyB;IAHrC,0DAAI,CAAC;QACJ,IAAI,EAAE,uBAAuB;KAC9B,CAAC;GACW,yBAAyB,CA8BrC;AA9BqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRS;AACN;AACe;AACH;AACM;AACE;AACM;AACR;AACE;AACN;AACE;AACF;AAED;AAE0B;IAqBnE,yBAAyB,SAAzB,yBAAyB;CACrC;AADY,yBAAyB;IAnBrC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,6FAA4B,CAAC;QAC5C,OAAO,EAAE;YACP,4DAAY;YACZ,wEAAe;YACf,qEAAa;YACb,qEAAgB;YAChB,uEAAc;YACd,0EAAgB;YAChB,gFAAmB;YACnB,oEAAU;YACV,kEAAmB;YACnB,qEAAa;YACb,wEAAe;YACf,0EAAmB;SACpB;QACD,eAAe,EAAE,CAAC,6FAA4B,CAAC;QAC/C,OAAO,EAAE,CAAC,6FAA4B,CAAC;KACxC,CAAC;GACW,yBAAyB,CACrC;AADqC;;;;;;;;;;;;ACpCtC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACN+C;AACN;AAE8C;IAW1E,YAAY,SAAZ,YAAY;CAAI;AAAhB,YAAY;IATxB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,oGAAyB,CAAC;QACzC,OAAO,EAAE;YACP,4DAAY;SACb;QACD,OAAO,EAAE;YACP,oGAAyB;SAC1B;KACF,CAAC;GACW,YAAY,CAAI;AAAJ;;;;;;;;;;;;;ACdzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACuE;AAChF;AACd;AACJ;AACqB;AACF;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc,iBAAiB,KAAK,UAAU,KAAK;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc,sBAAsB,eAAe;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,cAAc;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA,kBAAkB,qCAAqC,KAAK,KAAK;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,GAAG;AAClD;AACA,cAAc,0CAAG;AACjB;AACA;AACA,2BAA2B,gDAAQ;AACnC,qDAAqD,cAAc,KAAK,WAAW;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,cAAc,KAAK,WAAW,UAAU,QAAQ;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB,KAAK,KAAK;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAU;AAC1B,IAAI,gEAAU;AACd,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA,0BAA0B,4DAAc;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,0BAA0B;AAChG;AACA,sBAAsB,wDAAU;AAChC,IAAI,gEAAU;AACd,IAAI,qDAAO,IAAI,8DAAQ;AACvB,IAAI,qDAAO,IAAI,4DAAM;AACrB,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,gBAAgB,wDAAU;AAC1B,IAAI,gEAAU;AACd,IAAI,wDAAU,uBAAuB,+DAAU;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sLAAsL;AACpN;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS,sBAAsB,0DAAG;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,sBAAsB;AAC3B,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,kBAAkB,wDAAU;AAC5B,IAAI,+DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,wDAAU;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mEAAmE;AACpF;AACA;AACA;AACA;AACA,gCAAgC,wDAAU;AAC1C,IAAI,8DAAQ;AACZ,kBAAkB,4DAAY;AAC9B;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAE0K;AAC1K;;;;;;;;;;;;;AC7xBa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,uBAAumBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,IAAI;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;ACjZA;AAAe,kPAAmL,iCAAiC,q7BAAq7B,sCAAsC,oDAAoD,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1qC;AAC3B;AAC4B;AAEnB;AACE;AACH;AACG;IAO3C,4BAA4B,SAA5B,4BAA4B;IAavC,YACkC,YAAiB,EACzC,SAAqD,EACrD,EAAe;QAFS,iBAAY,GAAZ,YAAY,CAAK;QACzC,cAAS,GAAT,SAAS,CAA4C;QACrD,OAAE,GAAF,EAAE,CAAa;QAfzB,aAAQ,GAAG,IAAI,0DAAY,EAAU,CAAC;QAEtC,SAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC;QAEH,YAAO,GAAG,sEAAO,CAAC;QAClB,aAAQ,GAAG,uEAAQ,CAAC;QACpB,aAAQ,GAAG,uEAAQ,CAAC;QACpB,YAAO,GAAG,qEAAO,CAAC;IAMd,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;CACF;;4CAbI,oDAAM,SAAC,wEAAe;YA1BlB,qEAAY;YADZ,0DAAW;;AAaP,4BAA4B;IALxC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,iGAAoD;;KAErD,CAAC;GACW,4BAA4B,CA2BxC;AA3BwC;;;;;;;;;;;;ACdzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACZ2C;AAG2B;IAKzD,gBAAgB,SAAhB,gBAAgB;IAE3B,YACU,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IACtC,CAAC;IAEL,OAAO,CAAC,KAA6B;QACnC,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,IAAI,KAAK,CAAC,WAAW,CAAC,eAAe,EAAE;YACrC,MAAM,GAAG,EAAC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,eAAe,EAAC,CAAC;SAC/D;aAAM,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC9C,MAAM,GAAG,EAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAC,CAAC;SACpE;QAEE,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;CACF;;YAtBQ,mFAAe;;AAKX,gBAAgB;IAH5B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,gBAAgB,CAiB5B;AAjB4B","file":"default~organizations-organizations-module~projects-projects-module~users-users-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmdhbml6YXRpb25zLWNyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\";","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M4 8h16v11H4z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM10 4h4v2h-4V4zm10 15H4V8h16v11z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M20 6H4l8 4.99zM4 8v10h16V8l-8 5z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 2l-8 4.99L4 6h16zm0 12H4V8l8 5l8-5v10z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport theme from '@vex/utils/tailwindcss';\nimport Color from 'color';\n\n@Pipe({\n  name: 'requestComponentLabel',\n})\nexport class RequestComponentLabelPipe implements PipeTransform {\n  labels = {\n    headers: {\n      text: 'Headers',\n      backgroundColor: Color(theme.colors.green['500']).fade(0.9),\n      color: theme.colors.green['500'],\n    },\n    query_params: {\n      text: 'Query Params',\n      backgroundColor: Color(theme.colors.cyan['500']).fade(0.9),\n      color: theme.colors.cyan['500'],\n    },\n    body_params: {\n      text: 'Body Params',\n      backgroundColor: Color(theme.colors.teal['500']).fade(0.9),\n      color: theme.colors.teal['500'],\n    },\n    response: {\n      text: 'Response',\n      backgroundColor: Color(theme.colors.purple['500']).fade(0.9),\n      color: theme.colors.purple['500'],\n    },\n  };\n\n  transform(labels: Array<any>): Array<any> {\n    return labels.map(label => {\n      return this.labels[label];\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { IconModule } from '@visurel/iconify-angular';\n\nimport { OrganizationsCreateComponent } from './organizations-create.component';\n\n@NgModule({\n  declarations: [OrganizationsCreateComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatInputModule,\n    MatDividerModule,\n    MatDatepickerModule,\n    IconModule,\n    ReactiveFormsModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatNativeDateModule,\n  ],\n  entryComponents: [OrganizationsCreateComponent],\n  exports: [OrganizationsCreateComponent],\n})\nexport class OrganizationsCreateModule {\n}\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M16.11 6.77c-.53 2.6-2.62 4.43-5.28 4.43c-1.56 0-2.96-.62-3.97-1.63C6.3 10.96 6 12.47 6 14c0 3.31 2.69 6 6 6s6-2.69 6-6c0-2.56-.66-5.03-1.89-7.23zm-4.22 11.22c-1.37 0-2.49-1.08-2.49-2.42c0-1.25.81-2.13 2.17-2.41c1.37-.28 2.78-.93 3.57-1.99c.3 1 .46 2.05.46 3.12c0 2.04-1.66 3.7-3.71 3.7z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M11.57 13.16c-1.36.28-2.17 1.16-2.17 2.41c0 1.34 1.11 2.42 2.49 2.42c2.05 0 3.71-1.66 3.71-3.71c0-1.07-.15-2.12-.46-3.12c-.79 1.07-2.2 1.72-3.57 2zM13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73c-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM12 20c-3.31 0-6-2.69-6-6c0-1.53.3-3.04.86-4.43a5.582 5.582 0 0 0 3.97 1.63c2.66 0 4.75-1.83 5.28-4.43A14.77 14.77 0 0 1 18 14c0 3.31-2.69 6-6 6z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RequestComponentLabelPipe } from '@shared/pipes/request-component-label.pipe';\n\n@NgModule({\n  declarations: [RequestComponentLabelPipe],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    RequestComponentLabelPipe,\n  ],\n})\nexport class SharedModule { }\n","import { __decorate, __metadata, __param } from 'tslib';\nimport { Injectable, InjectionToken, Optional, Inject, EventEmitter, Input, Output, Component, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport isRetina from 'is-retina';\nimport { Md5 } from 'ts-md5';\nimport { HttpClient } from '@angular/common/http';\nimport { takeWhile, map } from 'rxjs/operators';\n\n/**\n * Contract of all async sources.\n * Every async source must implement the processResponse method that extracts the avatar url from the data\n */\nclass AsyncSource {\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n    }\n}\n\nvar AvatarSource;\n(function (AvatarSource) {\n    AvatarSource[\"FACEBOOK\"] = \"facebook\";\n    AvatarSource[\"GOOGLE\"] = \"google\";\n    AvatarSource[\"TWITTER\"] = \"twitter\";\n    AvatarSource[\"INSTAGRAM\"] = \"instagram\";\n    AvatarSource[\"VKONTAKTE\"] = \"vkontakte\";\n    AvatarSource[\"SKYPE\"] = \"skype\";\n    AvatarSource[\"GRAVATAR\"] = \"gravatar\";\n    AvatarSource[\"GITHUB\"] = \"github\";\n    AvatarSource[\"CUSTOM\"] = \"custom\";\n    AvatarSource[\"INITIALS\"] = \"initials\";\n    AvatarSource[\"VALUE\"] = \"value\";\n})(AvatarSource || (AvatarSource = {}));\n\n/**\n *  Facebook source implementation.\n *  Fetch avatar source based on facebook identifier\n *  and image size\n */\nclass Facebook {\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.FACEBOOK;\n    }\n    getAvatar(size) {\n        return ('https://graph.facebook.com/' +\n            `${this.sourceId}/picture?width=${size}&height=${size}`);\n    }\n}\n\n/**\n *  Twitter source implementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nclass Twitter {\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.TWITTER;\n    }\n    getAvatar(size) {\n        const twitterImgSize = this.getImageSize(size);\n        return `https://twitter.com/${this.sourceId}/profile_image?size=${twitterImgSize}`;\n    }\n    getImageSize(size) {\n        if (size <= 24) {\n            return 'mini';\n        }\n        if (size <= 48) {\n            return 'normal';\n        }\n        if (size <= 73) {\n            return 'bigger';\n        }\n        return 'original';\n    }\n}\n\n/**\n *  Google source implementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nclass Google extends AsyncSource {\n    constructor(sourceId) {\n        super(sourceId);\n        this.sourceType = AvatarSource.GOOGLE;\n    }\n    getAvatar() {\n        return `https://picasaweb.google.com/data/entry/api/user/${this.sourceId}?alt=json`;\n    }\n    /**\n     * Extract google avatar from json data\n     */\n    processResponse(data, size) {\n        const avatarSrc = data.entry.gphoto$thumbnail.$t;\n        if (avatarSrc) {\n            return avatarSrc.replace('s64', 's' + size);\n        }\n        return null;\n    }\n}\n\n/**\n *  Instagram source impelementation.\n *  Fetch avatar source based on instagram identifier\n */\nclass Instagram extends AsyncSource {\n    constructor(sourceId) {\n        super(sourceId);\n        this.sourceType = AvatarSource.INSTAGRAM;\n    }\n    getAvatar() {\n        return `https://www.instagram.com/${this.sourceId}/?__a=1`;\n    }\n    /**\n     * extract instagram avatar from json data\n     */\n    processResponse(data, size) {\n        return `${data.graphql.user.profile_pic_url_hd}&s=${size}`;\n    }\n}\n\n/**\n *  Custom source implementation.\n *  return custom image as an avatar\n *\n */\nclass Custom {\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.CUSTOM;\n    }\n    getAvatar() {\n        return this.sourceId;\n    }\n}\n\n/**\n * Initials source implementation.\n * return the initials of the given value\n */\nclass Initials {\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.INITIALS;\n    }\n    getAvatar(size) {\n        return this.getInitials(this.sourceId, size);\n    }\n    /**\n     * Returns the initial letters of a name in a string.\n     */\n    getInitials(name, size) {\n        name = name.trim();\n        if (!name) {\n            return '';\n        }\n        const initials = name.split(' ');\n        if (size && size < initials.length) {\n            return this.constructInitials(initials.slice(0, size));\n        }\n        else {\n            return this.constructInitials(initials);\n        }\n    }\n    /**\n     * Iterates a person's name string to get the initials of each word in uppercase.\n     */\n    constructInitials(elements) {\n        if (!elements || !elements.length) {\n            return '';\n        }\n        return elements\n            .filter(element => element && element.length > 0)\n            .map(element => element[0].toUpperCase())\n            .join('');\n    }\n}\n\n/**\n *  Gravatar source implementation.\n *  Fetch avatar source based on gravatar email\n */\nclass Gravatar {\n    constructor(value) {\n        this.value = value;\n        this.sourceType = AvatarSource.GRAVATAR;\n        this.sourceId = value.match('^[a-f0-9]{32}$')\n            ? value\n            : Md5.hashStr(value).toString();\n    }\n    getAvatar(size) {\n        const avatarSize = isRetina() ? size * 2 : size;\n        return `https://secure.gravatar.com/avatar/${this.sourceId}?s=${avatarSize}&d=404`;\n    }\n}\n\n/**\n *  Skype source implementation.\n *  Fetch avatar source based on skype identifier\n */\nclass Skype {\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.SKYPE;\n    }\n    getAvatar() {\n        return `https://api.skype.com/users/${this.sourceId}/profile/avatar`;\n    }\n}\n\n/**\n *  Value source implementation.\n *  return the value as avatar\n */\nclass Value {\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.VALUE;\n    }\n    getAvatar() {\n        return this.sourceId;\n    }\n}\n\n/**\n *  Vkontakte source implementation.\n *  Fetch avatar source based on vkontakte identifier\n *  and image size\n */\nconst apiVersion = 5.8;\nclass Vkontakte extends AsyncSource {\n    constructor(sourceId) {\n        super(sourceId);\n        this.sourceType = AvatarSource.VKONTAKTE;\n    }\n    getAvatar(size) {\n        const imgSize = this.getImageSize(size);\n        return `https://api.vk.com/method/users.get?user_id=${this.sourceId}&v=${apiVersion}&fields=${imgSize}`;\n    }\n    /**\n     * extract vkontakte avatar from json data\n     */\n    processResponse(data) {\n        // avatar key property is the size used to generate avatar url\n        // size property is always the last key in the response object\n        const sizeProperty = Object.keys(data['response'][0]).pop();\n        if (!sizeProperty) {\n            return null;\n        }\n        // return avatar src\n        return data['response'][0][sizeProperty] || null;\n    }\n    /**\n     * Returns image size related to vkontakte API\n     */\n    getImageSize(size) {\n        if (size <= 50) {\n            return 'photo_50';\n        }\n        if (size <= 100) {\n            return 'photo_100';\n        }\n        if (size <= 200) {\n            return 'photo_200';\n        }\n        return 'photo_max';\n    }\n}\n\n/**\n *  GitHub source implementation.\n *  Fetch avatar source based on github identifier\n */\nclass Github extends AsyncSource {\n    constructor(sourceId) {\n        super(sourceId);\n        this.sourceType = AvatarSource.GITHUB;\n    }\n    getAvatar() {\n        return `https://api.github.com/users/${this.sourceId}`;\n    }\n    /**\n     * extract github avatar from json data\n     */\n    processResponse(data, size) {\n        if (size) {\n            return `${data.avatar_url}&s=${size}`;\n        }\n        return data.avatar_url;\n    }\n}\n\n/**\n * Factory class that implements factory method pattern.\n * Used to create Source implementation class based\n * on the source Type\n */\nlet SourceFactory = class SourceFactory {\n    constructor() {\n        this.sources = {};\n        this.sources[AvatarSource.FACEBOOK] = Facebook;\n        this.sources[AvatarSource.TWITTER] = Twitter;\n        this.sources[AvatarSource.GOOGLE] = Google;\n        this.sources[AvatarSource.INSTAGRAM] = Instagram;\n        this.sources[AvatarSource.SKYPE] = Skype;\n        this.sources[AvatarSource.GRAVATAR] = Gravatar;\n        this.sources[AvatarSource.CUSTOM] = Custom;\n        this.sources[AvatarSource.INITIALS] = Initials;\n        this.sources[AvatarSource.VALUE] = Value;\n        this.sources[AvatarSource.VKONTAKTE] = Vkontakte;\n        this.sources[AvatarSource.GITHUB] = Github;\n    }\n    newInstance(sourceType, sourceValue) {\n        return new this.sources[sourceType](sourceValue);\n    }\n};\nSourceFactory = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [])\n], SourceFactory);\n\n/**\n * Token used to inject the AvatarConfig object\n */\nconst AVATAR_CONFIG = new InjectionToken('avatar.config');\n\nlet AvatarConfigService = class AvatarConfigService {\n    constructor(userConfig) {\n        this.userConfig = userConfig;\n    }\n    getAvatarSources(defaultSources) {\n        if (this.userConfig &&\n            this.userConfig.sourcePriorityOrder &&\n            this.userConfig.sourcePriorityOrder.length) {\n            const uniqueSources = [...new Set(this.userConfig.sourcePriorityOrder)];\n            const validSources = uniqueSources.filter(source => defaultSources.includes(source));\n            return [\n                ...validSources,\n                ...defaultSources.filter(source => !validSources.includes(source))\n            ];\n        }\n        return defaultSources;\n    }\n    getAvatarColors(defaultColors) {\n        return ((this.userConfig &&\n            this.userConfig.colors &&\n            this.userConfig.colors.length &&\n            this.userConfig.colors) ||\n            defaultColors);\n    }\n};\nAvatarConfigService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [AVATAR_CONFIG,] }] }\n];\nAvatarConfigService = __decorate([\n    Injectable(),\n    __param(0, Optional()),\n    __param(0, Inject(AVATAR_CONFIG)),\n    __metadata(\"design:paramtypes\", [Object])\n], AvatarConfigService);\n\n/**\n * list of Supported avatar sources\n */\nconst defaultSources = [\n    AvatarSource.FACEBOOK,\n    AvatarSource.GOOGLE,\n    AvatarSource.TWITTER,\n    AvatarSource.INSTAGRAM,\n    AvatarSource.VKONTAKTE,\n    AvatarSource.SKYPE,\n    AvatarSource.GRAVATAR,\n    AvatarSource.GITHUB,\n    AvatarSource.CUSTOM,\n    AvatarSource.INITIALS,\n    AvatarSource.VALUE\n];\n/**\n * list of default colors\n */\nconst defaultColors = [\n    '#1abc9c',\n    '#3498db',\n    '#f1c40f',\n    '#8e44ad',\n    '#e74c3c',\n    '#d35400',\n    '#2c3e50',\n    '#7f8c8d'\n];\n/**\n * Provides utilities methods related to Avatar component\n */\nlet AvatarService = class AvatarService {\n    constructor(http, avatarConfigService) {\n        this.http = http;\n        this.avatarConfigService = avatarConfigService;\n        this.avatarSources = defaultSources;\n        this.avatarColors = defaultColors;\n        this.failedSources = new Map();\n        this.overrideAvatarSources();\n        this.overrideAvatarColors();\n    }\n    fetchAvatar(avatarUrl) {\n        return this.http.get(avatarUrl);\n    }\n    getRandomColor(avatarText) {\n        if (!avatarText) {\n            return 'transparent';\n        }\n        const asciiCodeSum = this.calculateAsciiCode(avatarText);\n        return this.avatarColors[asciiCodeSum % this.avatarColors.length];\n    }\n    compareSources(sourceType1, sourceType2) {\n        return (this.getSourcePriority(sourceType1) - this.getSourcePriority(sourceType2));\n    }\n    isSource(source) {\n        return this.avatarSources.includes(source);\n    }\n    isTextAvatar(sourceType) {\n        return [AvatarSource.INITIALS, AvatarSource.VALUE].includes(sourceType);\n    }\n    buildSourceKey(source) {\n        return source.sourceType + '-' + source.sourceId;\n    }\n    sourceHasFailedBefore(source) {\n        return this.failedSources.has(this.buildSourceKey(source));\n    }\n    markSourceAsFailed(source) {\n        this.failedSources.set(this.buildSourceKey(source), source);\n    }\n    overrideAvatarSources() {\n        this.avatarSources = this.avatarConfigService.getAvatarSources(defaultSources);\n    }\n    overrideAvatarColors() {\n        this.avatarColors = this.avatarConfigService.getAvatarColors(defaultColors);\n    }\n    calculateAsciiCode(value) {\n        return value\n            .split('')\n            .map(letter => letter.charCodeAt(0))\n            .reduce((previous, current) => previous + current);\n    }\n    getSourcePriority(sourceType) {\n        return this.avatarSources.indexOf(sourceType);\n    }\n};\nAvatarService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: AvatarConfigService }\n];\nAvatarService = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [HttpClient,\n        AvatarConfigService])\n], AvatarService);\n\n/**\n * Universal avatar component that\n * generates avatar from different sources\n *\n * export\n * class AvatarComponent\n * implements {OnChanges}\n */\nlet AvatarComponent = class AvatarComponent {\n    constructor(sourceFactory, avatarService) {\n        this.sourceFactory = sourceFactory;\n        this.avatarService = avatarService;\n        this.round = true;\n        this.size = 50;\n        this.textSizeRatio = 3;\n        this.fgColor = '#FFF';\n        this.style = {};\n        this.cornerRadius = 0;\n        this.clickOnAvatar = new EventEmitter();\n        this.isAlive = true;\n        this.avatarSrc = null;\n        this.avatarText = null;\n        this.avatarStyle = {};\n        this.hostStyle = {};\n        this.currentIndex = -1;\n        this.sources = [];\n    }\n    onAvatarClicked() {\n        this.clickOnAvatar.emit(this.sources[this.currentIndex]);\n    }\n    /**\n     * Detect inputs change\n     *\n     * param {{ [propKey: string]: SimpleChange }} changes\n     *\n     * memberof AvatarComponent\n     */\n    ngOnChanges(changes) {\n        for (const propName in changes) {\n            if (this.avatarService.isSource(propName)) {\n                const sourceType = AvatarSource[propName.toUpperCase()];\n                const currentValue = changes[propName].currentValue;\n                if (currentValue && typeof currentValue === 'string') {\n                    this.addSource(sourceType, currentValue);\n                }\n                else {\n                    this.removeSource(sourceType);\n                }\n            }\n        }\n        // reinitialize the avatar component when a source property value has changed\n        // the fallback system must be re-invoked with the new values.\n        this.initializeAvatar();\n    }\n    /**\n     * Fetch avatar source\n     *\n     * param {any} event\n     *\n     * memberOf AvatarComponent\n     */\n    fetchAvatarSource() {\n        const previousSource = this.sources[this.currentIndex];\n        if (previousSource) {\n            this.avatarService.markSourceAsFailed(previousSource);\n        }\n        const source = this.findNextSource();\n        if (!source) {\n            return;\n        }\n        if (this.avatarService.isTextAvatar(source.sourceType)) {\n            this.buildTextAvatar(source);\n            this.avatarSrc = null;\n        }\n        else {\n            this.buildImageAvatar(source);\n        }\n    }\n    findNextSource() {\n        while (++this.currentIndex < this.sources.length) {\n            const source = this.sources[this.currentIndex];\n            if (source && !this.avatarService.sourceHasFailedBefore(source)) {\n                return source;\n            }\n        }\n        return null;\n    }\n    ngOnDestroy() {\n        this.isAlive = false;\n    }\n    /**\n     * Initialize the avatar component and its fallback system\n     */\n    initializeAvatar() {\n        this.currentIndex = -1;\n        if (this.sources.length > 0) {\n            this.sortAvatarSources();\n            this.fetchAvatarSource();\n            this.hostStyle = {\n                width: this.size + 'px',\n                height: this.size + 'px'\n            };\n        }\n    }\n    sortAvatarSources() {\n        this.sources.sort((source1, source2) => this.avatarService.compareSources(source1.sourceType, source2.sourceType));\n    }\n    buildTextAvatar(avatarSource) {\n        this.avatarText = avatarSource.getAvatar(this.initialsSize);\n        this.avatarStyle = this.getInitialsStyle(avatarSource.sourceId);\n    }\n    buildImageAvatar(avatarSource) {\n        this.avatarStyle = this.getImageStyle();\n        if (avatarSource instanceof AsyncSource) {\n            this.fetchAndProcessAsyncAvatar(avatarSource);\n        }\n        else {\n            this.avatarSrc = avatarSource.getAvatar(this.size);\n        }\n    }\n    /**\n     *\n     * returns initials style\n     *\n     * memberOf AvatarComponent\n     */\n    getInitialsStyle(avatarValue) {\n        return Object.assign({ textAlign: 'center', borderRadius: this.round ? '100%' : this.cornerRadius + 'px', border: this.borderColor ? '1px solid ' + this.borderColor : '', textTransform: 'uppercase', color: this.fgColor, backgroundColor: this.bgColor\n                ? this.bgColor\n                : this.avatarService.getRandomColor(avatarValue), font: Math.floor(this.size / this.textSizeRatio) +\n                'px Helvetica, Arial, sans-serif', lineHeight: this.size + 'px' }, this.style);\n    }\n    /**\n     *\n     * returns image style\n     *\n     * memberOf AvatarComponent\n     */\n    getImageStyle() {\n        return Object.assign({ maxWidth: '100%', borderRadius: this.round ? '50%' : this.cornerRadius + 'px', border: this.borderColor ? '1px solid ' + this.borderColor : '', width: this.size, height: this.size }, this.style);\n    }\n    /**\n     * Fetch avatar image asynchronously.\n     *\n     * param {Source} source represents avatar source\n     * memberof AvatarComponent\n     */\n    fetchAndProcessAsyncAvatar(source) {\n        if (this.avatarService.sourceHasFailedBefore(source)) {\n            return;\n        }\n        this.avatarService\n            .fetchAvatar(source.getAvatar(this.size))\n            .pipe(takeWhile(() => this.isAlive), map(response => source.processResponse(response, this.size)))\n            .subscribe(avatarSrc => (this.avatarSrc = avatarSrc), err => {\n            this.fetchAvatarSource();\n        });\n    }\n    /**\n     * Add avatar source\n     *\n     * param sourceType avatar source type e.g facebook,twitter, etc.\n     * param sourceValue  source value e.g facebookId value, etc.\n     */\n    addSource(sourceType, sourceValue) {\n        const source = this.sources.find(s => s.sourceType === sourceType);\n        if (source) {\n            source.sourceId = sourceValue;\n        }\n        else {\n            this.sources.push(this.sourceFactory.newInstance(sourceType, sourceValue));\n        }\n    }\n    /**\n     * Remove avatar source\n     *\n     * param sourceType avatar source type e.g facebook,twitter, etc.\n     */\n    removeSource(sourceType) {\n        this.sources = this.sources.filter(source => source.sourceType !== sourceType);\n    }\n};\nAvatarComponent.ctorParameters = () => [\n    { type: SourceFactory },\n    { type: AvatarService }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"round\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"size\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"textSizeRatio\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"bgColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"fgColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"borderColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"style\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"cornerRadius\", void 0);\n__decorate([\n    Input('facebookId'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"facebook\", void 0);\n__decorate([\n    Input('twitterId'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"twitter\", void 0);\n__decorate([\n    Input('googleId'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"google\", void 0);\n__decorate([\n    Input('instagramId'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"instagram\", void 0);\n__decorate([\n    Input('vkontakteId'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"vkontakte\", void 0);\n__decorate([\n    Input('skypeId'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"skype\", void 0);\n__decorate([\n    Input('gravatarId'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"gravatar\", void 0);\n__decorate([\n    Input('githubId'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"github\", void 0);\n__decorate([\n    Input('src'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"custom\", void 0);\n__decorate([\n    Input('name'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"initials\", void 0);\n__decorate([\n    Input('value'),\n    __metadata(\"design:type\", Object)\n], AvatarComponent.prototype, \"value\", void 0);\n__decorate([\n    Input('placeholder'),\n    __metadata(\"design:type\", String)\n], AvatarComponent.prototype, \"placeholder\", void 0);\n__decorate([\n    Input('initialsSize'),\n    __metadata(\"design:type\", Number)\n], AvatarComponent.prototype, \"initialsSize\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AvatarComponent.prototype, \"clickOnAvatar\", void 0);\nAvatarComponent = __decorate([\n    Component({\n        // tslint:disable-next-line:component-selector\n        selector: 'ngx-avatar',\n        template: `\n    <div\n      (click)=\"onAvatarClicked()\"\n      class=\"avatar-container\"\n      [ngStyle]=\"hostStyle\"\n    >\n      <img\n        *ngIf=\"avatarSrc; else textAvatar\"\n        [src]=\"avatarSrc\"\n        [width]=\"size\"\n        [height]=\"size\"\n        [ngStyle]=\"avatarStyle\"\n        (error)=\"fetchAvatarSource()\"\n        class=\"avatar-content\"\n      />\n      <ng-template #textAvatar>\n        <div *ngIf=\"avatarText\" class=\"avatar-content\" [ngStyle]=\"avatarStyle\">\n          {{ avatarText }}\n        </div>\n      </ng-template>\n    </div>\n  `,\n        styles: [`\n      :host {\n        border-radius: '50%';\n      }\n    `]\n    }),\n    __metadata(\"design:paramtypes\", [SourceFactory,\n        AvatarService])\n], AvatarComponent);\n\nvar AvatarModule_1;\nlet AvatarModule = AvatarModule_1 = class AvatarModule {\n    static forRoot(avatarConfig) {\n        return {\n            ngModule: AvatarModule_1,\n            providers: [\n                { provide: AVATAR_CONFIG, useValue: avatarConfig ? avatarConfig : {} }\n            ]\n        };\n    }\n};\nAvatarModule = AvatarModule_1 = __decorate([\n    NgModule({\n        imports: [CommonModule],\n        declarations: [AvatarComponent],\n        providers: [SourceFactory, AvatarService, AvatarConfigService],\n        exports: [AvatarComponent]\n    })\n], AvatarModule);\n\n/*\n * Public API Surface of ngx-avatar\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AvatarComponent, AvatarModule, AvatarService, AvatarSource, defaultColors, defaultSources, SourceFactory as ɵa, AvatarConfigService as ɵb, AVATAR_CONFIG as ɵc };\n//# sourceMappingURL=ngx-avatar.js.map\n","\"use strict\";\n/*\n\nTypeScript Md5\n==============\n\nBased on work by\n* Joseph Myers: http://www.myersdaily.org/joseph/javascript/md5-text.html\n* André Cruz: https://github.com/satazor/SparkMD5\n* Raymond Hill: https://github.com/gorhill/yamd5.js\n\nEffectively a TypeScrypt re-write of Raymond Hill JS Library\n\nThe MIT License (MIT)\n\nCopyright (C) 2014 Raymond Hill\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2015 André Cruz <amdfcruz@gmail.com>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Md5 = /** @class */ (function () {\n    function Md5() {\n        this._state = new Int32Array(4);\n        this._buffer = new ArrayBuffer(68);\n        this._buffer8 = new Uint8Array(this._buffer, 0, 68);\n        this._buffer32 = new Uint32Array(this._buffer, 0, 17);\n        this.start();\n    }\n    // One time hashing functions\n    Md5.hashStr = function (str, raw) {\n        if (raw === void 0) { raw = false; }\n        return this.onePassHasher\n            .start()\n            .appendStr(str)\n            .end(raw);\n    };\n    Md5.hashAsciiStr = function (str, raw) {\n        if (raw === void 0) { raw = false; }\n        return this.onePassHasher\n            .start()\n            .appendAsciiStr(str)\n            .end(raw);\n    };\n    Md5._hex = function (x) {\n        var hc = Md5.hexChars;\n        var ho = Md5.hexOut;\n        var n;\n        var offset;\n        var j;\n        var i;\n        for (i = 0; i < 4; i += 1) {\n            offset = i * 8;\n            n = x[i];\n            for (j = 0; j < 8; j += 2) {\n                ho[offset + 1 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n                ho[offset + 0 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n            }\n        }\n        return ho.join('');\n    };\n    Md5._md5cycle = function (x, k) {\n        var a = x[0];\n        var b = x[1];\n        var c = x[2];\n        var d = x[3];\n        // ff()\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        // gg()\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        // hh()\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        // ii()\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    };\n    Md5.prototype.start = function () {\n        this._dataLength = 0;\n        this._bufferLength = 0;\n        this._state.set(Md5.stateIdentity);\n        return this;\n    };\n    // Char to code point to to array conversion:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n    // #Example.3A_Fixing_charCodeAt_to_handle_non-Basic-Multilingual-Plane_characters_if_their_presence_earlier_in_the_string_is_unknown\n    Md5.prototype.appendStr = function (str) {\n        var buf8 = this._buffer8;\n        var buf32 = this._buffer32;\n        var bufLen = this._bufferLength;\n        var code;\n        var i;\n        for (i = 0; i < str.length; i += 1) {\n            code = str.charCodeAt(i);\n            if (code < 128) {\n                buf8[bufLen++] = code;\n            }\n            else if (code < 0x800) {\n                buf8[bufLen++] = (code >>> 6) + 0xC0;\n                buf8[bufLen++] = code & 0x3F | 0x80;\n            }\n            else if (code < 0xD800 || code > 0xDBFF) {\n                buf8[bufLen++] = (code >>> 12) + 0xE0;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            }\n            else {\n                code = ((code - 0xD800) * 0x400) + (str.charCodeAt(++i) - 0xDC00) + 0x10000;\n                if (code > 0x10FFFF) {\n                    throw new Error('Unicode standard supports code points up to U+10FFFF');\n                }\n                buf8[bufLen++] = (code >>> 18) + 0xF0;\n                buf8[bufLen++] = (code >>> 12 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            }\n            if (bufLen >= 64) {\n                this._dataLength += 64;\n                Md5._md5cycle(this._state, buf32);\n                bufLen -= 64;\n                buf32[0] = buf32[16];\n            }\n        }\n        this._bufferLength = bufLen;\n        return this;\n    };\n    Md5.prototype.appendAsciiStr = function (str) {\n        var buf8 = this._buffer8;\n        var buf32 = this._buffer32;\n        var bufLen = this._bufferLength;\n        var i;\n        var j = 0;\n        for (;;) {\n            i = Math.min(str.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = str.charCodeAt(j++);\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    };\n    Md5.prototype.appendByteArray = function (input) {\n        var buf8 = this._buffer8;\n        var buf32 = this._buffer32;\n        var bufLen = this._bufferLength;\n        var i;\n        var j = 0;\n        for (;;) {\n            i = Math.min(input.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = input[j++];\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    };\n    Md5.prototype.getState = function () {\n        var self = this;\n        var s = self._state;\n        return {\n            buffer: String.fromCharCode.apply(null, self._buffer8),\n            buflen: self._bufferLength,\n            length: self._dataLength,\n            state: [s[0], s[1], s[2], s[3]]\n        };\n    };\n    Md5.prototype.setState = function (state) {\n        var buf = state.buffer;\n        var x = state.state;\n        var s = this._state;\n        var i;\n        this._dataLength = state.length;\n        this._bufferLength = state.buflen;\n        s[0] = x[0];\n        s[1] = x[1];\n        s[2] = x[2];\n        s[3] = x[3];\n        for (i = 0; i < buf.length; i += 1) {\n            this._buffer8[i] = buf.charCodeAt(i);\n        }\n    };\n    Md5.prototype.end = function (raw) {\n        if (raw === void 0) { raw = false; }\n        var bufLen = this._bufferLength;\n        var buf8 = this._buffer8;\n        var buf32 = this._buffer32;\n        var i = (bufLen >> 2) + 1;\n        var dataBitsLen;\n        this._dataLength += bufLen;\n        buf8[bufLen] = 0x80;\n        buf8[bufLen + 1] = buf8[bufLen + 2] = buf8[bufLen + 3] = 0;\n        buf32.set(Md5.buffer32Identity.subarray(i), i);\n        if (bufLen > 55) {\n            Md5._md5cycle(this._state, buf32);\n            buf32.set(Md5.buffer32Identity);\n        }\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        dataBitsLen = this._dataLength * 8;\n        if (dataBitsLen <= 0xFFFFFFFF) {\n            buf32[14] = dataBitsLen;\n        }\n        else {\n            var matches = dataBitsLen.toString(16).match(/(.*?)(.{0,8})$/);\n            if (matches === null) {\n                return;\n            }\n            var lo = parseInt(matches[2], 16);\n            var hi = parseInt(matches[1], 16) || 0;\n            buf32[14] = lo;\n            buf32[15] = hi;\n        }\n        Md5._md5cycle(this._state, buf32);\n        return raw ? this._state : Md5._hex(this._state);\n    };\n    // Private Static Variables\n    Md5.stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878]);\n    Md5.buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Md5.hexChars = '0123456789abcdef';\n    Md5.hexOut = [];\n    // Permanent instance is to use for one-call hashing\n    Md5.onePassHasher = new Md5();\n    return Md5;\n}());\nexports.Md5 = Md5;\nif (Md5.hashStr('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n    console.error('Md5 self test failed.');\n}\n//# sourceMappingURL=md5.js.map","export default \"<form (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"form\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-dialog-title>\\r\\n    <h2 class=\\\"headline m-0\\\" fxFlex=\\\"auto\\\">{{ organization ? 'Edit' : 'New' }} Organization</h2>\\r\\n\\r\\n    <button class=\\\"text-secondary\\\" mat-dialog-close mat-icon-button type=\\\"button\\\">\\r\\n      <mat-icon [icIcon]=\\\"icClose\\\"></mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <mat-divider class=\\\"-mx-6 text-border\\\"></mat-divider>\\r\\n\\r\\n  <mat-dialog-content fxLayout=\\\"column\\\">\\r\\n    <mat-form-field class=\\\"mt-6\\\">\\r\\n      <mat-label>Name</mat-label>\\r\\n      <input cdkFocusInitial formControlName=\\\"name\\\" matInput>\\r\\n\\r\\n      <mat-icon [icIcon]=\\\"icPerson\\\" class=\\\"ltr:mr-3 rtl:ml-3\\\" matPrefix></mat-icon>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <mat-label>Description</mat-label>\\r\\n      <textarea formControlName=\\\"description\\\" matInput></textarea>\\r\\n    </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-button mat-dialog-close type=\\\"button\\\">CANCEL</button>\\r\\n    <button color=\\\"primary\\\" mat-button type=\\\"submit\\\">{{ organization ? 'UPDATE' : 'CREATE' }}</button>\\r\\n  </mat-dialog-actions>\\r\\n</form>\\r\\n\";","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icEmail from '@iconify/icons-ic/twotone-mail';\nimport icPerson from '@iconify/icons-ic/twotone-person';\n\n@Component({\n  selector: 'organizations-create',\n  templateUrl: './organizations-create.component.html',\n  styleUrls: ['./organizations-create.component.scss'],\n})\nexport class OrganizationsCreateComponent implements OnInit {\n  onCreate = new EventEmitter<object>();\n\n  form = this.fb.group({\n    name: null,\n    description: null,\n  });\n\n  icClose = icClose;\n  icDelete = icDelete;\n  icPerson = icPerson;\n  icEmail = icEmail;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public organization: any,\n    private dialogRef: MatDialogRef<OrganizationsCreateComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.form.patchValue(this.organization || {});\n  }\n\n  save() {\n    this.onCreate.emit(this.form.value);\n    this.dialogRef.close();\n  }\n}\n","module.exports = function() {\n  var mediaQuery;\n  if (typeof window !== \"undefined\" && window !== null) {\n    mediaQuery = \"(-webkit-min-device-pixel-ratio: 1.25), (min--moz-device-pixel-ratio: 1.25), (-o-min-device-pixel-ratio: 5/4), (min-resolution: 1.25dppx)\";\n    if (window.devicePixelRatio > 1.25) {\n      return true;\n    }\n    if (window.matchMedia && window.matchMedia(mediaQuery).matches) {\n      return true;\n    }\n  }\n  return false;\n};\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { ProjectResource } from '@core/http/project-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectsResolver implements Resolve<any> {\n\n  constructor(\n    private projectResource: ProjectResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    let params = {};\n\n    if (route.queryParams.organization_id) {\n      params = {organization_id: route.queryParams.organization_id};\n    } else if (route.parent.params.organization_id) {\n      params = {organization_id: route.parent.params.organization_id};\n }\n\n    return this.projectResource.index(params);\n  }\n}\n"],"sourceRoot":"webpack:///"}