{"version":3,"sources":["./src/app/modules/requests/components/scrumboard-dialog/scrumboard-dialog.component.html","./node_modules/@iconify/icons-ic/twotone-clear.js","./src/app/modules/requests/services/requests-available-resolver.service.ts","./src/app/modules/scenarios/pages/scenarios-builder/components/scrumboard-card/scrumboard-card.component.ts","./src/@vex/pipes/date-tokens/date-tokens.module.ts","./node_modules/@iconify/icons-ic/twotone-attach-file.js","./src/app/modules/scenarios/components/scenarios-create/scenarios-create.module.ts","./src/app/modules/scenarios/pages/scenario-details/components/requests-create/requests-create.module.ts","./src/app/modules/scenarios/pages/scenarios-builder/scenarios-builder.component.ts","./node_modules/@iconify/icons-ic/twotone-title.js","./src/app/modules/scenarios/pages/scenario-details/services/scenario-details-icons.service.ts","./src/app/modules/scenarios/pages/scenarios-index/components/scenarios-data-table/scenarios-data-table.component.scss","./src/app/modules/scenarios/components/scenarios-create/scenarios-create.component.scss","./src/app/shared/pipes/request-component-label.pipe.ts","./src/app/modules/scenarios/pages/scenarios-builder/scenarios-builder.component.html","./src/app/modules/scenarios/scenarios.module.ts","./src/app/modules/scenarios/pages/scenarios-builder/scenarios-builder.component.scss","./src/app/modules/scenarios/services/scenarios-resolver.service.ts","./src/app/modules/scenarios/pages/scenarios-index/components/scenarios-data-table/scenarios-data-table.component.html","./src/app/modules/scenarios/pages/scenario-details/components/requests-create/requests-create.component.html","./node_modules/@angular/cdk/fesm2015/accordion.js","./src/app/modules/scenarios/scenarios-routing.module.ts","./src/app/modules/scenarios/pages/scenario-details/scenario-details.module.ts","./node_modules/ngx-infinite-scroll/modules/ngx-infinite-scroll.js","./node_modules/@iconify/icons-ic/twotone-image.js","./src/app/modules/scenarios/pages/scenarios-index/components/scenarios-table-menu/scenarios-table-menu.component.ts","./src/app/shared/shared.module.ts","./node_modules/@iconify/icons-ic/twotone-insert-comment.js","./src/app/modules/scenarios/components/scenarios-edit/scenarios-edit.component.scss","./src/app/modules/scenarios/pages/scenario-details/components/requests-create/requests-create.component.scss","./src/app/modules/scenarios/pages/scenarios-builder/components/scrumboard-card/scrumboard-card.component.scss","./src/app/modules/requests/components/scrumboard-dialog/scrumboard-dialog.component.ts","./src/app/modules/scenarios/components/scenarios-create/scenarios-create.component.html","./src/app/modules/scenarios/pages/scenarios-index/components/scenarios-table-menu/scenarios-table-menu.component.html","./src/@vex/pipes/date-tokens/date-tokens.pipe.ts","./src/app/modules/scenarios/pages/scenario-details/services/requests-data.service.ts","./src/app/modules/scenarios/pages/scenarios-index/services/scenarios-index-icons.service.ts","./src/app/modules/scenarios/pages/scenarios-builder/components/scrumboard-card/scrumboard-card.component.html","./src/app/modules/scenarios/pages/scenario-details/scenario-details.component.scss","./src/app/modules/scenarios/components/scenarios-edit/scenarios-edit.component.ts","./src/app/modules/scenarios/pages/scenarios-index/components/scenarios-data-table/scenarios-data-table.component.ts","./src/app/modules/scenarios/pages/scenarios-index/services/scenario-data.service.ts","./src/app/modules/scenarios/pages/scenarios-index/services/scenarios-index-paginator.service.ts","./src/app/modules/scenarios/components/scenarios-edit/scenarios-edit.module.ts","./src/app/modules/requests/components/scrumboard-dialog/scrumboard-dialog.module.ts","./src/app/modules/scenarios/pages/scenarios-builder/scenarios-builder.module.ts","./src/app/modules/scenarios/pages/scenarios-index/scenarios-index.component.scss","./src/app/modules/scenarios/components/scenarios-edit/scenarios-edit.component.html","./src/app/modules/scenarios/pages/scenarios-builder/services/request-card-adapter.service.ts","./src/app/modules/scenarios/pages/scenario-details/components/requests-create/requests-create.component.ts","./src/app/modules/scenarios/pages/scenario-details/scenario-details.component.html","./src/app/modules/scenarios/components/scenarios-create/scenarios-create.component.ts","./src/app/modules/scenarios/pages/scenarios-index/scenarios-index.component.ts","./node_modules/@angular/cdk/fesm2015/drag-drop.js","./src/app/modules/requests/components/scrumboard-dialog/scrumboard-dialog.component.scss","./src/app/modules/scenarios/pages/scenarios-index/scenarios-index.module.ts","./node_modules/@angular/material/fesm2015/expansion.js","./src/app/modules/scenarios/pages/scenarios-index/scenarios-index.component.html","./src/app/modules/scenarios/services/scenario-resolver.service.ts","./node_modules/@iconify/icons-ic/twotone-notifications.js","./src/app/modules/scenarios/pages/scenario-details/scenario-details.component.ts","./src/app/modules/scenarios/pages/scenarios-builder/services/scenarios-builder-icons.service.ts","./src/app/modules/scenarios/services/requests-resolver.service.ts"],"names":[],"mappings":"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CA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA,wCAAwC,4CAAO;AAC/C;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC,sBAAsB,eAAe,mFAAqB,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,6BAA6B,oDAAoD;AACjF,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iDAAY;AACrD;AACA,0BAA0B,0DAAY;AACtC;AACA,0BAA0B,0DAAY;AACtC;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,mBAAmB,mFAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,4BAA4B,kBAAkB,mFAAqB,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB,uCAAuC;AAC5D;AACA,aAAa;AACb;AACA;AACA,K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AAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,yBAAyB,sBAAsB;AAC/C,wCAAwC,iDAAiD;AACzF;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,yCAAyC,cAAc,YAAY;AACnE;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,mCAAmC;AAC9C;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,kCAAkC,4BAA4B;AAC9D,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,mDAAmD;AAC9D,eAAe,EAAE;AACjB;AACA;AACA;AACA,KAAK;AACL,eAAe,EAAE;AACjB;AACA;AACA,KAAK;AACL,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,2CAA2C,+DAAQ;AACnD,gBAAgB;AAChB;AACA,UAAU,+CAAE,wCAAwC,0DAAG;AACvD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0GAA0G,0DAAG;AAC7G,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,MAAM,QAAQ,sEAAsE,6DAAM;AAC1F,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,MAAM,2BAA2B,gBAAgB,EAAE,mHAAmH,0DAAG;AACzK,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,MAAM,qBAAqB,gBAAgB,EAAE;AAC7C;AACA,KAAK,IAAI,0DAAG;AACZ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,cAAc,sDAAS;AACvB;AACA;AACA;AACA;AACA,uBAAuB,iEAAU;AACjC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,qBAAqB,kCAAkC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,mDAAmD;AACpF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,GAAG,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B,EAAE,gBAAgB;AACrF;AACA,mCAAmC,6FAA+B,EAAE,iBAAiB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,iCAAiC;AACjC;AACA,+BAA+B,4CAAO;AACtC;AACA,wCAAwC,iDAAY;AACpD;AACA,sCAAsC,iDAAY;AAClD;AACA,mCAAmC,iDAAY;AAC/C;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA,2BAA2B,4CAAO;AAClC;AACA,4BAA4B,4CAAO;AACnC;AACA,yBAAyB,4CAAO;AAChC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB,GAAG,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2EAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,uCAAuC;AACvC,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO,GAAG,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4EAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc,MAAM,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C,6BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAY;AACvD;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAQ,IAAI,4DAAuB;AAC/C,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2BAA2B;AAC5F;AACA;AACA;AACA,oEAAoE,2BAA2B;AAC/F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,gBAAgB;AACnC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2EAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA,qBAAqB;AACrB;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAAc,CAAC,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B;AACnE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AAChN;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wEAAkB,EAAE,uCAAuC,qBAAqB,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,oBAAoB,EAAE,uCAAuC;AACrO;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,6BAA6B,8DAA8D;AAC3F,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,mDAAK,uCAAuC;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B,sCAAsC,cAAc;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mFAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,mBAAmB,gEAAS;AAC3D;AACA;AACA;AACA,6BAA6B,yEAAW;AACxC;AACA;AACA;AACA,gGAAgG,KAAK;AACrG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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B,OAAO,mDAAK,EAAE;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,4BAA4B,0DAAY;AACxC;AACA,yBAAyB,0DAAY;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,0BAA0B,0DAAY;AACtC;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,yBAAyB,+CAAU;AACnC,0DAA0D,0DAAG;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS;AACpC;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA,YAAY,0DAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,gEAAS;AACrB,uBAAuB,kDAAK;AAC5B,mDAAmD,gEAAS;AAC5D,iBAAiB;AACjB,aAAa,GAAG,gEAAS;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qCAAqC,kFAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,eAAe;AAC/C,SAAS;AACT;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,oHAAoH;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,iDAAiD;AAC9E,aAAa;AACb;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gCAAgC,OAAO,oDAAM,0BAA0B,GAAG,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AACvH,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,4BAA4B,GAAG;AACrG,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,iBAAiB;AACtB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,oCAAoC,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG,OAAO,oDAAM,4BAA4B,GAAG;AACzH,KAAK,8BAA8B,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,4BAA4B;AACpH;AACA;AACA,gBAAgB,OAAO,6DAAe,2BAA2B,oBAAoB,IAAI;AACzF,wBAAwB,OAAO,0DAAY,6BAA6B;AACxE,4BAA4B,OAAO,0DAAY,iCAAiC;AAChF,YAAY,OAAO,mDAAK,0BAA0B;AAClD,gBAAgB,OAAO,mDAAK,8BAA8B;AAC1D,2BAA2B,OAAO,mDAAK,iCAAiC;AACxE,uBAAuB,OAAO,mDAAK,8BAA8B;AACjE,sBAAsB,OAAO,mDAAK,gCAAgC;AAClE,wBAAwB,OAAO,mDAAK,sCAAsC;AAC1E,gBAAgB,OAAO,mDAAK,8BAA8B;AAC1D,yBAAyB,OAAO,mDAAK,uCAAuC;AAC5E,oBAAoB,OAAO,mDAAK,kCAAkC;AAClE,eAAe,OAAO,oDAAM,6BAA6B;AACzD,gBAAgB,OAAO,oDAAM,8BAA8B;AAC3D,aAAa,OAAO,oDAAM,2BAA2B;AACrD,eAAe,OAAO,oDAAM,6BAA6B;AACzD,cAAc,OAAO,oDAAM,4BAA4B;AACvD,eAAe,OAAO,oDAAM,6BAA6B;AACzD,aAAa,OAAO,oDAAM,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0EAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyV;AACzV;;;;;;;;;;;;;ACzzGA;AAAe,kFAAmB,6CAA6C,2BAA2B,iBAAiB,uBAAuB,iCAAiC,gBAAgB,GAAG,iCAAiC,oBAAoB,GAAG,oBAAoB,wCAAwC,8BAA8B,iBAAiB,sBAAsB,iCAAiC,oBAAoB,mCAAmC,oCAAoC,8BAA8B,8BAA8B,8BAA8B,GAAG,iCAAiC,eAAe,GAAG,cAAc,qBAAqB,GAAG,+BAA+B,cAAc,uBAAuB,KAAK,GAAG,cAAc,kBAAkB,qBAAqB,GAAG,6CAA6C,2nDAA2nD,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp6E;AACV;AACN;AACe;AACU;AAEP;AACI;AACN;AACE;AACJ;AACA;AACU;AACJ;AACG;AACT;AACE;AAEH;AAE6B;AACD;AACL;AACA;AAE0B;AACN;AACf;AAE6B;AACA;AACzC;AACS;IAoClE,oBAAoB,SAApB,oBAAoB;CAAI;AAAxB,oBAAoB;IAlChC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,mFAAuB,EAAE,4HAA2B,EAAE,4HAA2B,CAAC;QACjG,OAAO,EAAE;YACP,sEAAe;YACf,4DAAY;YACZ,qEAAgB;YAChB,0DAAW;YACX,kEAAmB;YAEnB,wEAAe;YACf,uEAAc;YACd,+EAAkB;YAClB,qEAAa;YACb,4EAAiB;YACjB,qEAAa;YACb,qEAAa;YACb,sEAAe;YACf,wEAAe;YACf,2EAAgB;YAChB,8EAAiB;YAEjB,oEAAU;YAEV,iGAAiB;YACjB,2FAAe;YACf,gGAAgB;YAChB,2FAAe;YAEf,gGAAe;YACf,+GAAmB;YACnB,qHAAqB;SACtB;QACD,SAAS,EAAE,CAAC,4FAAmB,CAAC;KACjC,CAAC;GACW,oBAAoB,CAAI;AAAJ;;;;;;;;;;;;;ACpEjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4F;AACzB;AACV;AACoP;AACpP;AACK;AACI;AACa;AACV;AACQ;AAClB;AACsB;AACZ;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oEAAO;AAC5B,QAAQ,kEAAK,oBAAoB,kEAAK,EAAE,4BAA4B;AACpE,QAAQ,kEAAK,aAAa,kEAAK,EAAE,8BAA8B;AAC/D,QAAQ,uEAAU,8CAA8C,oEAAO;AACvE;AACA;AACA,mBAAmB,oEAAO;AAC1B,QAAQ,kEAAK,oBAAoB,kEAAK,EAAE,sCAAsC;AAC9E,QAAQ,kEAAK,aAAa,kEAAK,EAAE,qCAAqC;AACtE,QAAQ,uEAAU,8CAA8C,oEAAO;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4DAAc;AAC9D;AACA;AACA;AACA;AACA;AACA,gCAAgC,uEAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA,iCAAiC,0DAAY;AAC7C;AACA,iCAAiC,6CAAO;AACxC;AACA,uDAAuD,WAAW;AAClE;AACA,sCAAsC,6CAAO;AAC7C;AACA;AACA;AACA;AACA,qCAAqC,2EAAoB;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAS,QAAQ,6DAAM,wCAAwC,2DAAI;AAChG,mCAAmC,kEAAc;AACjD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+CAA+C,uBAAuB,cAAc,SAAS,kBAAkB,gBAAgB,mGAAmG,kBAAkB,6HAA6H,gBAAgB,kDAAkD,4BAA4B,2BAA2B,iDAAiD,+BAA+B,8BAA8B,+CAA+C,kBAAkB,gIAAgI,gBAAgB,6BAA6B,aAAa,sBAAsB,iBAAiB,0BAA0B,oBAAoB,6BAA6B,cAAc,4IAA4I,aAAa,0IAA0I,gBAAgB,gBAAgB,uBAAuB,qBAAqB,aAAa,mBAAmB,yBAAyB,2BAA2B,kFAAkF,gBAAgB,sGAAsG,cAAc,iBAAiB;AAC7nD,aAAa;AACb;AACA;AACA,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,0BAA0B,GAAG;AACvH,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,mFAAyB,EAAE;AACvC,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI,GAAG;AACxG,KAAK,gCAAgC,OAAO,oDAAM,gDAAgD,GAAG,OAAO,sDAAQ,EAAE;AACtH;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,oBAAoB,OAAO,0DAAY,qCAAqC;AAC5E,aAAa,OAAO,uDAAS,mBAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kDAAY;AACrD;AACA,+CAA+C,6DAAM;AACrD,YAAY,2CAAK;AACjB;AACA;AACA;AACA,YAAY,mDAAK,iFAAiF,6DAAM;AACxG;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB,6DAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2DAAK;AACtB,iBAAiB,2DAAK;AACtB,qBAAqB,4EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sDAAsD,aAAa,mBAAmB,mBAAmB,eAAe,sBAAsB,qDAAqD,oDAAoD,gBAAgB,oEAAoE,aAAa,8FAA8F,mBAAmB,sDAAsD,eAAe,kEAAkE,2BAA2B,2FAA2F,kBAAkB,qGAAqG,kBAAkB,aAAa,aAAa,OAAO,mBAAmB,gBAAgB,0E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","file":"scenarios-scenarios-module-es2015.js","sourcesContent":["export default \"<div class=\\\"mb-0 body-1\\\" mat-dialog-title>\\r\\n  <div>\\r\\n    <h2 class=\\\"title m-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      {{ request.method }} {{ request.url }}\\r\\n      <span fxFlex></span>\\r\\n      <button cdkFocusInitial class=\\\"text-secondary\\\" mat-dialog-close mat-icon-button type=\\\"button\\\">\\r\\n        <mat-icon [icIcon]=\\\"icClose\\\"></mat-icon>\\r\\n      </button>\\r\\n    </h2>\\r\\n  </div>\\r\\n\\r\\n  <mat-divider class=\\\"-mx-6 mt-6\\\"></mat-divider>\\r\\n</div>\\r\\n\\r\\n<mat-dialog-content class=\\\"pb-3 pt-3\\\">\\r\\n  <mat-tab-group (selectedTabChange)=\\\"handleTabChange($event)\\\">\\r\\n    <mat-tab [label]=\\\"response.title\\\">\\r\\n      <div class=\\\"content\\\">\\r\\n        <div class=\\\"p-3\\\" >\\r\\n          <h4>Status</h4>\\r\\n          <mat-divider class=\\\"my-2\\\"></mat-divider>\\r\\n          {{ request.status }}\\r\\n        </div>\\r\\n        <div class=\\\"p-3\\\" >\\r\\n          <h4>Body</h4>\\r\\n          <mat-divider class=\\\"my-2\\\"></mat-divider>\\r\\n          <ng-container *ngIf=\\\"response.data$ | async as c\\\" class=\\\"p-1\\\">\\r\\n          <pre>{{ c.length ? prettyJson(c[0].text) : '' }}</pre>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab [label]=\\\"component.title\\\"  *ngFor=\\\"let component of components\\\">\\r\\n      <div class=\\\"content p-3\\\">\\r\\n        <ng-container *ngIf=\\\"component.accessed\\\">\\r\\n          <div class=\\\"p-1\\\" *ngFor=\\\"let c of (component.data$ | async)\\\">\\r\\n            <b>{{ c.name }}: </b>{{ c.value }}\\r\\n          </div>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</mat-dialog-content>\\r\\n\";","var data = {\n\t\"body\": \"<path d=\\\"M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { RequestResource } from '@core/http/request-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestsAvailableResolver implements Resolve<any> {\n\n  constructor(\n    private requestResource: RequestResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.requestResource.index({\n      project_id: route.queryParams.project_id,\n      scenario_id: -1,\n      page: route.queryParams.page || 0,\n      size: route.queryParams.size || 20,\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport icAttachFile from '@iconify/icons-ic/twotone-attach-file';\nimport icInsertComment from '@iconify/icons-ic/twotone-insert-comment';\nimport icNotifications from '@iconify/icons-ic/twotone-notifications';\nimport icTimer from '@iconify/icons-ic/twotone-timer';\n\nimport { ScrumboardCard } from '../../interfaces/scrumboard-card.interface';\n\n@Component({\n  selector: 'scrumboard-card',\n  templateUrl: './scrumboard-card.component.html',\n  styleUrls: ['./scrumboard-card.component.scss'],\n})\nexport class ScrumboardCardComponent implements OnInit {\n  @Input() wrapped: boolean;\n  @Input() card: ScrumboardCard;\n\n  icNotifications = icNotifications;\n  icInsertComment = icInsertComment;\n  icAttachFile = icAttachFile;\n  icTimer = icTimer;\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DateTokensPipe } from './date-tokens.pipe';\n\n\n@NgModule({\n  declarations: [DateTokensPipe],\n  exports: [\n    DateTokensPipe\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DateTokensModule {\n}\n","var data = {\n\t\"body\": \"<path d=\\\"M12.5 23c3.04 0 5.5-2.46 5.5-5.5V6h-1.5v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5a2.5 2.5 0 0 1 5 0v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5a2.5 2.5 0 0 0 5 0V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NgxDropzoneModule } from 'ngx-dropzone';\n\nimport { IconModule } from '@visurel/iconify-angular';\n\nimport { ScenariosCreateComponent } from './scenarios-create.component';\n\n@NgModule({\n  declarations: [ScenariosCreateComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatDividerModule,\n    MatDatepickerModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatNativeDateModule,\n    MatTabsModule,\n    MatTooltipModule,\n\n    IconModule,\n\n    NgxDropzoneModule,\n  ],\n  entryComponents: [ScenariosCreateComponent],\n})\nexport class ScenariosCreateModule { }\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport { IconModule } from '@visurel/iconify-angular';\r\n\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\n\r\nimport { RequestsCreateComponent } from './requests-create.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n    IconModule,\r\n    MatDividerModule,\r\n    NgxDropzoneModule,\r\n  ],\r\n  declarations: [RequestsCreateComponent],\r\n  entryComponents: [RequestsCreateComponent],\r\n  exports: [RequestsCreateComponent],\r\n})\r\nexport class RequestsCreateModule { }\r\n","import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { debounceTime, filter, map } from 'rxjs/operators';\n\nimport icClose from '@iconify/icons-ic/twotone-close';\n\nimport { fadeInUp400ms, stagger80ms } from '@vex/animations';\nimport { PopoverService } from '@vex/components/popover/popover.service';\nimport { trackById } from '@vex/utils/track-by';\n\nimport { RequestResource } from '@core/http/request-resource.service';\nimport { RequestIndexResponse } from '@data/interfaces';\nimport { Project, Request, Scenario } from '@data/schema';\nimport { ScrumboardDialogComponent } from '@requests/components/scrumboard-dialog/scrumboard-dialog.component';\n\nimport { ScrumboardCard } from './interfaces/scrumboard-card.interface';\nimport { ScrumboardList } from './interfaces/scrumboard-list.interface';\nimport { Scrumboard } from './interfaces/scrumboard.interface';\nimport { RequestCardAdapterService } from './services/request-card-adapter.service';\nimport { ScenariosBuilderIcons } from './services/scenarios-builder-icons.service';\n\n@Component({\n  selector: 'vex-scenarios-builder',\n  templateUrl: './scenarios-builder.component.html',\n  styleUrls: ['./scenarios-builder.component.scss'],\n  animations: [\n    stagger80ms,\n    fadeInUp400ms,\n  ],\n})\nexport class ScenariosBuilderComponent implements OnInit {\n  layoutCtrl = new FormControl('fullwidth');\n\n  SCENARIO_CONTAINER_ID = 1;\n  REQUESTS_CONTAINER_ID = 2;\n\n  crumbs = [];\n\n  project: Project;\n  scenario: Scenario;\n  requests: Request[];\n  requestsAvailable: Request[];\n\n  board: Scrumboard = {\n    id: 1,\n    label: '',\n    children: [],\n  };\n  scenarioRequestsList: ScrumboardList = {\n    id: this.SCENARIO_CONTAINER_ID,\n    label: 'Requests',\n    children: [],\n  };\n  availableRequestsList: ScrumboardList = {\n    id: this.REQUESTS_CONTAINER_ID,\n    label: 'Available Requests',\n    children: [],\n  };\n\n  // this.route.paramMap.pipe(\n  //   map(paramMap => +paramMap.get('scrumboardId')),\n  //   map(scrumboardId => scrumboards.find(board => board.id === 1))\n  // );\n\n  addCardCtrl = new FormControl();\n  addListCtrl = new FormControl();\n\n  showAddRequests = false;\n\n  icClose = icClose;\n\n  constructor(\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private popover: PopoverService,\n    private requestCardAdapterService: RequestCardAdapterService,\n    private requestResource: RequestResource,\n    private icons: ScenariosBuilderIcons\n  ) { }\n\n  ngOnInit() {\n    this.scenario = new Scenario(this.route.snapshot.data.scenario);\n    this.project = new Project(this.route.snapshot.data.project);\n\n    this.board.label = this.scenario.name;\n\n    this.board.children.push(this.scenarioRequestsList);\n    this.board.children.push(this.availableRequestsList);\n\n    this.buildRequests();\n    this.buildAvailableRequests(this.route.snapshot.data.requestsAvailable);\n\n    this.buildCrumbs();\n  }\n\n  searchAvailableRequests(queryString: String) {\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const project_id = snapshot.queryParams.project_id;\n    const query = {\n      project_id,\n      scenario_id: -1,\n      q: queryString,\n      page: this.availableRequestsList.search.page,\n      size: this.availableRequestsList.search.size,\n    };\n\n    this.requestResource.index(query).subscribe((res: RequestIndexResponse) => {\n      this.buildAvailableRequests(res);\n\n      this.availableRequestsList.search.total = res.total;\n      this.availableRequestsList.search.q = queryString;\n    });\n  }\n\n// View Access\n\n  open(board: Scrumboard, list: ScrumboardList, card: ScrumboardCard) {\n    // this.addCardCtrl.setValue(null);\n\n    let request = this.requests.find(request => request.id === card.id);\n\n    if (!request) {\n      request = this.requestsAvailable.find(request => request.id === card.id);\n    }\n\n    this.dialog.open(ScrumboardDialogComponent, {\n      data: { request },\n      width: '750px',\n      maxWidth: '100%',\n      disableClose: true,\n    }).beforeClosed().pipe(\n      filter<ScrumboardCard>(Boolean)\n    ).subscribe(value => {\n      // Do something after dialog is closed\n    });\n  }\n\n  /*\n   * Enable dropping requests/endpoints into only scenario container\n   *\n   */\n  drop(event: CdkDragDrop<ScrumboardCard[]>) {\n    if (event.container.id !== this.SCENARIO_CONTAINER_ID.toString()) { return; }\n\n    const requestId = event.item.data.id;\n    const nextPosition = event.currentIndex;\n\n    if (event.previousContainer === event.container) {\n      // If moving position of request in scenario\n\n      const request = this.requests.find(request => request.id === requestId);\n      const curPosition = request.position;\n\n      this.requestResource.update(request.id, {\n        position: nextPosition,\n      }).subscribe(res => {\n        const r1 = this.requests[curPosition];\n        const r2 = this.requests[nextPosition];\n\n        r1.position = nextPosition;\n        r2.position = curPosition;\n\n        this.buildRequests();\n      });\n\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      // If moving request from availableRequests\n\n      this.requestResource.update(event.item.data.id, {\n        scenario_id: this.scenario.id,\n        position: nextPosition,\n      }).subscribe(res => {\n        const request = this.requestsAvailable.find(request => request.id === requestId);\n        request.position = nextPosition;\n\n        this.requests.splice(nextPosition, 0 , request);\n\n        for (let i = 0; i < this.requests.length; ++i) {\n          this.requests[i].position = i;\n        }\n\n        this.buildRequests();\n      });\n\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    }\n  }\n\n  toggleStar(board: Scrumboard) {\n    board.starred = !board.starred;\n  }\n\n  toggleAddRequests() {\n    this.showAddRequests = !this.showAddRequests;\n  }\n\n// Helpers\n\n  getConnectedList(board: Scrumboard) {\n    return board.children.map(x => `${x.id}`);\n  }\n\n  buildCrumbs() {\n    this.crumbs.push({name: this.project.name});\n    this.crumbs.push({\n      name: 'Scenarios',\n      routerLink: ['/scenarios'],\n      queryParams: this.route.snapshot.queryParams,\n    });\n    this.crumbs.push({\n      name: this.scenario.name,\n      routerLink: [`/scenarios/${this.scenario.id}`],\n      queryParams: this.route.snapshot.queryParams,\n    });\n    this.crumbs.push({name: 'Editor'});\n  }\n\n  buildRequests() {\n    const requestsData = this.route.snapshot.data.requests;\n    this.requests = requestsData.list;\n    this.requests.sort((a, b) => a.position - b.position);\n\n    this.buildListChildren(this.scenarioRequestsList, this.requests);\n  }\n\n  buildAvailableRequests(requests) {\n    const _this = this;\n    const requestsAvailableData = requests;\n    this.requestsAvailable = requestsAvailableData.list;\n    this.buildListChildren(this.availableRequestsList, requestsAvailableData.list);\n\n    this.availableRequestsList.search = {\n      q: '',\n      page: 0,\n      size: 25,\n      total: requestsAvailableData.total,\n      // ctrl: new FormControl(),\n      label: 'Search Requests...',\n      // get str$() {\n      //   return this.ctrl.valueChanges.pipe(\n      //     debounceTime(1000)\n      //   )\n      // },\n      onScroll() {\n        this.page += 1;\n        _this.searchAvailableRequests(this.q || '');\n      },\n    };\n\n    // this.availableRequestsList.search.str$.subscribe(this.searchAvailableRequests.bind(this));\n  }\n\n  buildListChildren(list, requests) {\n    list.children = requests.map(request => {\n      const scrumboardCard: ScrumboardCard = this.requestCardAdapterService.createCard(new Request(request));\n      return scrumboardCard;\n    });\n  }\n}\n","var data = {\n\t\"body\": \"<path d=\\\"M5 7h5.5v12h3V7H19V4H5z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { Injectable } from '@angular/core';\n\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport icSearch from '@iconify/icons-ic/twotone-search';\n\n@Injectable()\nexport class ScenarioDetailsIcons {\n\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icAdd = icAdd;\n  icFilterList = icFilterList;\n  icEdit = icEdit;\n\n  constructor() { }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzY2VuYXJpb3MtZGF0YS10YWJsZS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzY2VuYXJpb3MtY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Pipe, PipeTransform } from '@angular/core';\n\nimport theme from '@vex/utils/tailwindcss';\nimport Color from 'color';\n\n@Pipe({\n  name: 'requestComponentLabel',\n})\nexport class RequestComponentLabelPipe implements PipeTransform {\n  labels = {\n    headers: {\n      text: 'Headers',\n      backgroundColor: Color(theme.colors.green['500']).fade(0.9),\n      color: theme.colors.green['500'],\n    },\n    query_params: {\n      text: 'Query Params',\n      backgroundColor: Color(theme.colors.cyan['500']).fade(0.9),\n      color: theme.colors.cyan['500'],\n    },\n    body_params: {\n      text: 'Body Params',\n      backgroundColor: Color(theme.colors.teal['500']).fade(0.9),\n      color: theme.colors.teal['500'],\n    },\n    response: {\n      text: 'Response',\n      backgroundColor: Color(theme.colors.purple['500']).fade(0.9),\n      color: theme.colors.purple['500'],\n    },\n  };\n\n  transform(labels: Array<any>): Array<any> {\n    return labels.map(label => {\n      return this.labels[label];\n    });\n  }\n\n}\n","export default \"<vex-page-layout>\\r\\n\\r\\n  <vex-page-layout-header class=\\\"pb-16 vex-layout-theme\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n    <div [class.container]=\\\"layoutCtrl.value === 'boxed'\\\"\\r\\n         [class.px-gutter]=\\\"layoutCtrl.value === 'fullwidth'\\\"\\r\\n         class=\\\"w-full flex flex-col sm:flex-row justify-between\\\">\\r\\n      <div>\\r\\n        <h1 class=\\\"title mt-0 mb-1\\\">Scenario Editor</h1>\\r\\n        <vex-breadcrumbs [crumbs]=\\\"crumbs\\\"></vex-breadcrumbs>\\r\\n      </div>\\r\\n    </div>\\r\\n  </vex-page-layout-header>\\r\\n\\r\\n  <div class=\\\"-mt-14 pt-0 overflow-hidden flex\\\">\\r\\n    <div class=\\\"h-full w-full overflow-hidden  scrumboard-list\\\" fxLayout=\\\"column\\\">\\r\\n      <!-- <div class=\\\"py-4 px-gutter\\\" fxFlex=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" vexContainer>\\r\\n        <button (click)=\\\"toggleStar(board)\\\" mat-icon-button type=\\\"button\\\">\\r\\n          <mat-icon *ngIf=\\\"board.starred\\\" [icIcon]=\\\"icons.icStar\\\" class=\\\"text-amber-500\\\"></mat-icon>\\r\\n          <mat-icon *ngIf=\\\"!board.starred\\\" [icIcon]=\\\"icons.icStarBorder\\\"></mat-icon>\\r\\n        </button>\\r\\n        <h1 class=\\\"title m-0\\\">Edit {{ board.label }}</h1>\\r\\n\\r\\n        <span fxFlex></span>\\r\\n\\r\\n        <div *ngIf=\\\"scrumboardUsers?.length > 0\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n          <img *ngFor=\\\"let user of scrumboardUsers\\\"\\r\\n               [matTooltip]=\\\"user.name\\\"\\r\\n               [src]=\\\"user.imageSrc\\\"\\r\\n               class=\\\"avatar overlapping\\\">\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n      <div @stagger\\r\\n           class=\\\"px-gutter pb-gutter min-h-0 overflow-x-auto\\\"\\r\\n           fxFlex=\\\"auto\\\"\\r\\n           fxLayout=\\\"row\\\"\\r\\n           fxLayoutAlign=\\\"center\\\"\\r\\n           fxLayoutGap=\\\"24px\\\"\\r\\n           vexContainer\\r\\n       >\\r\\n\\r\\n       <div\\r\\n          @fadeInUp\\r\\n          cdkDropListGroup\\r\\n          class=\\\"rounded bg-app-bar overflow-auto card\\\"\\r\\n          fxFlex=\\\"auto\\\"\\r\\n          fxLayout=\\\"column\\\"\\r\\n          infiniteScroll\\r\\n          [scrollWindow]=\\\"false\\\"\\r\\n          [infiniteScrollDistance]=\\\"2\\\"\\r\\n          [infiniteScrollThrottle]=\\\"50\\\"\\r\\n        >\\r\\n          <div cdkDragHandle class=\\\"p-4\\\" fxFlex=\\\"none\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <!-- <h2 class=\\\"subheading-2 font-medium m-0 select-none\\\" fxFlex=\\\"none\\\">\\r\\n              {{ scenarioRequestsList.label }}\\r\\n            </h2> -->\\r\\n\\r\\n            <button\\r\\n              [disabled]=\\\"showAddRequests\\\"\\r\\n              (click)=\\\"toggleAddRequests()\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n            >\\r\\n              ADD REQUEST\\r\\n            </button>\\r\\n          </div>\\r\\n\\r\\n          <!--\\r\\n            For each card...\\r\\n          -->\\r\\n          <div class=\\\"flex-auto vexScrollbar\\\">\\r\\n            <div (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n                 [cdkDropListConnectedTo]=\\\"getConnectedList(board)\\\"\\r\\n                 [cdkDropListData]=\\\"scenarioRequestsList.children\\\"\\r\\n                 cdkDropList\\r\\n                 class=\\\"px-4 pb-4 scrumboard-drop-zone\\\"\\r\\n                 id=\\\"{{ scenarioRequestsList.id }}\\\">\\r\\n\\r\\n              <div (click)=\\\"open(board, scenarioRequestsList, card)\\\"\\r\\n                   *ngFor=\\\"let card of scenarioRequestsList.children\\\"\\r\\n                   [cdkDragData]=\\\"card\\\"\\r\\n                   cdkDrag\\r\\n                   class=\\\"scrumboard-card card w-full cursor-pointer overflow-hidden\\\">\\r\\n                <scrumboard-card [wrapped]=\\\"showAddRequests\\\" [card]=\\\"card\\\"></scrumboard-card>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div\\r\\n          *ngIf=\\\"showAddRequests\\\"\\r\\n          @fadeInUp\\r\\n          cdkDropListGroup\\r\\n          class=\\\"rounded bg-app-bar overflow-auto card\\\"\\r\\n          fxFlex=\\\"50\\\"\\r\\n          fxLayout=\\\"column\\\"\\r\\n          infiniteScroll\\r\\n          [scrollWindow]=\\\"false\\\"\\r\\n          [infiniteScrollDistance]=\\\"2\\\"\\r\\n          [infiniteScrollThrottle]=\\\"50\\\"\\r\\n          [infiniteScrollDisabled]=\\\"false\\\"\\r\\n          (scrolled)=\\\"availableRequestsList.search.onScroll()\\\"\\r\\n        >\\r\\n          <div cdkDragHandle class=\\\"p-4\\\" fxFlex=\\\"none\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <h2 class=\\\"subheading-2 font-medium m-0 select-none\\\" fxFlex=\\\"none\\\">\\r\\n              {{ availableRequestsList.label }}\\r\\n            </h2>\\r\\n            <span fxFlex></span>\\r\\n            <button\\r\\n              (click)=\\\"toggleAddRequests()\\\"\\r\\n              mat-icon-button\\r\\n            >\\r\\n              <mat-icon [icIcon]=\\\"icClose\\\"></mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n\\r\\n          <requests-search\\r\\n            class=\\\"pl-4 pr-4 pb-4\\\"\\r\\n            *ngIf=\\\"availableRequestsList.search\\\"\\r\\n            [projectId]=\\\"scenario.projectId\\\"\\r\\n            (search)=\\\"searchAvailableRequests($event)\\\"\\r\\n          >\\r\\n          </requests-search>\\r\\n\\r\\n          <!--\\r\\n            For each card...\\r\\n          -->\\r\\n          <div class=\\\"flex-auto vexScrollbar\\\">\\r\\n            <div (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n                 [cdkDropListConnectedTo]=\\\"getConnectedList(board)\\\"\\r\\n                 [cdkDropListData]=\\\"availableRequestsList.children\\\"\\r\\n                 cdkDropList\\r\\n                 class=\\\"px-4 pb-4\\\"\\r\\n                 id=\\\"{{ availableRequestsList.id }}\\\">\\r\\n\\r\\n              <div (click)=\\\"open(board, availableRequestsList, card)\\\"\\r\\n                   *ngFor=\\\"let card of availableRequestsList.children\\\"\\r\\n                   [cdkDragData]=\\\"card\\\"\\r\\n                   cdkDrag\\r\\n                   class=\\\"scrumboard-card card w-full cursor-pointer overflow-hidden\\\">\\r\\n                <scrumboard-card [wrapped]=\\\"true\\\" [card]=\\\"card\\\"></scrumboard-card>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div #addListOriginRef class=\\\"w-full max-w-xxs rounded bg-app-bar\\\" fxFlex=\\\"none\\\">\\r\\n          <ng-template #addListTemplate let-close=\\\"close\\\">\\r\\n            <div class=\\\"card px-4 pt-3 pb-2\\\">\\r\\n              <mat-form-field class=\\\"vex-dense-form-field\\\">\\r\\n                <mat-label>List Title</mat-label>\\r\\n                <input [formControl]=\\\"addListCtrl\\\" matInput placeholder=\\\"Enter your title...\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n              <div class=\\\"mt-3\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                <button (click)=\\\"close()\\\" class=\\\"text-secondary w-8 h-8 leading-none\\\" mat-icon-button type=\\\"button\\\">\\r\\n                  <mat-icon [icIcon]=\\\"icons.icClose\\\" size=\\\"18px\\\"></mat-icon>\\r\\n                </button>\\r\\n                <button (click)=\\\"createList(board, close)\\\" color=\\\"primary\\\" mat-button type=\\\"button\\\">CREATE</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n\\r\\n          <button (click)=\\\"openAddList(board, addListTemplate, addListOriginRef)\\\"\\r\\n                  class=\\\"w-full\\\"\\r\\n                  mat-button\\r\\n                  type=\\\"button\\\">\\r\\n            <ic-icon [icon]=\\\"icons.icAdd\\\" class=\\\"mr-1 -ml-1\\\" inline=\\\"true\\\"></ic-icon>\\r\\n            <span>ADD LIST</span>\\r\\n          </button>\\r\\n        </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</vex-page-layout>\\r\\n\";","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ScenarioDetailsModule } from './pages/scenario-details/scenario-details.module';\nimport { ScenariosBuilderModule } from './pages/scenarios-builder/scenarios-builder.module';\nimport { ScenariosIndexModule } from './pages/scenarios-index/scenarios-index.module';\nimport { ScenariosRoutingModule } from './scenarios-routing.module';\n\nimport { RequestDetailsModule } from '@requests/pages/request-details/request-details.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ScenariosBuilderModule,\n    ScenariosIndexModule,\n    ScenarioDetailsModule,\n    ScenariosRoutingModule,\n    RequestDetailsModule,\n  ],\n})\nexport class ScenariosModule { }\n","export default \"::ng-deep .vex-style-dark vex-scrumboard .scrumboard-card:hover {\\n  background: rgba(0, 0, 0, 0.5);\\n}\\n\\n.scrumboard-drop-zone {\\n  min-height: 250px;\\n}\\n\\n.scrumboard-list {\\n  height: calc(100vh - 65px);\\n}\\n\\n.scrumboard-card {\\n  margin-bottom: var(--padding-8);\\n  cursor: move;\\n}\\n\\n.scrumboard-card:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.scrumboard-card:hover {\\n  background: rgba(255, 255, 255, 0.5);\\n}\\n\\n.scrumboard-card .label {\\n  border-radius: 6px;\\n  height: 6px;\\n  max-width: 32px;\\n}\\n\\n.scrumboard-card .box {\\n  padding: 3px;\\n}\\n\\n.scrumboard-card .box .box-text {\\n  font-size: 11px;\\n  font-weight: var(--font-weight-medium);\\n  margin-left: 3px;\\n  margin-right: 3px;\\n  vertical-align: bottom;\\n}\\n\\n.avatar.overlapping {\\n  border: 2px solid var(--background-card);\\n  height: 23px;\\n  margin-right: -8px;\\n  width: 23px;\\n}\\n\\n.avatar.overlapping:last-of-type {\\n  margin-right: 0;\\n}\\n\\n/*\\n  Cdk Drag & Drop\\n */\\n\\n.cdk-drag-preview {\\n  box-shadow: var(--elevation-z8);\\n}\\n\\n.cdk-drag-placeholder {\\n  opacity: 0.2;\\n}\\n\\n.cdk-drop-list-dragging .scrumboard-card:not(.cdk-drag-placeholder) {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.cdk-drag-animating {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1) !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NjZW5hcmlvcy1idWlsZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsOEJBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSwwQkFBQTtBQUNGOztBQUVBO0VBQ0UsK0JBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtBQUNGOztBQUVBO0VBQ0Usb0NBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxzQ0FBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUVBO0VBQ0Usd0NBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0FBQ0Y7O0FBRUE7O0VBQUE7O0FBSUE7RUFDRSwrQkFBQTtBQUFGOztBQUdBO0VBQ0UsWUFBQTtBQUFGOztBQUdBO0VBQ0Usc0RBQUE7QUFBRjs7QUFHQTtFQUNFLGlFQUFBO0FBQUYiLCJmaWxlIjoic2NlbmFyaW9zLWJ1aWxkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgLnZleC1zdHlsZS1kYXJrIHZleC1zY3J1bWJvYXJkIC5zY3J1bWJvYXJkLWNhcmQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbi5zY3J1bWJvYXJkLWRyb3Atem9uZSB7XG4gIG1pbi1oZWlnaHQ6IDI1MHB4O1xufVxuXG4uc2NydW1ib2FyZC1saXN0IHtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNjVweCk7XG59XG5cbi5zY3J1bWJvYXJkLWNhcmQge1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1wYWRkaW5nLTgpO1xuICBjdXJzb3I6IG1vdmU7XG59XG5cbi5zY3J1bWJvYXJkLWNhcmQ6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLnNjcnVtYm9hcmQtY2FyZDpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbn1cblxuLnNjcnVtYm9hcmQtY2FyZCAubGFiZWwge1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIGhlaWdodDogNnB4O1xuICBtYXgtd2lkdGg6IDMycHg7XG59XG5cbi5zY3J1bWJvYXJkLWNhcmQgLmJveCB7XG4gIHBhZGRpbmc6IDNweDtcbn1cblxuLnNjcnVtYm9hcmQtY2FyZCAuYm94IC5ib3gtdGV4dCB7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LW1lZGl1bSk7XG4gIG1hcmdpbi1sZWZ0OiAzcHg7XG4gIG1hcmdpbi1yaWdodDogM3B4O1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufVxuXG4uYXZhdGFyLm92ZXJsYXBwaW5nIHtcbiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tYmFja2dyb3VuZC1jYXJkKTtcbiAgaGVpZ2h0OiAyM3B4O1xuICBtYXJnaW4tcmlnaHQ6IC04cHg7XG4gIHdpZHRoOiAyM3B4O1xufVxuXG4uYXZhdGFyLm92ZXJsYXBwaW5nOmxhc3Qtb2YtdHlwZSB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cblxuLypcbiAgQ2RrIERyYWcgJiBEcm9wXG4gKi9cblxuLmNkay1kcmFnLXByZXZpZXcge1xuICBib3gtc2hhZG93OiB2YXIoLS1lbGV2YXRpb24tejgpO1xufVxuXG4uY2RrLWRyYWctcGxhY2Vob2xkZXIge1xuICBvcGFjaXR5OiAwLjI7XG59XG5cbi5jZGstZHJvcC1saXN0LWRyYWdnaW5nIC5zY3J1bWJvYXJkLWNhcmQ6bm90KC5jZGstZHJhZy1wbGFjZWhvbGRlcikge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XG59XG5cbi5jZGstZHJhZy1hbmltYXRpbmcge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSkgIWltcG9ydGFudDtcbn0iXX0= */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { ScenarioResource } from '@core/http/scenario-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScenariosResolver implements Resolve<any> {\n\n  constructor(\n    private scenarioResource: ScenarioResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.scenarioResource.index({\n      project_id: route.queryParams.project_id,\n    });\n  }\n}\n","export default \"<div class=\\\"h-full relative\\\" vexScrollbar>\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between\\\">\\n    <div class=\\\"bg-app-bar px-6 h-14 border-b sticky left-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n      <ng-container *ngIf=\\\"selection.hasValue()\\\">\\n        <h2\\n          *ngIf=\\\"selection.hasValue()\\\"\\n          class=\\\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\\\"\\n          fxFlex=\\\"none\\\"\\n          fxHide.xs\\n        >\\n          <!-- <span *ngIf=\\\"!selection.hasValue()\\\">Scenarios</span> -->\\n          {{ selection.selected.length }} scenario<span *ngIf=\\\"selection.selected.length > 1\\\">s</span> selected\\n        </h2>\\n\\n        <div class=\\\"pr-4 mr-4 border-r\\\">\\n          <button (click)=\\\"removeSelected(selection.selected)\\\"\\n                  color=\\\"primary\\\"\\n                  mat-icon-button\\n                  matTooltip=\\\"Delete selected\\\"\\n                  type=\\\"button\\\">\\n            <mat-icon [icIcon]=\\\"icDelete\\\"></mat-icon>\\n          </button>\\n        </div>\\n      </ng-container>\\n\\n      <div class=\\\"bg-card rounded-full border px-4 full-width\\\"\\n           fxFlex\\n           fxFlex.lt-md=\\\"auto\\\"\\n           fxHide.xs\\n           fxLayout=\\\"row\\\"\\n           fxLayoutAlign=\\\"start center\\\">\\n        <ic-icon [icIcon]=\\\"icSearch\\\" size=\\\"20px\\\"></ic-icon>\\n        <input\\n          [formControl]=\\\"searchCtrl\\\"\\n          class=\\\"px-4 py-2 border-0 outline-none w-full bg-transparent\\\"\\n          fxFlex\\n          placeholder=\\\"Search...\\\"\\n          type=\\\"search\\\">\\n      </div>\\n\\n      <span fxFlex></span>\\n\\n      <button class=\\\"ml-4\\\" fxFlex=\\\"none\\\" fxHide.gt-xs mat-icon-button type=\\\"button\\\">\\n        <mat-icon [icIcon]=\\\"icSearch\\\"></mat-icon>\\n      </button>\\n\\n      <button [matMenuTriggerFor]=\\\"columnFilterMenu\\\"\\n              class=\\\"ml-4\\\"\\n              fxFlex=\\\"none\\\"\\n              mat-icon-button\\n              matTooltip=\\\"Filter Columns\\\"\\n              type=\\\"button\\\">\\n        <mat-icon [icIcon]=\\\"icFilterList\\\"></mat-icon>\\n      </button>\\n    </div>\\n\\n    <table [@stagger]=\\\"dataSource.filteredData\\\"\\n           [dataSource]=\\\"dataSource\\\"\\n           class=\\\"w-full\\\"\\n           fxFlex=\\\"auto\\\"\\n           mat-table\\n           matSort>\\n\\n      <!--- Note that these columns can be defined in any order.\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n      <!-- Model Properties Column -->\\n      <ng-container *ngFor=\\\"let column of columns\\\">\\n        <ng-container *ngIf=\\\"column.type === 'button'\\\" [matColumnDef]=\\\"column.property\\\">\\n          <ng-container *ngIf=\\\"column.property === 'starred'\\\">\\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\\n            <td *matCellDef=\\\"let row\\\" [ngClass]=\\\"column.cssClasses\\\" class=\\\"w-10\\\" mat-cell>\\n              <button (click)=\\\"emitToggleStar($event, row.id)\\\" mat-icon-button type=\\\"button\\\">\\n                <mat-icon *ngIf=\\\"row[column.property]\\\" [icIcon]=\\\"icStar\\\" class=\\\"text-amber-500\\\"></mat-icon>\\n                <mat-icon *ngIf=\\\"!row[column.property]\\\" [icIcon]=\\\"icStarBorder\\\"></mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container *ngIf=\\\"column.property === 'menu'\\\">\\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\\n            <td *matCellDef=\\\"let row\\\" [ngClass]=\\\"column.cssClasses\\\" class=\\\"w-10\\\" mat-cell>\\n              <button (click)=\\\"$event.stopPropagation()\\\"\\n                      [matMenuTriggerData]=\\\"{ row: row }\\\"\\n                      [matMenuTriggerFor]=\\\"contactMenu\\\"\\n                      mat-icon-button\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icMoreVert\\\"></mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"column.type === 'checkbox'\\\" [matColumnDef]=\\\"column.property\\\">\\n          <th *matHeaderCellDef mat-header-cell>\\n            <mat-checkbox\\n              [checked]=\\\"isAllSelected()\\\"\\n              [indeterminate]=\\\"isPartiallySelected()\\\"\\n              (click)=\\\"masterToggle($event)\\\"\\n              color=\\\"primary\\\"\\n            >\\n            </mat-checkbox>\\n          </th>\\n          <td *matCellDef=\\\"let row\\\" class=\\\"w-4\\\" [ngClass]=\\\"column.cssClasses\\\" mat-cell>\\n            <mat-checkbox (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                          (click)=\\\"$event.stopPropagation()\\\"\\n                          [checked]=\\\"isSelected(row)\\\"\\n                          color=\\\"primary\\\">\\n            </mat-checkbox>\\n          </td>\\n\\n          <!-- <td *matCellDef=\\\"let row\\\" [ngClass]=\\\"column.cssClasses\\\" mat-cell (click)=\\\"$event.stopPropagation()\\\">\\n            <mat-checkbox [checked]=\\\"row[column.property]\\\"></mat-checkbox>\\n          </td> -->\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"column.type === 'date'\\\" [matColumnDef]=\\\"column.property\\\">\\n          <th class=\\\"uppercase\\\" *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\\n          <td *matCellDef=\\\"let row\\\" [ngClass]=\\\"column.cssClasses\\\" mat-cell>\\n            {{ row[column.property] | date : 'short' }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"column.type === 'image'\\\" [matColumnDef]=\\\"column.property\\\">\\n          <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\\n          <td *matCellDef=\\\"let row\\\" [ngClass]=\\\"column.cssClasses\\\" mat-cell>\\n            <img [src]=\\\"row[column.property]\\\" class=\\\"avatar h-9 w-9 align-middle my-2\\\">\\n          </td>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"column.type === 'text'\\\" [matColumnDef]=\\\"column.property\\\">\\n          <th class=\\\"uppercase\\\" *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\\n          <td *matCellDef=\\\"let row\\\" [ngClass]=\\\"column.cssClasses\\\" mat-cell>{{ row[column.property] }}</td>\\n        </ng-container>\\n      </ng-container>\\n\\n      <tr *matHeaderRowDef=\\\"visibleColumns; sticky: true\\\" mat-header-row></tr>\\n      <!--suppress UnnecessaryLabelJS -->\\n      <tr (click)=\\\"view.emit(row.id)\\\"\\n          *matRowDef=\\\"let row; columns: visibleColumns;\\\"\\n          @fadeInUp\\n          class=\\\"hover:bg-hover cursor-pointer\\\"\\n          mat-row></tr>\\n    </table>\\n\\n    <div *ngIf=\\\"dataSource.filteredData.length === 0\\\"\\n         @scaleFadeIn\\n         class=\\\"pb-10\\\"\\n         fxFlex=\\\"auto\\\"\\n         fxLayout=\\\"column\\\"\\n         fxLayoutAlign=\\\"center center\\\">\\n      <img class=\\\"m-12 h-64\\\" src=\\\"assets/img/illustrations/idea.svg\\\">\\n      <h2 class=\\\"headline m-0 text-center\\\">No results matching your filters</h2>\\n    </div>\\n\\n    <mat-paginator [fxHide]=\\\"dataSource.filteredData.length === 0\\\"\\n                   [pageSize]=\\\"pageSize\\\"\\n                   [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                   (page)=\\\"onPaginateChange($event)\\\"\\n                   class=\\\"sticky bottom-0 left-0 right-0 border-t\\\"\\n                   fxFlex=\\\"none\\\"></mat-paginator>\\n  </div>\\n</div>\\n\\n<mat-menu #contactMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" yPosition=\\\"below\\\">\\n  <ng-template let-row=\\\"row\\\" matMenuContent>\\n    <button mat-menu-item (click)=\\\"edit.emit(row)\\\">\\n      <mat-icon [icIcon]=\\\"icEdit\\\"></mat-icon>\\n      <span>Edit</span>\\n    </button>\\n\\n    <button mat-menu-item (click)=\\\"download.emit(row.id)\\\">\\n      <mat-icon [icIcon]=\\\"icCloudDownload\\\"></mat-icon>\\n      <span>Download</span>\\n    </button>\\n\\n    <button mat-menu-item (click)=\\\"delete.emit(row.id)\\\">\\n      <mat-icon [icIcon]=\\\"icDeleteForever\\\"></mat-icon>\\n      <span>Delete</span>\\n    </button>\\n  </ng-template>\\n</mat-menu>\\n\\n<mat-menu #columnFilterMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" yPosition=\\\"below\\\">\\n  <ng-container *ngFor=\\\"let column of columns; let i = index\\\">\\n    <button\\n      *ngIf=\\\"column.canHide\\\"\\n      (click)=\\\"toggleColumnVisibility($event, i, column)\\\"\\n      class=\\\"checkbox-item mat-menu-item\\\">\\n      <mat-checkbox checked=\\\"column.visible\\\" color=\\\"primary\\\">\\n        {{ column.label }}\\n      </mat-checkbox>\\n    </button>\\n  </ng-container>\\n</mat-menu>\\n\";","export default \"<form (ngSubmit)=\\\"create()\\\" [formGroup]=\\\"form\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-dialog-title>\\r\\n\\r\\n    <h2 class=\\\"headline m-0\\\" fxFlex=\\\"auto\\\">Add Requests</h2>\\r\\n<!--\\r\\n    <button [matMenuTriggerFor]=\\\"settingsMenu\\\" class=\\\"text-secondary\\\" mat-icon-button type=\\\"button\\\">\\r\\n      <mat-icon [icIcon]=\\\"icMoreVert\\\"></mat-icon>\\r\\n    </button>\\r\\n-->\\r\\n    <button class=\\\"text-secondary\\\" mat-dialog-close mat-icon-button type=\\\"button\\\">\\r\\n      <mat-icon [icIcon]=\\\"icClose\\\"></mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <mat-divider class=\\\"-mx-6 text-border\\\"></mat-divider>\\r\\n\\r\\n  <ngx-dropzone (change)=\\\"onSelect($event)\\\">\\r\\n    <ngx-dropzone-label>Select or drop a HAR file!</ngx-dropzone-label>\\r\\n    <ngx-dropzone-preview *ngFor=\\\"let f of files\\\" [removable]=\\\"true\\\" (removed)=\\\"onRemove(f)\\\">\\r\\n        <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\\r\\n    </ngx-dropzone-preview>\\r\\n  </ngx-dropzone>\\r\\n\\r\\n  <mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-button mat-dialog-close type=\\\"button\\\">CANCEL</button>\\r\\n    <button color=\\\"primary\\\" mat-button type=\\\"submit\\\">ADD</button>\\r\\n  </mat-dialog-actions>\\r\\n</form>\\r\\n\\r\\n<mat-menu #settingsMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" yPosition=\\\"below\\\">\\r\\n  <button mat-menu-item>\\r\\n    <mat-icon [icIcon]=\\\"icPrint\\\"></mat-icon>\\r\\n    <span>Print</span>\\r\\n  </button>\\r\\n\\r\\n  <button mat-menu-item>\\r\\n    <mat-icon [icIcon]=\\\"icDownload\\\"></mat-icon>\\r\\n    <span>Export</span>\\r\\n  </button>\\r\\n\\r\\n  <button mat-menu-item>\\r\\n    <mat-icon [icIcon]=\\\"icDelete\\\"></mat-icon>\\r\\n    <span>Delete</span>\\r\\n  </button>\\r\\n</mat-menu>\\r\\n\";","import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n            },] }\n];\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ],\n            },] }\n];\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n//# sourceMappingURL=accordion.js.map\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ProjectResolver } from '@projects/services/project-resolver.service';\nimport { ScenarioDetailsComponent } from '@scenarios/pages/scenario-details/scenario-details.component';\nimport { ScenariosBuilderComponent } from '@scenarios/pages/scenarios-builder/scenarios-builder.component';\nimport { ScenariosIndexComponent } from '@scenarios/pages/scenarios-index/scenarios-index.component';\nimport { RequestsResolver } from '@scenarios/services/requests-resolver.service';\nimport { ScenarioResolver } from '@scenarios/services/scenario-resolver.service';\nimport { ScenariosResolver } from '@scenarios/services/scenarios-resolver.service';\n\nimport { RequestDetailsComponent } from '@requests/pages/request-details/request-details.component';\nimport { RequestResolver } from '@requests/services/request-resolver.service';\nimport { RequestsAvailableResolver } from '@requests/services/requests-available-resolver.service';\nimport { ResponseHeadersResolver } from '@requests/services/response-headers-resolver.service';\nimport { ResponseResolver } from '@requests/services/response-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScenariosIndexComponent,\n    resolve: {\n      scenarios: ScenariosResolver,\n      project: ProjectResolver,\n    },\n  },\n  {\n    path: ':scenario_id',\n    component: ScenarioDetailsComponent,\n    resolve: {\n      scenario: ScenarioResolver,\n      requests: RequestsResolver,\n    },\n  },\n  {\n    path: ':scenario_id/editor',\n    component: ScenariosBuilderComponent,\n    resolve: {\n      project: ProjectResolver,\n      scenario: ScenarioResolver,\n      requests: RequestsResolver,\n      requestsAvailable: RequestsAvailableResolver,\n    },\n  },\n  {\n    path: ':scenario_id/requests/:request_id',\n    component: RequestDetailsComponent,\n    resolve: {\n      parentResource: ScenarioResolver,\n      request: RequestResolver,\n      response: ResponseResolver,\n      responseHeaders: ResponseHeadersResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [RouterModule],\n})\nexport class ScenariosRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { BreadcrumbsModule } from '@vex/components/breadcrumbs/breadcrumbs.module';\nimport { PageLayoutModule } from '@vex/components/page-layout/page-layout.module';\nimport { ContainerModule } from '@vex/directives/container/container.module';\nimport { ColorFadeModule } from '@vex/pipes/color/color-fade.module';\nimport { IconModule } from '@visurel/iconify-angular';\n\nimport { DataTableModule } from '@shared/components/data-table/data-table.module';\nimport { LabelModule } from '@shared/components/label/label.module';\nimport { SharedModule } from '@shared/shared.module';\n\nimport { RequestsCreateModule } from './components/requests-create/requests-create.module';\nimport { ScenarioDetailsComponent } from './scenario-details.component';\nimport { ScenarioDetailsIcons } from './services/scenario-details-icons.service';\n\n@NgModule({\n  declarations: [ScenarioDetailsComponent],\n  imports: [\n    CommonModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatButtonToggleModule,\n\n    BreadcrumbsModule,\n    ColorFadeModule,\n    ContainerModule,\n    IconModule,\n\n    SharedModule,\n    LabelModule,\n    DataTableModule,\n    RequestsCreateModule,\n  ],\n  providers: [ScenarioDetailsIcons],\n})\nexport class ScenarioDetailsModule { }\n","import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output } from '@angular/core';\nimport { fromEvent, of } from 'rxjs';\nimport { filter, map, mergeMap, sampleTime, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} selector\n * @param {?} scrollWindow\n * @param {?} defaultElement\n * @param {?} fromRoot\n * @return {?}\n */\nfunction resolveContainerElement(selector, scrollWindow, defaultElement, fromRoot) {\n    /** @type {?} */\n    const hasWindow = window && !!window.document && window.document.documentElement;\n    /** @type {?} */\n    let container = hasWindow && scrollWindow ? window : defaultElement;\n    if (selector) {\n        /** @type {?} */\n        const containerIsString = selector && hasWindow && typeof selector === 'string';\n        container = containerIsString\n            ? findElement(selector, defaultElement.nativeElement, fromRoot)\n            : selector;\n        if (!container) {\n            throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n        }\n    }\n    return container;\n}\n/**\n * @param {?} selector\n * @param {?} customRoot\n * @param {?} fromRoot\n * @return {?}\n */\nfunction findElement(selector, customRoot, fromRoot) {\n    /** @type {?} */\n    const rootEl = fromRoot ? window.document : customRoot;\n    return rootEl.querySelector(selector);\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction inputPropChanged(prop) {\n    return prop && !prop.firstChange;\n}\n/**\n * @return {?}\n */\nfunction hasWindowDefined() {\n    return typeof window !== 'undefined';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VerticalProps = {\n    clientHeight: \"clientHeight\",\n    offsetHeight: \"offsetHeight\",\n    scrollHeight: \"scrollHeight\",\n    pageYOffset: \"pageYOffset\",\n    offsetTop: \"offsetTop\",\n    scrollTop: \"scrollTop\",\n    top: \"top\"\n};\n/** @type {?} */\nconst HorizontalProps = {\n    clientHeight: \"clientWidth\",\n    offsetHeight: \"offsetWidth\",\n    scrollHeight: \"scrollWidth\",\n    pageYOffset: \"pageXOffset\",\n    offsetTop: \"offsetLeft\",\n    scrollTop: \"scrollLeft\",\n    top: \"left\"\n};\nclass AxisResolver {\n    /**\n     * @param {?=} vertical\n     */\n    constructor(vertical = true) {\n        this.vertical = vertical;\n        this.propsMap = vertical ? VerticalProps : HorizontalProps;\n    }\n    /**\n     * @return {?}\n     */\n    clientHeightKey() {\n        return this.propsMap.clientHeight;\n    }\n    /**\n     * @return {?}\n     */\n    offsetHeightKey() {\n        return this.propsMap.offsetHeight;\n    }\n    /**\n     * @return {?}\n     */\n    scrollHeightKey() {\n        return this.propsMap.scrollHeight;\n    }\n    /**\n     * @return {?}\n     */\n    pageYOffsetKey() {\n        return this.propsMap.pageYOffset;\n    }\n    /**\n     * @return {?}\n     */\n    offsetTopKey() {\n        return this.propsMap.offsetTop;\n    }\n    /**\n     * @return {?}\n     */\n    scrollTopKey() {\n        return this.propsMap.scrollTop;\n    }\n    /**\n     * @return {?}\n     */\n    topKey() {\n        return this.propsMap.top;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} alwaysCallback\n * @param {?} shouldFireScrollEvent\n * @param {?} isTriggeredCurrentTotal\n * @return {?}\n */\nfunction shouldTriggerEvents(alwaysCallback, shouldFireScrollEvent, isTriggeredCurrentTotal) {\n    if (alwaysCallback && shouldFireScrollEvent) {\n        return true;\n    }\n    if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction createResolver({ windowElement, axis }) {\n    return createResolverWithContainer({ axis, isWindow: isElementWindow(windowElement) }, windowElement);\n}\n/**\n * @param {?} resolver\n * @param {?} windowElement\n * @return {?}\n */\nfunction createResolverWithContainer(resolver, windowElement) {\n    /** @type {?} */\n    const container = resolver.isWindow || (windowElement && !windowElement.nativeElement)\n        ? windowElement\n        : windowElement.nativeElement;\n    return Object.assign(Object.assign({}, resolver), { container });\n}\n/**\n * @param {?} windowElement\n * @return {?}\n */\nfunction isElementWindow(windowElement) {\n    /** @type {?} */\n    const isWindow = ['Window', 'global'].some((/**\n     * @param {?} obj\n     * @return {?}\n     */\n    (obj) => Object.prototype.toString.call(windowElement).includes(obj)));\n    return isWindow;\n}\n/**\n * @param {?} isContainerWindow\n * @param {?} windowElement\n * @return {?}\n */\nfunction getDocumentElement(isContainerWindow, windowElement) {\n    return isContainerWindow ? windowElement.document.documentElement : null;\n}\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePoints(element, resolver) {\n    /** @type {?} */\n    const height = extractHeightForElement(resolver);\n    return resolver.isWindow\n        ? calculatePointsForWindow(height, element, resolver)\n        : calculatePointsForElement(height, element, resolver);\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForWindow(height, element, resolver) {\n    const { axis, container, isWindow } = resolver;\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    // scrolled until now / current y point\n    /** @type {?} */\n    const scrolled = height +\n        getElementPageYOffset(getDocumentElement(isWindow, container), axis, isWindow);\n    // total height / most bottom y point\n    /** @type {?} */\n    const nativeElementHeight = getElementHeight(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\n    /** @type {?} */\n    const totalToScroll = getElementOffsetTop(element.nativeElement, axis, isWindow) +\n        nativeElementHeight;\n    return { height, scrolled, totalToScroll, isWindow };\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForElement(height, element, resolver) {\n    const { axis, container } = resolver;\n    // perhaps use container.offsetTop instead of 'scrollTop'\n    /** @type {?} */\n    const scrolled = container[axis.scrollTopKey()];\n    /** @type {?} */\n    const totalToScroll = container[axis.scrollHeightKey()];\n    return { height, scrolled, totalToScroll, isWindow: false };\n}\n/**\n * @param {?} axis\n * @return {?}\n */\nfunction extractHeightPropKeys(axis) {\n    return {\n        offsetHeightKey: axis.offsetHeightKey(),\n        clientHeightKey: axis.clientHeightKey()\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction extractHeightForElement({ container, isWindow, axis }) {\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    return getElementHeight(container, isWindow, offsetHeightKey, clientHeightKey);\n}\n/**\n * @param {?} elem\n * @param {?} isWindow\n * @param {?} offsetHeightKey\n * @param {?} clientHeightKey\n * @return {?}\n */\nfunction getElementHeight(elem, isWindow, offsetHeightKey, clientHeightKey) {\n    if (isNaN(elem[offsetHeightKey])) {\n        /** @type {?} */\n        const docElem = getDocumentElement(isWindow, elem);\n        return docElem ? docElem[clientHeightKey] : 0;\n    }\n    else {\n        return elem[offsetHeightKey];\n    }\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementOffsetTop(elem, axis, isWindow) {\n    /** @type {?} */\n    const topKey = axis.topKey();\n    // elem = elem.nativeElement;\n    if (!elem.getBoundingClientRect) {\n        // || elem.css('none')) {\n        return;\n    }\n    return (elem.getBoundingClientRect()[topKey] +\n        getElementPageYOffset(elem, axis, isWindow));\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementPageYOffset(elem, axis, isWindow) {\n    /** @type {?} */\n    const pageYOffset = axis.pageYOffsetKey();\n    /** @type {?} */\n    const scrollTop = axis.scrollTopKey();\n    /** @type {?} */\n    const offsetTop = axis.offsetTopKey();\n    if (isNaN(window.pageYOffset)) {\n        return getDocumentElement(isWindow, elem)[scrollTop];\n    }\n    else if (elem.ownerDocument) {\n        return elem.ownerDocument.defaultView[pageYOffset];\n    }\n    else {\n        return elem[offsetTop];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} container\n * @param {?} distance\n * @param {?} scrollingDown\n * @return {?}\n */\nfunction shouldFireScrollEvent(container, distance, scrollingDown) {\n    /** @type {?} */\n    let remaining;\n    /** @type {?} */\n    let containerBreakpoint;\n    if (container.totalToScroll <= 0) {\n        return false;\n    }\n    /** @type {?} */\n    const scrolledUntilNow = container.isWindow ? container.scrolled : container.height + container.scrolled;\n    if (scrollingDown) {\n        remaining =\n            (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n        containerBreakpoint = distance.down / 10;\n    }\n    else {\n        /** @type {?} */\n        const totalHiddenContentHeight = container.scrolled + (container.totalToScroll - scrolledUntilNow);\n        remaining = container.scrolled / totalHiddenContentHeight;\n        containerBreakpoint = distance.up / 10;\n    }\n    /** @type {?} */\n    const shouldFireEvent = remaining <= containerBreakpoint;\n    return shouldFireEvent;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @return {?}\n */\nfunction isScrollingDownwards(lastScrollPosition, container) {\n    return lastScrollPosition < container.scrolled;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @param {?} distance\n * @return {?}\n */\nfunction getScrollStats(lastScrollPosition, container, distance) {\n    /** @type {?} */\n    const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n    return {\n        fire: shouldFireScrollEvent(container, distance, scrollDown),\n        scrollDown\n    };\n}\n/**\n * @param {?} position\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scroll\n * @param {?} scrollState\n * @param {?} triggered\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @param {?} scrolledUntilNow\n * @param {?} totalToScroll\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollState {\n    /**\n     * @param {?} __0\n     */\n    constructor({ totalToScroll }) {\n        this.lastScrollPosition = 0;\n        this.lastTotalToScroll = 0;\n        this.totalToScroll = 0;\n        this.triggered = {\n            down: 0,\n            up: 0\n        };\n        this.totalToScroll = totalToScroll;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    updateScrollPosition(position) {\n        return (this.lastScrollPosition = position);\n    }\n    /**\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateTotalToScroll(totalToScroll) {\n        if (this.lastTotalToScroll !== totalToScroll) {\n            this.lastTotalToScroll = this.totalToScroll;\n            this.totalToScroll = totalToScroll;\n        }\n    }\n    /**\n     * @param {?} scrolledUntilNow\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateScroll(scrolledUntilNow, totalToScroll) {\n        this.updateScrollPosition(scrolledUntilNow);\n        this.updateTotalToScroll(totalToScroll);\n    }\n    /**\n     * @param {?} scroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    updateTriggeredFlag(scroll, isScrollingDown) {\n        if (isScrollingDown) {\n            this.triggered.down = scroll;\n        }\n        else {\n            this.triggered.up = scroll;\n        }\n    }\n    /**\n     * @param {?} totalToScroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    isTriggeredScroll(totalToScroll, isScrollingDown) {\n        return isScrollingDown\n            ? this.triggered.down === totalToScroll\n            : this.triggered.up === totalToScroll;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction createScroller(config) {\n    const { scrollContainer, scrollWindow, element, fromRoot } = config;\n    /** @type {?} */\n    const resolver = createResolver({\n        axis: new AxisResolver(!config.horizontal),\n        windowElement: resolveContainerElement(scrollContainer, scrollWindow, element, fromRoot)\n    });\n    /** @type {?} */\n    const scrollState = new ScrollState({\n        totalToScroll: calculatePoints(element, resolver)\n    });\n    /** @type {?} */\n    const options = {\n        container: resolver.container,\n        throttle: config.throttle\n    };\n    /** @type {?} */\n    const distance = {\n        up: config.upDistance,\n        down: config.downDistance\n    };\n    return attachScrollEvent(options).pipe(mergeMap((/**\n     * @return {?}\n     */\n    () => of(calculatePoints(element, resolver)))), map((/**\n     * @param {?} positionStats\n     * @return {?}\n     */\n    (positionStats) => toInfiniteScrollParams(scrollState.lastScrollPosition, positionStats, distance))), tap((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ stats }) => scrollState.updateScroll(stats.scrolled, stats.totalToScroll))), filter((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ fire, scrollDown, stats: { totalToScroll } }) => shouldTriggerEvents(config.alwaysCallback, fire, scrollState.isTriggeredScroll(totalToScroll, scrollDown)))), tap((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ scrollDown, stats: { totalToScroll } }) => {\n        scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\n    })), map(toInfiniteScrollAction));\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction attachScrollEvent(options) {\n    /** @type {?} */\n    let obs = fromEvent(options.container, 'scroll');\n    // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n    // Let's avoid calling the function unless needed.\n    // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n    if (options.throttle) {\n        obs = obs.pipe(sampleTime(options.throttle));\n    }\n    return obs;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} stats\n * @param {?} distance\n * @return {?}\n */\nfunction toInfiniteScrollParams(lastScrollPosition, stats, distance) {\n    const { scrollDown, fire } = getScrollStats(lastScrollPosition, stats, distance);\n    return {\n        scrollDown,\n        fire,\n        stats\n    };\n}\n/** @type {?} */\nconst InfiniteScrollActions = {\n    DOWN: '[NGX_ISE] DOWN',\n    UP: '[NGX_ISE] UP'\n};\n/**\n * @param {?} response\n * @return {?}\n */\nfunction toInfiniteScrollAction(response) {\n    const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\n    return {\n        type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n        payload: {\n            currentScrollPosition\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollDirective {\n    /**\n     * @param {?} element\n     * @param {?} zone\n     */\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.scrolled = new EventEmitter();\n        this.scrolledUp = new EventEmitter();\n        this.infiniteScrollDistance = 2;\n        this.infiniteScrollUpDistance = 1.5;\n        this.infiniteScrollThrottle = 150;\n        this.infiniteScrollDisabled = false;\n        this.infiniteScrollContainer = null;\n        this.scrollWindow = true;\n        this.immediateCheck = false;\n        this.horizontal = false;\n        this.alwaysCallback = false;\n        this.fromRoot = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.infiniteScrollDisabled) {\n            this.setup();\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }) {\n        /** @type {?} */\n        const containerChanged = inputPropChanged(infiniteScrollContainer);\n        /** @type {?} */\n        const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n        /** @type {?} */\n        const distanceChanged = inputPropChanged(infiniteScrollDistance);\n        /** @type {?} */\n        const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n            (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n        if (containerChanged || disabledChanged || distanceChanged) {\n            this.destroyScroller();\n            if (shouldSetup) {\n                this.setup();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setup() {\n        if (hasWindowDefined()) {\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this.disposeScroller = createScroller({\n                    fromRoot: this.fromRoot,\n                    alwaysCallback: this.alwaysCallback,\n                    disable: this.infiniteScrollDisabled,\n                    downDistance: this.infiniteScrollDistance,\n                    element: this.element,\n                    horizontal: this.horizontal,\n                    scrollContainer: this.infiniteScrollContainer,\n                    scrollWindow: this.scrollWindow,\n                    throttle: this.infiniteScrollThrottle,\n                    upDistance: this.infiniteScrollUpDistance\n                }).subscribe((/**\n                 * @param {?} payload\n                 * @return {?}\n                 */\n                (payload) => this.zone.run((/**\n                 * @return {?}\n                 */\n                () => this.handleOnScroll(payload)))));\n            }));\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    handleOnScroll({ type, payload }) {\n        switch (type) {\n            case InfiniteScrollActions.DOWN:\n                return this.scrolled.emit(payload);\n            case InfiniteScrollActions.UP:\n                return this.scrolledUp.emit(payload);\n            default:\n                return;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyScroller();\n    }\n    /**\n     * @return {?}\n     */\n    destroyScroller() {\n        if (this.disposeScroller) {\n            this.disposeScroller.unsubscribe();\n        }\n    }\n}\nInfiniteScrollDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n            },] },\n];\n/** @nocollapse */\nInfiniteScrollDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nInfiniteScrollDirective.propDecorators = {\n    scrolled: [{ type: Output }],\n    scrolledUp: [{ type: Output }],\n    infiniteScrollDistance: [{ type: Input }],\n    infiniteScrollUpDistance: [{ type: Input }],\n    infiniteScrollThrottle: [{ type: Input }],\n    infiniteScrollDisabled: [{ type: Input }],\n    infiniteScrollContainer: [{ type: Input }],\n    scrollWindow: [{ type: Input }],\n    immediateCheck: [{ type: Input }],\n    horizontal: [{ type: Input }],\n    alwaysCallback: [{ type: Input }],\n    fromRoot: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollModule {\n}\nInfiniteScrollModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [InfiniteScrollDirective],\n                exports: [InfiniteScrollDirective],\n                imports: [],\n                providers: []\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InfiniteScrollDirective, InfiniteScrollModule };\n//# sourceMappingURL=ngx-infinite-scroll.js.map\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M5 19h14V5H5v14zm4-5.86l2.14 2.58l3-3.87L18 17H6l3-3.86z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14zm-4.86-7.14l-3 3.86L9 13.14L6 17h12z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icHistory from '@iconify/icons-ic/twotone-history';\nimport icLabel from '@iconify/icons-ic/twotone-label';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icViewHeadline from '@iconify/icons-ic/twotone-view-headline';\n\nimport { Icon } from '@visurel/iconify-angular';\n\nimport { fadeInRight400ms } from '@vex/animations/fade-in-right.animation';\nimport { stagger40ms } from '@vex/animations/stagger.animation';\n\nimport { FilterEvent } from '@data/interfaces';\nimport { Scenario } from '@data/schema/scenario';\nimport { ScenariosIndexPaginatorService } from '@scenarios/pages/scenarios-index/services/scenarios-index-paginator.service';\n\nexport interface ScenariosTableMenu {\n  type: 'link' | 'subheading';\n  id?: 'recent' | 'starred' | 'all' | 'high' | 'medium' | 'low' | 'none';\n  icon?: Icon;\n  label: string;\n  classes?: {\n    icon?: string;\n  };\n}\n\n@Component({\n  selector: 'scenarios-table-menu',\n  templateUrl: './scenarios-table-menu.component.html',\n  animations: [fadeInRight400ms, stagger40ms],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ScenariosTableMenuComponent implements OnInit {\n  @Input() initialFilter: ScenariosTableMenu['id'];\n  @Input() items: ScenariosTableMenu[] = [\n    {\n      type: 'link',\n      id: 'all',\n      icon: icViewHeadline,\n      label: 'All',\n    },\n    // {\n    //   type: 'link',\n    //   id: 'recent',\n    //   icon: icHistory,\n    //   label: 'Recent'\n    // },\n    {\n      type: 'link',\n      id: 'starred',\n      icon: icStar,\n      label: 'Starred',\n    },\n    {\n      type: 'subheading',\n      label: 'Priority',\n    },\n    {\n      type: 'link',\n      id: 'high',\n      icon: icLabel,\n      label: 'High',\n      classes: {\n        icon: 'text-primary-500',\n      },\n    },\n    {\n      type: 'link',\n      id: 'medium',\n      icon: icLabel,\n      label: 'Medium',\n      classes: {\n        icon: 'text-green-500',\n      },\n    },\n    {\n      type: 'link',\n      id: 'low',\n      icon: icLabel,\n      label: 'Low',\n      classes: {\n        icon: 'text-amber-500',\n      },\n    },\n    {\n      type: 'link',\n      id: 'none',\n      icon: icLabel,\n      label: 'None',\n      classes: {\n        icon: 'text-gray-500',\n      },\n    },\n  ];\n\n  @Output() filter = new EventEmitter<FilterEvent>();\n  @Output() create = new EventEmitter<void>();\n\n  pageSize: number;\n  activeCategory: ScenariosTableMenu['id'] = 'all';\n\n  // Icons\n  icAdd = icAdd;\n\n  constructor(\n    private scenariosIndexPaginatorService: ScenariosIndexPaginatorService\n  ) { }\n\n  ngOnInit() {\n    this.scenariosIndexPaginatorService.pageSize.subscribe(pageSize => {\n      this.pageSize = pageSize;\n    });\n  }\n\n  isActive(category: ScenariosTableMenu['id']) {\n    return this.activeCategory === category;\n  }\n\n  setFilter(category: ScenariosTableMenu['id']) {\n    this.activeCategory = category;\n\n    const event: FilterEvent = { filter: undefined };\n\n    switch (category) {\n      case 'all':\n        event.filter = undefined;\n        break;\n      case 'starred':\n        event.filter = 'starred';\n        break;\n      case 'recent':\n        event.filter = 'updated_at';\n        break;\n      case 'high':\n        event.filter = 'high_priority';\n        break;\n      case 'medium':\n        event.filter = 'medium_priority';\n        break;\n      case 'low':\n        event.filter = 'low_priority';\n        break;\n      case 'none':\n        event.filter = 'none_priority';\n        break;\n    }\n\n    this.filter.emit(event);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RequestComponentLabelPipe } from '@shared/pipes/request-component-label.pipe';\n\n@NgModule({\n  declarations: [RequestComponentLabelPipe],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    RequestComponentLabelPipe,\n  ],\n})\nexport class SharedModule { }\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M4 16h14.83L20 17.17V4H4v12zM6 6h12v2H6V6zm0 3h12v2H6V9zm0 3h12v2H6v-2z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm0 2v13.17L18.83 16H4V4h16zM6 12h12v2H6zm0-3h12v2H6zm0-3h12v2H6z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzY2VuYXJpb3MtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXF1ZXN0cy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","export default \".tag {\\n  width: 25px;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NjcnVtYm9hcmQtY2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtBQUNGIiwiZmlsZSI6InNjcnVtYm9hcmQtY2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWcge1xuICB3aWR0aDogMjVweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\";","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DateTime } from 'luxon';\n\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icAssignment from '@iconify/icons-ic/twotone-assignment';\nimport icAttachFile from '@iconify/icons-ic/twotone-attach-file';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icDescription from '@iconify/icons-ic/twotone-description';\nimport icImage from '@iconify/icons-ic/twotone-image';\nimport icInsertComment from '@iconify/icons-ic/twotone-insert-comment';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icStar from '@iconify/icons-ic/twotone-star';\n\nimport { Observable, of } from 'rxjs';\n\nimport { BodyParamResource } from '@core/http/body-param-resource.service';\nimport { HeaderResource } from '@core/http/header-resource.service';\nimport { QueryParamResource } from '@core/http/query-param-resource.service';\nimport { ResponseResource } from '@core/http/response-resource.service';\nimport { Project, Request } from '@data/schema';\n\n@Component({\n  selector: 'vex-scrumboard-dialog',\n  templateUrl: './scrumboard-dialog.component.html',\n  styleUrls: ['./scrumboard-dialog.component.scss'],\n})\nexport class ScrumboardDialogComponent implements OnInit {\n  request: Request;\n\n  components: Array<any> = [];\n  response: any;\n\n  icAssignment = icAssignment;\n  icDescription = icDescription;\n  icClose = icClose;\n  icAdd = icAdd;\n  icMoreVert = icMoreVert;\n  icDelete = icDelete;\n  icImage = icImage;\n  icAttachFile = icAttachFile;\n  icInsertComment = icInsertComment;\n  icStar = icStar;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) private data: {\n      request: Request\n    },\n    private bodyParamResource: BodyParamResource,\n    private dialogRef: MatDialogRef<ScrumboardDialogComponent>,\n    private headerResource: HeaderResource,\n    private queryParamResource: QueryParamResource,\n    private responseResource: ResponseResource\n  ) { }\n\n  ngOnInit() {\n    this.request = new Request(this.data.request);\n\n    const defaultQueryParams = {\n      project_id: this.request.projectId,\n    };\n\n    const bodyParams$ = this.bodyParamResource.index(this.request.id, defaultQueryParams);\n    const headers$ = this.headerResource.index(this.request.id, defaultQueryParams);\n    const queryParams$ = this.queryParamResource.index(this.request.id, defaultQueryParams);\n    const response$ = this.responseResource.index(this.request.id, defaultQueryParams);\n\n    this.components = [\n      {\n        title: 'Headers',\n        data$: headers$,\n      },\n      {\n        title: 'Query Params',\n        data$: queryParams$,\n      },\n      {\n          title: 'Body Params',\n          data$: bodyParams$,\n      },\n    ];\n\n    this.response = {\n      title: 'Response',\n      data$: response$,\n      accessed: true,\n    };\n  }\n\n  handleTabChange($event) {\n    const index = $event.index - 1;\n\n    if (index >= 0) {\n      this.components[index].accessed = true;\n    }\n  }\n\n// Helpers\n\n  prettyJson(json) {\n    try {\n      return JSON.stringify(JSON.parse(json), null, 2);\n    } catch (err) {\n      return json;\n    }\n  }\n}\n","export default \"<form (ngSubmit)=\\\"create()\\\" [formGroup]=\\\"form\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-dialog-title>\\r\\n    <h2 class=\\\"headline m-0\\\" fxFlex=\\\"auto\\\">{{ form.get('name').value || 'New Scenario' }}</h2>\\r\\n\\r\\n    <button [matMenuTriggerFor]=\\\"settingsMenu\\\" class=\\\"text-secondary\\\" mat-icon-button type=\\\"button\\\" matTooltip=\\\"Priority\\\">\\r\\n      <mat-icon [icIcon]=\\\"icLabel\\\" [ngClass]=\\\"selectedPriority.classes\\\"></mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"text-secondary\\\" mat-dialog-close mat-icon-button type=\\\"button\\\">\\r\\n      <mat-icon [icIcon]=\\\"icClose\\\"></mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <mat-divider class=\\\"-mx-6 text-border\\\"></mat-divider>\\r\\n\\r\\n  <mat-dialog-content>\\r\\n    <mat-tab-group>\\r\\n      <mat-tab label=\\\"General\\\">\\r\\n        <div fxLayout=\\\"column\\\">\\r\\n          <mat-form-field class=\\\"mt-6\\\">\\r\\n            <mat-label>Name</mat-label>\\r\\n            <input cdkFocusInitial formControlName=\\\"name\\\" matInput>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field>\\r\\n            <mat-label>Description</mat-label>\\r\\n            <textarea formControlName=\\\"description\\\" matInput></textarea>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Requests\\\">\\r\\n        <ngx-dropzone class=\\\"mt-6 mb-3\\\" (change)=\\\"onFileSelect($event)\\\">\\r\\n          <ngx-dropzone-label>Select or drop a HAR file!</ngx-dropzone-label>\\r\\n          <ngx-dropzone-preview *ngFor=\\\"let f of files\\\" [removable]=\\\"true\\\" (removed)=\\\"onFileRemove(f)\\\">\\r\\n              <ngx-dropzone-label>{{ f.name }}</ngx-dropzone-label>\\r\\n          </ngx-dropzone-preview>\\r\\n        </ngx-dropzone>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-button mat-dialog-close type=\\\"button\\\">CANCEL</button>\\r\\n    <button [disabled]=\\\"form.invalid\\\" color=\\\"primary\\\" mat-button type=\\\"submit\\\">CREATE</button>\\r\\n  </mat-dialog-actions>\\r\\n</form>\\r\\n\\r\\n<mat-menu #settingsMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" yPosition=\\\"below\\\">\\r\\n  <button mat-menu-item *ngFor=\\\"let priority of scenarioPriorities\\\" (click)=\\\"handlePrioritySelect(priority)\\\">\\r\\n    <span>{{ priority.name }}</span>\\r\\n  </button>\\r\\n</mat-menu>\\r\\n\";","export default \"<div @stagger class=\\\"max-w-xxxs w-full\\\">\\n  <div class=\\\"h-14 mb-6 flex px-gutter sm:px-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n    <button (click)=\\\"create.emit()\\\" class=\\\"flex-auto\\\" mat-raised-button type=\\\"button\\\">\\n      <ic-icon [icon]=\\\"icAdd\\\" class=\\\"ltr:mr-3 rtl:ml-3\\\" inline=\\\"true\\\" size=\\\"18px\\\"></ic-icon>\\n      <span>CREATE</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"px-gutter sm:px-0\\\">\\n    <ng-container *ngFor=\\\"let item of items\\\">\\n      <a (click)=\\\"setFilter(item.id)\\\"\\n         *ngIf=\\\"item.type === 'link'\\\"\\n         @fadeInRight\\n         [class.bg-hover]=\\\"isActive(item.id)\\\"\\n         [class.text-primary-500]=\\\"isActive(item.id)\\\"\\n         class=\\\"list-item mt-2 no-underline flex items-center\\\"\\n         matRipple>\\n        <ic-icon [icon]=\\\"item.icon\\\" [ngClass]=\\\"item.classes?.icon\\\" class=\\\"ltr:mr-3 rtl:ml-3\\\" size=\\\"24px\\\"></ic-icon>\\n        <span>{{ item.label }}</span>\\n      </a>\\n\\n      <h3 *ngIf=\\\"item.type === 'subheading'\\\"\\n          @fadeInRight\\n          class=\\\"caption text-secondary uppercase font-medium mb-0 mt-6\\\">{{ item.label }}</h3>\\n    </ng-container>\\n  </div>\\n</div>\\n\";","import { Pipe, PipeTransform } from '@angular/core';\nimport { DateTime } from 'luxon';\n\n@Pipe({\n  name: 'dateTokens'\n})\nexport class DateTokensPipe implements PipeTransform {\n\n  transform(value: DateTime | null, ...args: string[]): any {\n    if (!args[0]) {\n      throw new Error('[DateTokensPipe]: No args defined, please define your format.');\n    }\n\n    return value ? value.toFormat(args[0]) : '';\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Request } from '@data/schema/request';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestsDataService {\n  private subject = new BehaviorSubject([]);\n  requests$ = this.subject.asObservable();\n  requests: Request[];\n\n  constructor() { }\n\n  set(requests: Request[]) {\n    this.requests = requests;\n    this.subject.next(requests);\n  }\n\n  add(request: Request) {\n    this.requests.unshift(new Request(request));\n    this.set(this.requests);\n  }\n\n  delete(id: number) {\n    this.requests.splice(\n      this.requests.findIndex((existingRequest) => {\n        return existingRequest.id === id;\n      }), 1);\n\n    this.set(this.requests);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport icCloudDownload from '@iconify/icons-ic/twotone-cloud-download';\nimport icContacts from '@iconify/icons-ic/twotone-contacts';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icFileCopy from '@iconify/icons-ic/twotone-file-copy';\nimport icMenu from '@iconify/icons-ic/twotone-menu';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icStarBorder from '@iconify/icons-ic/twotone-star-border';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScenariosIndexIcons {\n\n  icStar = icStar;\n  icStarBorder = icStarBorder;\n  icSearch = icSearch;\n  icContacts = icContacts;\n  icMenu = icMenu;\n  icCloudDownload = icCloudDownload;\n  icEdit = icEdit;\n  icFileCopy = icFileCopy;\n\n  constructor() { }\n}\n","export default \"<div *ngIf=\\\"card.cover\\\" class=\\\"w-full h-40 overflow-hidden\\\">\\n  <img [src]=\\\"card.cover.path\\\" class=\\\"object-cover w-full h-full\\\">\\n</div>\\n\\n<div *ngIf=\\\"!wrapped\\\" class=\\\"py-3 px-3\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\n  <div \\n    *ngIf=\\\"card.position !== null\\\"\\n    class=\\\"tag box bg-app-bar text-secondary rounded caption p-1\\\"\\n    fxFlex=\\\"0 0 35px\\\"\\n    matTooltip=\\\"Position\\\"\\n  >\\n    <span class=\\\"box-text\\\">\\n      {{ card.position + 1 }}\\n    </span>\\n  </div>\\n\\n  <div fxLayout=\\\"row wrap\\\" fxFlex=\\\"grow\\\" fxLayoutGap=\\\"10px\\\">\\n    <h3 fxFlex=\\\"100px\\\" class=\\\"body-2 m-0 select-none text-secondary\\\">\\n      {{ card.method }}\\n    </h3>\\n\\n    <h3 fxFlex=\\\"85\\\" class=\\\"body-2 m-0 select-none\\\">\\n      {{ card.title }}\\n    </h3>\\n  </div>\\n\\n  <span fxFlex></span>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"mr-0\\\" fxFlex=\\\"0 0 150px\\\">\\n    <span fxFlex></span>\\n\\n    <div class=\\\"mr-2\\\" fxFlex=\\\"50px\\\" matTooltip=\\\"Status\\\">\\n      <status-label\\n        [okThreshold]=\\\"399\\\" \\n        [text]=\\\"card.status\\\"\\n        [status]=\\\"card.status\\\"\\n        [warningThreshold]=\\\"499\\\"\\n      >\\n      </status-label>\\n    </div>\\n\\n    <div fxFlex=\\\"75px\\\" matTooltip=\\\"Latency\\\">\\n      <status-label\\n        [okThreshold]=\\\"350\\\" \\n        [text]=\\\"card.latency + ' ms'\\\"\\n        [status]=\\\"card.latency\\\"\\n        [warningThreshold]=\\\"1000\\\"\\n      >\\n      </status-label>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"wrapped\\\" class=\\\"py-3 px-3\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\n    <div \\n      *ngIf=\\\"card.position !== null\\\"\\n      class=\\\"tag box bg-app-bar text-secondary rounded caption p-1\\\"\\n      fxFlex=\\\"0 0 35px\\\"\\n      matTooltip=\\\"Position\\\"\\n    >\\n      <span class=\\\"box-text\\\">\\n        {{ card.position + 1 }}\\n      </span>\\n    </div>\\n\\n    <h3 fxFlex=\\\"75px\\\" class=\\\"body-2 m-0 select-none text-secondary\\\">\\n      {{ card.method }}\\n    </h3>\\n\\n    <h3 class=\\\"body-2 m-0 select-none\\\">\\n      {{ card.title }}\\n    </h3>\\n  </div>\\n\\n  <div css=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\n    <span fxFlex></span>\\n    <div class=\\\"mr-2\\\" fxFlex=\\\"50px\\\" matTooltip=\\\"Status\\\">\\n      <status-label\\n        [okThreshold]=\\\"399\\\" \\n        [text]=\\\"card.status\\\"\\n        [status]=\\\"card.status\\\"\\n        [warningThreshold]=\\\"499\\\"\\n      >\\n      </status-label>\\n    </div>\\n\\n    <div fxFlex=\\\"75px\\\" matTooltip=\\\"Latency\\\">\\n      <status-label\\n        [okThreshold]=\\\"350\\\" \\n        [text]=\\\"card.latency + ' ms'\\\"\\n        [status]=\\\"card.latency\\\"\\n        [warningThreshold]=\\\"1000\\\"\\n      >\\n      </status-label>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \".table-link {\\n  color: #1976d2;\\n}\\n\\n.table-link:hover {\\n  text-decoration: underline;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NjZW5hcmlvLWRldGFpbHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSwwQkFBQTtBQUNGIiwiZmlsZSI6InNjZW5hcmlvLWRldGFpbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFibGUtbGluayB7XG4gIGNvbG9yOiAjMTk3NmQyO1xufVxuXG4udGFibGUtbGluazpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufSJdfQ== */\";","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport icBusiness from '@iconify/icons-ic/twotone-business';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icLabel from '@iconify/icons-ic/twotone-label';\nimport icEmail from '@iconify/icons-ic/twotone-mail';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icPerson from '@iconify/icons-ic/twotone-person';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icPrint from '@iconify/icons-ic/twotone-print';\n\nimport { Scenario, ScenarioPriorities, ScenarioPriorityData } from '@data/schema';\n\n@Component({\n  selector: 'scenarios-edit',\n  templateUrl: './scenarios-edit.component.html',\n  styleUrls: ['./scenarios-edit.component.scss'],\n})\nexport class ScenariosEditComponent implements OnInit {\n\n  form = this.fb.group({\n    name: null,\n    description: null,\n  });\n\n  onEdit = new EventEmitter<object>();\n\n  // icons\n  icMoreVert = icMoreVert;\n  icClose = icClose;\n\n  icPrint = icPrint;\n  icDownload = icDownload;\n  icDelete = icDelete;\n\n  icBusiness = icBusiness;\n  icPerson = icPerson;\n  icEmail = icEmail;\n  icPhone = icPhone;\n  icLabel = icLabel;\n\n  scenarioPriorities = ScenarioPriorityData;\n  selectedPriority;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public scenario: Scenario,\n    private dialogRef: MatDialogRef<ScenariosEditComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.form.patchValue(this.scenario);\n\n    const priorityIndex = this.scenarioPriorities.length - this.scenario.priority - 1;\n    this.selectedPriority = this.scenarioPriorities[priorityIndex];\n  }\n\n  save() {\n    const form = this.form.value;\n\n    form.priority = this.selectedPriority.value;\n\n    this.onEdit.emit(form);\n    this.dialogRef.close();\n  }\n\n  handlePrioritySelect(priority) {\n    this.selectedPriority = priority;\n  }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatFormFieldDefaultOptions, MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { debounceTime } from 'rxjs/operators';\n\nimport icCloudDownload from '@iconify/icons-ic/twotone-cloud-download';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icDeleteForever from '@iconify/icons-ic/twotone-delete-forever';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icStarBorder from '@iconify/icons-ic/twotone-star-border';\n\nimport { fadeInUp400ms } from '@vex/animations/fade-in-up.animation';\nimport { scaleFadeIn400ms } from '@vex/animations/scale-fade-in.animation';\nimport { stagger20ms } from '@vex/animations/stagger.animation';\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\n\nimport { Scenario } from '@data/schema/scenario';\nimport { ScenariosIndexPaginatorService } from '@scenarios/pages/scenarios-index/services/scenarios-index-paginator.service';\n\n@Component({\n  selector: 'scenarios-data-table',\n  templateUrl: './scenarios-data-table.component.html',\n  styleUrls: ['./scenarios-data-table.component.scss'],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard',\n      } as MatFormFieldDefaultOptions,\n    },\n  ],\n  animations: [\n    stagger20ms,\n    fadeInUp400ms,\n    scaleFadeIn400ms,\n  ],\n})\nexport class ScenariosDataTableComponent<T> implements OnInit, AfterViewInit {\n\n  @Input() set data(value: T[]) {\n    this.dataSource.data = value;\n  }\n  @Input() columns: TableColumn<T>[];\n  @Input() pageSize = 20;\n  @Input() pageSizeOptions = [10, 20, 50];\n  @Input() searchStr: string;\n\n  @Output() toggleStar = new EventEmitter<Scenario['id']>();\n  @Output() edit = new EventEmitter<Scenario['id']>();\n  @Output() delete = new EventEmitter<Scenario['id']>();\n  @Output() view = new EventEmitter<Scenario['id']>();\n  @Output() download = new EventEmitter<Scenario['id']>();\n\n  // Search\n  searchCtrl = new FormControl();\n  searchStr$ = this.searchCtrl.valueChanges.pipe(\n    debounceTime(1000)\n  );\n\n  dataSource = new MatTableDataSource<T>();\n  selection = new SelectionModel<T>(true, []);\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  icMoreVert = icMoreVert;\n  icStar = icStar;\n  icStarBorder = icStarBorder;\n  icDeleteForever = icDeleteForever;\n  icEdit = icEdit;\n  icCloudDownload = icCloudDownload;\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icFilterList = icFilterList;\n\n  constructor(\n    private scenariosIndexPaginatorService: ScenariosIndexPaginatorService\n  ) { }\n\n  ngOnInit() {\n    this.searchCtrl.patchValue(this.searchStr);\n    this.searchStr$.subscribe($event => {\n      this.dataSource.filter = ($event || '').trim().toLowerCase();\n    });\n  }\n\n  get visibleColumns(): Array<keyof T | string> {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  // ngOnChanges(changes: SimpleChanges): void {\n  //   if (changes.columns) {\n  //     return this.columns.filter(column => column.visible).map(column => column.property);\n  //   }\n  // }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n// Emit Event\n\n  emitToggleStar(event: Event, id: Scenario['id']) {\n    event.stopPropagation();\n    this.toggleStar.emit(id);\n  }\n\n  removeSelected(scenarios: Scenario[]) {\n    scenarios.forEach(s => this.delete.emit(s.id));\n\n    this.selection.clear();\n  }\n\n// View Access\n\n  toggleColumnVisibility(event, index: number, column) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    this.columns[index].visible = !this.columns[index].visible;\n  }\n\n  onPaginateChange($event) {\n    /*\n      previousPageIndex: 0\n      pageIndex: 0\n      pageSize: 50\n      length: 3\n    */\n    this.scenariosIndexPaginatorService.changePageSize($event.pageSize);\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle($event) {\n    $event.preventDefault();\n\n    if (this.isAllSelected()) {\n      this.unselectAll();\n    } else {\n      if (this.isPartiallySelected()) {\n        // If current page has something selected, then clear current page\n        // Else select everything in current page\n\n        let hasSelected = false;\n        this.dataSource.data.some(row => {\n          if (this.isSelected(row)) {\n            hasSelected = true;\n            return true;\n          }\n        });\n\n        if (hasSelected) {\n          this.unselectAll();\n        } else {\n          this.selectAll();\n        }\n      } else {\n        this.selectAll();\n      }\n    }\n  }\n\n// Helpers\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    if (!this.selection.hasValue()) {\n      return false;\n    }\n\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  isPartiallySelected() {\n    return this.selection.hasValue() && !this.isAllSelected();\n  }\n\n  isSelected(row: T) {\n    return this.selection.isSelected(row);\n  }\n\n  selectAll() {\n    this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  unselectAll() {\n    this.selection.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Scenario } from '@data/schema/scenario';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScenarioDataService {\n  private subject = new BehaviorSubject(null);\n  scenario$ = this.subject.asObservable();\n  scenario: Scenario;\n\n  constructor() { }\n\n  set(scenario: Scenario) {\n    this.scenario = scenario;\n    this.subject.next(scenario);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScenariosIndexPaginatorService {\n\n  private pageSizeSource = new BehaviorSubject(20);\n  pageSize = this.pageSizeSource.asObservable();\n\n  constructor() { }\n\n  changePageSize(size: number) {\n    this.pageSizeSource.next(size);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\n\nimport { ScenariosEditComponent } from './scenarios-edit.component';\n\n@NgModule({\n  declarations: [ScenariosEditComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatInputModule,\n    MatDividerModule,\n    MatDatepickerModule,\n    IconModule,\n    ReactiveFormsModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatNativeDateModule,\n  ],\n  entryComponents: [ScenariosEditComponent],\n})\nexport class ScenariosEditModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { RelativeDateTimeModule } from '@vex/pipes/relative-date-time/relative-date-time.module';\nimport { IconModule } from '@visurel/iconify-angular';\n\nimport { ScrumboardDialogComponent } from './scrumboard-dialog.component';\n\n@NgModule({\n  declarations: [ScrumboardDialogComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n\n    MatDialogModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatTabsModule,\n\n    IconModule,\n    RelativeDateTimeModule,\n  ],\n  exports: [ScrumboardDialogComponent],\n  entryComponents: [ScrumboardDialogComponent],\n})\nexport class ScrumboardDialogModule {\n}\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { BreadcrumbsModule } from '@vex/components/breadcrumbs/breadcrumbs.module';\nimport { PageLayoutModule } from '@vex/components/page-layout/page-layout.module';\nimport { PopoverModule } from '@vex/components/popover/popover.module';\nimport { ScrollbarModule } from '@vex/components/scrollbar/scrollbar.module';\nimport { ContainerModule } from '@vex/directives/container/container.module';\nimport { DateTokensModule } from '@vex/pipes/date-tokens/date-tokens.module';\nimport { IconModule } from '@visurel/iconify-angular';\n\n// import { ScenariosBuilderRoutingModule } from './scenarios-builder-routing.module';\nimport { RequestsSearchModule } from '@requests/components/requests-search/requests-search.module';\nimport { ScrumboardDialogModule } from '@requests/components/scrumboard-dialog/scrumboard-dialog.module';\nimport { LabelModule } from '@shared/components/label/label.module';\n\nimport { ScrumboardCardComponent } from './components/scrumboard-card/scrumboard-card.component';\nimport { ScenariosBuilderComponent } from './scenarios-builder.component';\n\n@NgModule({\n  declarations: [ScenariosBuilderComponent, ScrumboardCardComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    DragDropModule,\n    ReactiveFormsModule,\n    FormsModule,\n\n    MatButtonModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatIconModule,\n\n    InfiniteScrollModule,\n\n    BreadcrumbsModule,\n    PageLayoutModule,\n    PopoverModule,\n    ScrollbarModule,\n    ContainerModule,\n    DateTokensModule,\n    IconModule,\n\n  //  ScenariosBuilderRoutingModule,\n    LabelModule,\n    ScrumboardDialogModule,\n    RequestsSearchModule,\n  ],\n})\nexport class ScenariosBuilderModule {\n}\n","export default \".vex-page-layout-header {\\n  height: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NjZW5hcmlvcy1pbmRleC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUFDRiIsImZpbGUiOiJzY2VuYXJpb3MtaW5kZXguY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmV4LXBhZ2UtbGF5b3V0LWhlYWRlciB7XG4gIGhlaWdodDogNTBweDtcbn0iXX0= */\";","export default \"<form (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"form\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-dialog-title>\\r\\n    <!-- <img *ngIf=\\\"scenario?.imageSrc\\\" [src]=\\\"scenario?.imageSrc\\\" class=\\\"avatar ltr:mr-5 rtl:ml-5\\\"> -->\\r\\n    <h2 class=\\\"headline m-0\\\" fxFlex=\\\"auto\\\">{{ form.get('name').value }}</h2>\\r\\n\\r\\n    <button [matMenuTriggerFor]=\\\"settingsMenu\\\" class=\\\"text-secondary\\\" mat-icon-button type=\\\"button\\\" matTooltip=\\\"Priority\\\">\\r\\n      <mat-icon [icIcon]=\\\"icLabel\\\" [ngClass]=\\\"selectedPriority.classes\\\"></mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"text-secondary\\\" mat-dialog-close mat-icon-button type=\\\"button\\\">\\r\\n      <mat-icon [icIcon]=\\\"icClose\\\"></mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <mat-divider class=\\\"-mx-6 text-border\\\"></mat-divider>\\r\\n\\r\\n  <mat-dialog-content fxLayout=\\\"column\\\">\\r\\n    <mat-form-field class=\\\"mt-6\\\">\\r\\n      <mat-label>Name</mat-label>\\r\\n      <input cdkFocusInitial formControlName=\\\"name\\\" matInput>\\r\\n\\r\\n      <mat-icon [icIcon]=\\\"icPerson\\\" class=\\\"ltr:mr-3 rtl:ml-3\\\" matPrefix></mat-icon>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <mat-label>Description</mat-label>\\r\\n      <textarea formControlName=\\\"description\\\" matInput></textarea>\\r\\n    </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-button mat-dialog-close type=\\\"button\\\">CANCEL</button>\\r\\n    <button color=\\\"primary\\\" mat-button type=\\\"submit\\\">SAVE CHANGES</button>\\r\\n  </mat-dialog-actions>\\r\\n</form>\\r\\n\\r\\n<mat-menu #settingsMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" yPosition=\\\"below\\\">\\r\\n  <button mat-menu-item *ngFor=\\\"let priority of scenarioPriorities\\\" (click)=\\\"handlePrioritySelect(priority)\\\">\\r\\n    <span>{{ priority.name }}</span>\\r\\n  </button>\\r\\n</mat-menu>\\r\\n\";","import { Injectable } from '@angular/core';\n\nimport { DateTime } from 'luxon';\n\nimport { Request } from '@data/schema/request';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestCardAdapterService {\n\n  constructor() { }\n\n  createCard(request: Request) {\n    return {\n      id: request.id,\n      title: request.url,\n      method: request.method,\n      status: request.status,\n      position: request.position,\n      latency: request.latency,\n      dueDate: {\n        date: DateTime.fromJSDate(request.createdAt),\n        done: false,\n      },\n      attachments: [],\n      comments: [],\n      users: [],\n      labels: [],\n    };\n  }\n}\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\r\nimport icDelete from '@iconify/icons-ic/twotone-delete';\r\nimport icEditLocation from '@iconify/icons-ic/twotone-edit-location';\r\nimport icLocationCity from '@iconify/icons-ic/twotone-location-city';\r\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\r\nimport icMyLocation from '@iconify/icons-ic/twotone-my-location';\r\nimport icPerson from '@iconify/icons-ic/twotone-person';\r\nimport icPhone from '@iconify/icons-ic/twotone-phone';\r\nimport icPrint from '@iconify/icons-ic/twotone-print';\r\n\r\n@Component({\r\n  selector: 'requests-create',\r\n  templateUrl: './requests-create.component.html',\r\n  styleUrls: ['./requests-create.component.scss'],\r\n})\r\nexport class RequestsCreateComponent implements OnInit {\r\n\r\n  onCreate = new EventEmitter<object>();\r\n\r\n  form: FormGroup;\r\n  mode: 'create';\r\n\r\n  icMoreVert = icMoreVert;\r\n  icClose = icClose;\r\n\r\n  icPrint = icPrint;\r\n  icDownload = icDownload;\r\n  icDelete = icDelete;\r\n\r\n  icPerson = icPerson;\r\n  icMyLocation = icMyLocation;\r\n  icLocationCity = icLocationCity;\r\n  icEditLocation = icEditLocation;\r\n  icPhone = icPhone;\r\n\r\n  files: File[] = [];\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\r\n              private dialogRef: MatDialogRef<RequestsCreateComponent>,\r\n              private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({});\r\n  }\r\n\r\n  create() {\r\n    if (!this.files.length) {\r\n      return;\r\n    }\r\n\r\n    const form = this.form.value;\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', this.files[0]);\r\n    formData.append('project_id', '1');\r\n\r\n    this.onCreate.emit(formData);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onSelect(event) {\r\n    console.log(event);\r\n    this.files.push(...event.addedFiles);\r\n  }\r\n\r\n  onRemove(event) {\r\n    console.log(event);\r\n    this.files.splice(this.files.indexOf(event), 1);\r\n  }\r\n}\r\n","export default \"<vex-page-layout>\\r\\n\\r\\n  <vex-page-layout-header class=\\\"vex-layout-theme pb-16\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n    <div [class.container]=\\\"layoutCtrl.value === 'boxed'\\\"\\r\\n         [class.px-gutter]=\\\"layoutCtrl.value === 'fullwidth'\\\"\\r\\n         class=\\\"w-full flex flex-col sm:flex-row justify-between\\\">\\r\\n      <div>\\r\\n        <h1 class=\\\"title mt-0 mb-1\\\">Scenario Details</h1>\\r\\n        <vex-breadcrumbs [crumbs]=\\\"crumbs\\\"></vex-breadcrumbs>\\r\\n      </div>\\r\\n    </div>\\r\\n  </vex-page-layout-header>\\r\\n\\r\\n  <vex-page-layout-content [class.container]=\\\"layoutCtrl.value === 'boxed'\\\"\\r\\n                           [class.px-gutter]=\\\"layoutCtrl.value === 'fullwidth'\\\"\\r\\n                           class=\\\"-mt-6\\\">\\r\\n    <div class=\\\"card overflow-auto -mt-14\\\">\\r\\n      <data-table\\r\\n        [buttonsTemplate]=\\\"buttonsTemplate\\\"\\r\\n        [columns]=\\\"tableColumns\\\"\\r\\n        [data]=\\\"requests\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [length]=\\\"totalRequests\\\"\\r\\n        [pageSize]=\\\"pageSize\\\"\\r\\n        [page]=\\\"page\\\"\\r\\n        [query]=\\\"indexParams.q\\\"\\r\\n        [resourceName]=\\\"'request'\\\"\\r\\n        [sortBy]=\\\"indexParams.sort_by\\\"\\r\\n        [sortOrder]=\\\"indexParams.sort_order\\\"\\r\\n        [templates]=\\\"{ components: componentsTemplate, latency: latencyTemplate, position: positionTemplate, status: statusTemplate }\\\"\\r\\n        (delete)=\\\"destroyRequest($event)\\\"\\r\\n        (globalEdit)=\\\"showBuilder()\\\"\\r\\n        (paginate)=\\\"handlePaginateChange($event)\\\"\\r\\n        (search)=\\\"searchRequests($event)\\\"\\r\\n        (sort)=\\\"sortRequests($event)\\\"\\r\\n        (view)=\\\"viewRequest($event)\\\"\\r\\n      >\\r\\n      </data-table>\\r\\n    </div>\\r\\n  </vex-page-layout-content>\\r\\n</vex-page-layout>\\r\\n\\r\\n<ng-template #componentsTemplate let-request=\\\"row\\\">\\r\\n  <div (click)=\\\"$event.stopPropagation()\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"4px\\\">\\r\\n    <div *ngFor=\\\"let label of request.components | requestComponentLabel\\\"\\r\\n          [style.background-color]=\\\"label.backgroundColor\\\"\\r\\n          [style.color]=\\\"label.color\\\"\\r\\n          class=\\\"rounded px-2 py-1 font-medium text-xs\\\"\\r\\n          fxFlex=\\\"none\\\">\\r\\n      {{ label.text }}\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- <ng-template #searchTemplate>\\r\\n  <div class=\\\"bg-card rounded-full border px-4\\\"\\r\\n        fxFlex=\\\"400px\\\"\\r\\n        fxFlex.lt-md=\\\"auto\\\"\\r\\n        fxHide.xs\\r\\n        fxLayout=\\\"row\\\"\\r\\n        fxLayoutAlign=\\\"start center\\\">\\r\\n    <ic-icon [icIcon]=\\\"icons.icSearch\\\" size=\\\"20px\\\"></ic-icon>\\r\\n    <input [formControl]=\\\"searchCtrl\\\"\\r\\n            class=\\\"px-4 py-2 border-0 outline-none w-full bg-transparent\\\"\\r\\n            placeholder=\\\"Search...\\\"\\r\\n            type=\\\"search\\\">\\r\\n  </div>\\r\\n</ng-template> -->\\r\\n\\r\\n<ng-template #statusTemplate let-request=\\\"row\\\">\\r\\n  <status-label\\r\\n    [okThreshold]=\\\"299\\\"\\r\\n    [text]=\\\"request.status\\\"\\r\\n    [status]=\\\"request.status\\\"\\r\\n    [warningThreshold]=\\\"499\\\"\\r\\n  >\\r\\n  </status-label>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #latencyTemplate let-request=\\\"row\\\">\\r\\n  <status-label\\r\\n    [okThreshold]=\\\"350\\\"\\r\\n    [text]=\\\"request.latency + ' ms'\\\"\\r\\n    [status]=\\\"request.latency\\\"\\r\\n    [warningThreshold]=\\\"1000\\\"\\r\\n  >\\r\\n  </status-label>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #buttonsTemplate let-request=\\\"row\\\">\\r\\n  <button mat-menu-item (click)=\\\"editRequest(request.id)\\\">\\r\\n    <mat-icon [icIcon]=\\\"icons.icEdit\\\"></mat-icon>\\r\\n    <span>Edit</span>\\r\\n  </button>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #positionTemplate let-request=\\\"row\\\">\\r\\n  {{ request.position + 1 }}\\r\\n</ng-template>\";","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icLabel from '@iconify/icons-ic/twotone-label';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icPrint from '@iconify/icons-ic/twotone-print';\nimport icTitle from '@iconify/icons-ic/twotone-title';\n\nimport { AliasDiscovery } from '@core/utils/alias-discovery.service';\nimport { ScenarioPriorities, ScenarioPriorityData } from '@data/schema';\n\n@Component({\n  selector: 'scenarios-create',\n  templateUrl: './scenarios-create.component.html',\n  styleUrls: ['./scenarios-create.component.scss'],\n})\nexport class ScenariosCreateComponent implements OnInit {\n  // ngx-dropzone\n  files: File[] = [];\n\n  form = this.fb.group({\n    name: new FormControl('', [Validators.required]),\n    description: '',\n  });\n\n  // icons\n  icMoreVert = icMoreVert;\n  icClose = icClose;\n  icPrint = icPrint;\n  icDownload = icDownload;\n  icDelete = icDelete;\n  icTitle = icTitle;\n  icLabel = icLabel;\n\n  onCreate = new EventEmitter<object>();\n\n  scenarioPriorities = ScenarioPriorityData;\n  selectedPriority = this.scenarioPriorities[3];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) private projectId: number,\n    private dialogRef: MatDialogRef<ScenariosCreateComponent>,\n    private fb: FormBuilder,\n    private aliasDiscovery: AliasDiscovery\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  create() {\n    const form = this.form.value;\n\n    if (!this.files.length) {\n      const formData = this.buildFormData(form);\n\n      this.onCreate.emit(formData);\n      this.dialogRef.close();\n    } else {\n      const fileReader = new FileReader();\n      fileReader.onload = (e) => {\n        // let urls: string[] = this.getHarFileUrls(fileReader.result)\n\n        // this.aliasDiscovery.discoverAll(urls).subscribe(aliasMap => {\n          const formData = this.buildFormData(form);\n          // formData.append('alias_map', JSON.stringify(aliasMap))\n\n          this.onCreate.emit(formData);\n          this.dialogRef.close();\n        // })\n      };\n      fileReader.readAsText(this.files[0]);\n    }\n  }\n\n  buildFormData(form): FormData {\n    const formData = new FormData();\n\n    formData.append('name', form.name);\n    formData.append('description', form.description);\n    formData.append('priority', this.selectedPriority.value.toString());\n\n    if (this.files[0]) {\n      formData.append('file', this.files[0]);\n    }\n\n    return formData;\n  }\n\n  getHarFileUrls(contents): string[] {\n    const data = JSON.parse(contents);\n\n    if (!data.log) { return; }\n    if (!data.log.entries) { return; }\n\n    const urls: string[] = data.log.entries.map(entry => {\n      return entry.request.url;\n    });\n\n    return urls;\n  }\n\n  onFileSelect(event) {\n    console.log(event);\n    this.files.push(...event.addedFiles);\n  }\n\n  onFileRemove(event) {\n    console.log(event);\n    this.files.splice(this.files.indexOf(event), 1);\n  }\n\n  handlePrioritySelect(priority) {\n    this.selectedPriority = priority;\n  }\n}\n","import { Clipboard } from '@angular/cdk/clipboard';\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';\n\nimport { debounceTime } from 'rxjs/operators';\n\nimport { fadeInRight400ms, scaleIn400ms, stagger40ms } from '@vex/animations';\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\n\nimport { ScenarioResource } from '@core/http/scenario-resource.service';\nimport { FileDownload, FileService, UriService  } from '@core/utils';\nimport { FileDownloadRepresentation, FilterEvent, ScenariosIndexResponse } from '@data/interfaces';\nimport { Project, Scenario } from '@data/schema';\nimport { ScenariosCreateComponent } from '@scenarios/components/scenarios-create/scenarios-create.component';\nimport { ScenariosEditComponent } from '@scenarios/components/scenarios-edit/scenarios-edit.component';\n\nimport { ScenarioDataService } from './services/scenario-data.service';\nimport { ScenariosIndexIcons } from './services/scenarios-index-icons.service';\n\n@Component({\n  selector: 'scenarios-index',\n  styleUrls: ['./scenarios-index.component.scss'],\n  templateUrl: './scenarios-index.component.html',\n  animations: [\n    stagger40ms,\n    scaleIn400ms,\n    fadeInRight400ms,\n  ],\n})\nexport class ScenariosIndexComponent implements OnInit {\n  // Breadcrumb settings\n  crumbs = [];\n\n  project: Project;\n  indexParams: any = {};\n\n  // Table\n  scenarios: Scenario[] = [];\n  totalScenarios: number;\n  page: number;\n  pageSize: number;\n  filter: string;\n\n  // search\n  // searchCtrl = new FormControl();\n  // searchStr$ = this.searchCtrl.valueChanges.pipe(\n  //   debounceTime(10)\n  // );\n\n  menuOpen = false;\n\n  // activeCategory: 'frequently' | 'starred' | 'all' | 'high' | 'medium' | 'low' | 'none' = 'all';\n  tableColumns: TableColumn<Scenario>[];\n\n  constructor(\n    public icons: ScenariosIndexIcons,\n    private activatedRoute: ActivatedRoute,\n    private clipboard: Clipboard,\n    private dialog: MatDialog,\n    private file: FileService,\n    private fileDownload: FileDownload,\n    private location: Location,\n    private route: ActivatedRoute,\n    private router: Router,\n    private scenarioDataService: ScenarioDataService,\n    private scenarioResource: ScenarioResource,\n    private snackbar: MatSnackBar,\n    private uri: UriService\n  ) { }\n\n  ngOnInit() {\n    const routeSnapshot = this.route.snapshot;\n\n    this.project = this.route.snapshot.data.project;\n\n    const scenarios = routeSnapshot.data.scenarios;\n    this.scenarios = scenarios.list;\n    this.totalScenarios = scenarios.total;\n\n    this.indexParams = { ...routeSnapshot.queryParams };\n    this.indexParams.page = this.indexParams.page || 0;\n    this.indexParams.size = this.indexParams.size || 20;\n    this.page = this.indexParams.page;\n    this.pageSize = this.indexParams.size;\n    this.filter = this.indexParams.filter;\n\n    this.crumbs.push({ name: this.project.name });\n    this.crumbs.push({ name: 'Scenarios' });\n\n    this.tableColumns = this.buildTableColumns();\n  }\n\n// API Access\n\n  getScenarios(params: any = this.indexParams) {\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const project_id = snapshot.queryParams.project_id;\n\n    params.project_id = project_id;\n\n    this.scenarioResource.index(params).subscribe(\n      (res: ScenariosIndexResponse) => {\n        this.indexParams = params; // Save params for next use\n        this.scenarios = res.list;\n        this.totalScenarios = res.total;\n\n        this.updateUrlQueryParams(params);\n      },\n      error => {\n\n      }\n    );\n  }\n\n  downloadScenario(scenarioId: Scenario['id']) {\n    this.scenarioResource.download(scenarioId).subscribe((res: FileDownloadRepresentation) => {\n      this.fileDownload.create(res);\n    });\n  }\n\n  createScenario(data: FormData) {\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const project_id = snapshot.queryParams.project_id;\n\n    data.append('project_id', project_id);\n\n    this.scenarioResource.create(data).subscribe(\n      (res: Scenario) => {\n        const clone = this.scenarios.slice();\n        clone.unshift(res);\n        this.scenarios = clone;\n      },\n      error => {\n\n      });\n  }\n\n  updateScenario(id: Scenario['id'], data) {\n    const priority = data.priority;\n    const starred = data.starred;\n    const description = data.description;\n    const name = data.name;\n    const body = {description, name, priority, starred};\n\n    this.scenarioResource.update(id, body).subscribe(\n      res => {\n        const clone = this.scenarios.slice();\n\n        for (let i = 0; i < clone.length; ++i) {\n          if (clone[i].id !== id) { continue; }\n          clone[i] = new Scenario(res);\n        }\n\n        this.scenarios = clone;\n      },\n      error => {\n\n      });\n  }\n\n  deleteScenario(scenarioId: Scenario['id']) {\n    this.scenarioResource.destroy(scenarioId).subscribe(res => {\n      this.scenarios = this.scenarios.filter((scenario: Scenario) => {\n        return scenario.id !== scenarioId;\n      });\n    });\n  }\n\n  sortScenarios(event) {\n    const column: string = event.active;\n    const direction: string = event.direction; // desc or asc\n\n    if (!direction) {\n      delete this.indexParams.sort_by;\n      delete this.indexParams.sort_order;\n    } else {\n      this.indexParams.sort_by = column;\n      this.indexParams.sort_order = direction;\n    }\n\n    this.getScenarios();\n  }\n\n  searchScenarios(queryString: String) {\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const project_id = snapshot.queryParams.project_id;\n\n    this.indexParams.page = 0;\n    this.page = 0;\n\n    if (!queryString.length) {\n      delete this.indexParams.q;\n    } else {\n      this.indexParams.q = queryString;\n    }\n\n    this.getScenarios();\n  }\n\n  filterScenarios($event: FilterEvent) {\n    if (!$event.filter) {\n      delete this.indexParams.filter;\n    } else {\n      this.indexParams.filter = $event.filter;\n    }\n\n    this.getScenarios();\n  }\n\n// View Access\n\n  viewScenario(scenarioId: Scenario['id']) {\n    const scenario: Scenario = this.scenarios.find((candidate: Scenario) => {\n      return candidate.id === scenarioId;\n    });\n\n    this.scenarioDataService.set(scenario);\n\n    const uri = new this.uri.class(this.location.path());\n    const path: string = this.file.join(uri.pathname, scenarioId);\n\n    uri.pathname = path;\n\n    this.router.navigateByUrl(uri.pathname + uri.query);\n  }\n\n  toggleScenarioStar(id: Scenario['id']) {\n    const scenario = this.scenarios.find(s => s.id === id);\n\n    if (scenario) {\n      scenario.starred = !scenario.starred;\n      this.updateScenario(id, scenario);\n    }\n  }\n\n  openCreateDialog() {\n    const dialogRef = this.dialog.open(ScenariosCreateComponent, {\n      width: '600px',\n    });\n\n    const onCreateSub = dialogRef.componentInstance.onCreate.subscribe(($event) => {\n      this.createScenario($event);\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      onCreateSub.unsubscribe();\n    });\n  }\n\n  openEditDialog(scenario: Scenario) {\n    const dialogRef = this.dialog.open(ScenariosEditComponent, {\n      data: scenario,\n      width: '600px',\n    });\n\n    const onEditSub = dialogRef.componentInstance.onEdit.subscribe(($event) => {\n      this.updateScenario(scenario.id, $event);\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      onEditSub.unsubscribe();\n    });\n  }\n\n  closeMenu() {\n    this.menuOpen = false;\n  }\n\n  // For when the screen size is small\n  openMenu() {\n    this.menuOpen = true;\n  }\n\n /*\n  *\n  * $event = {\n  *   previousPageIndex: 0\n  *   pageIndex: 0\n  *   pageSize: 50\n  *   length: 3\n  * }\n  *\n  */\n  handlePaginateChange($event) {\n    const curIndex = this.page;\n    const curSize = this.pageSize;\n    const newIndex = $event.pageIndex;\n    const newSize = $event.pageSize;\n\n    if (curSize !== newSize) {\n      this.pageSize = newSize;\n    }\n\n    if (curIndex != newIndex) {\n      this.page = newIndex;\n    }\n\n    if (curIndex != newIndex || curSize !== newSize) {\n      this.indexParams.page = newIndex;\n      this.indexParams.size = newSize;\n      this.getScenarios();\n    }\n  }\n\n  copyMockUrlToClipBoard(scenario) {\n    this.clipboard.copy(scenario.mock_url);\n    this.snackbar.open('URL copied to clipboard!', 'close', {\n      duration: 2000,\n    });\n  }\n\n// Helpers\n\n  updateUrlQueryParams(newQueryParams) {\n    const queryParams = { ...this.indexParams };\n\n    Object.entries(newQueryParams).forEach(([key, value]) => {\n      queryParams[key] = value;\n      this.indexParams[key] = value;\n    });\n\n    const url = this\n        .router\n        .createUrlTree([], {relativeTo: this.activatedRoute, queryParams})\n        .toString();\n\n    this.location.go(url);\n  }\n\n  buildTableColumns(): TableColumn<Scenario>[] {\n    return [\n      // {\n      //   label: '',\n      //   property: 'selected',\n      //   type: 'checkbox',\n      //   cssClasses: ['w-6'],\n      //   visible: true,\n      //   canHide: false,\n      // },\n      // {\n      //   label: '',\n      //   property: 'imageSrc',\n      //   type: 'image',\n      //   cssClasses: ['min-w-9']\n      // },\n      {\n        label: 'Name',\n        property: 'name',\n        type: 'text',\n        cssClasses: ['font-medium'],\n        visible: true,\n        canHide: true,\n      },\n      {\n        label: 'Requests',\n        property: 'request_count',\n        type: 'text',\n        cssClasses: ['text-secondary'],\n        visible: true,\n        canHide: true,\n      },\n      {\n        label: 'Description',\n        property: 'description',\n        type: 'text',\n        cssClasses: ['text-secondary'],\n        visible: true,\n        canHide: true,\n      },\n      {\n        label: 'Created At',\n        property: 'created_at',\n        type: 'date',\n        cssClasses: ['text-secondary'],\n        visible: false,\n        canHide: true,\n      },\n      {\n        label: 'Mock URL',\n        property: 'mock_url',\n        type: 'button',\n        cssClasses: ['text-secondary'],\n        visible: true,\n        canHide: true,\n        onclick: this.copyMockUrlToClipBoard.bind(this),\n        icon: this.icons.icFileCopy,\n      },\n      {\n        label: '',\n        property: 'starred',\n        type: 'toggleButton',\n        cssClasses: ['text-secondary', 'w-10'],\n        visible: true,\n        canHide: false,\n        icon: (scenario) => scenario.starred ? this.icons.icStar : this.icons.icStarBorder,\n      },\n      {\n        label: '',\n        property: 'menu',\n        type: 'menuButton',\n        cssClasses: ['text-secondary', 'w-10'],\n        visible: true,\n        canHide: false,\n      },\n    ];\n  }\n}\n","import { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, ElementRef, ChangeDetectorRef, Optional, SkipSelf, Output, TemplateRef, ViewContainerRef, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @docs-private\n */\nfunction toggleVisibility(element, enable) {\n    const styles = element.style;\n    styles.position = enable ? '' : 'fixed';\n    styles.top = styles.opacity = enable ? '' : '0';\n    styles.left = enable ? '' : '-999em';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document, _viewportRuler) {\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element)\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = event.target;\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\n        // `contains` on the `document`.\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._handles.find(handle => {\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains(target));\n                });\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        this.withRootElement(element);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const preview = this._preview = this._createPreviewElement();\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document, shadowRoot).appendChild(preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._config.parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && event.target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.subscribe(scrollEvent => {\n            this._updateOnScroll(scrollEvent);\n        });\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\n            this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this)\n                });\n            });\n        }\n        this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n        this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: `${this._config.zIndex || 1000}`\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event) ?\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n            // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n            // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n            // throwing an error. The value returned here will be incorrect, but since this only\n            // breaks inside a developer tool and the value is only used for secondary information,\n            // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n            (event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }) : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const previewRect = this._previewRect;\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            x = clamp(x, minX, maxX);\n            y = clamp(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = event.target;\n            // ClientRect dimensions are based on the scroll position of the page and its parent node so\n            // we have to update the cached boundary ClientRect if the user has scrolled. Check for\n            // the `document` specifically since IE doesn't support `contains` on it.\n            if (this._boundaryRect && (target === this._document ||\n                (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        const cachedPosition = this._parentPositions.positions.get(this._document);\n        return cachedPosition ? cachedPosition.scrollPosition :\n            this._viewportRuler.getViewportScrollPosition();\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param node Node to be removed.\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the element into which the drag preview should be inserted. */\nfunction getPreviewInsertionPoint(documentRef, shadowRoot) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return shadowRoot ||\n        documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp$1(fromIndex, array.length - 1);\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            const reference = activeDraggables[0].getRootElement();\n            reference.parentNode.insertBefore(placeholder, reference);\n            activeDraggables.unshift(item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        }).sort((a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                rootElement.style.transform = '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const index = findIndex(this._itemPositions, ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return (index === -1 || !this.sortPredicate(index, item, this)) ? -1 : index;\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect || !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) && items.every(item => {\n            // Note that we have to add an exception to the `enterPredicate` for items that started off\n            // in this drop list. The drag ref has logic that allows an item to return to its initial\n            // container, if it has left the initial container and none of the connected containers\n            // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n            return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n        })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._activeDraggables.filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @param array Array in which to look for matches.\n * @param predicate Function used to determine whether an item is a match.\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /** Emits when the viewport has been scrolled while the user is dragging an item. */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\nDragDropRegistry.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\nDragDrop.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup',\n                providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n            },] }\n];\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` +\n            `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\nconst ɵ0 = undefined;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate =\n            (index, drag, drop) => {\n                return this.sortPredicate(index, drag.data, drop.data);\n            };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[attr.id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                }\n            },] }\n];\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: ScrollDispatcher },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DROP_LIST_GROUP,] }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    sortPredicate: [{ type: Input, args: ['cdkDropListSortPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                },\n                providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n            },] }\n];\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }, { type: SkipSelf }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[cdkDragPlaceholder]',\n                providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n            },] }\n];\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() { return this._matchSize; }\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[cdkDragPreview]',\n                providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n            },] }\n];\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }))).subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex,\n            parentDragRef: parentDrag === null || parentDrag === void 0 ? void 0 : parentDrag._dragRef\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((handles) => {\n                const childHandleElements = handles\n                    .filter(handle => handle._parentDrag === this)\n                    .map(handle => handle.element);\n                // Usually handles are only allowed to be a descendant of the drag element, but if\n                // the consumer defined a different drag root, we should allow the drag element\n                // itself to be a handle too.\n                if (this._selfHandle && this.rootElementSelector) {\n                    childHandleElements.push(this.element);\n                }\n                this._dragRef.withHandles(childHandleElements);\n            }), \n            // Listen if the state of any of the handles changes.\n            switchMap((handles) => {\n                return merge(...handles.map(item => {\n                    return item._stateChanges.pipe(startWith(item));\n                }));\n            }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                const dragRef = this._dragRef;\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            });\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        const element = coerceElement(boundary);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            },] }\n];\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: CdkDragHandle, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [CDK_DRAG_HANDLE,] }] },\n    { type: CdkDrag, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [CDK_DRAG_PARENT,] }] }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CDK_DRAG_HANDLE, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CDK_DRAG_PREVIEW,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CDK_DRAG_PLACEHOLDER,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/** Gets the closest ancestor of an element that matches a selector. */\nfunction getClosestMatchingAncestor(element, selector) {\n    let currentElement = element.parentElement;\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            currentElement.msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n//# sourceMappingURL=drag-drop.js.map\n","export default \".members .avatar {\\n  border: 2px solid var(--background-card);\\n  box-sizing: border-box;\\n  height: 36px;\\n  margin-right: -8px;\\n  margin-top: var(--padding-4);\\n  width: 36px;\\n}\\n\\n.members .avatar:last-child {\\n  margin-right: 0;\\n}\\n\\n.labels .label {\\n  border-radius: var(--border-radius);\\n  font: var(--font-caption);\\n  height: 32px;\\n  line-height: 32px;\\n  margin-top: var(--padding-4);\\n  min-width: 32px;\\n  padding-left: var(--padding-8);\\n  padding-right: var(--padding-8);\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n          user-select: none;\\n}\\n\\n.labels .label:last-of-type {\\n  padding: 0;\\n}\\n\\n.content {\\n  max-height: 40vh;\\n}\\n\\n@media (min-width: 600px) {\\n  .content {\\n    max-height: 50vh;\\n  }\\n}\\n\\n.content {\\n  height: 400px;\\n  overflow-y: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NjcnVtYm9hcmQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0NBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLDRCQUFBO0VBQ0EsV0FBQTtBQUNGOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUVBO0VBQ0UsbUNBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLDRCQUFBO0VBQ0EsZUFBQTtFQUNBLDhCQUFBO0VBQ0EsK0JBQUE7RUFDQSx5QkFBQTtLQUFBLHNCQUFBO1VBQUEsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLGdCQUFBO0VBQ0Y7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxnQkFBQTtBQUFGIiwiZmlsZSI6InNjcnVtYm9hcmQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lbWJlcnMgLmF2YXRhciB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWJhY2tncm91bmQtY2FyZCk7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGhlaWdodDogMzZweDtcbiAgbWFyZ2luLXJpZ2h0OiAtOHB4O1xuICBtYXJnaW4tdG9wOiB2YXIoLS1wYWRkaW5nLTQpO1xuICB3aWR0aDogMzZweDtcbn1cblxuLm1lbWJlcnMgLmF2YXRhcjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG4ubGFiZWxzIC5sYWJlbCB7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xuICBmb250OiB2YXIoLS1mb250LWNhcHRpb24pO1xuICBoZWlnaHQ6IDMycHg7XG4gIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICBtYXJnaW4tdG9wOiB2YXIoLS1wYWRkaW5nLTQpO1xuICBtaW4td2lkdGg6IDMycHg7XG4gIHBhZGRpbmctbGVmdDogdmFyKC0tcGFkZGluZy04KTtcbiAgcGFkZGluZy1yaWdodDogdmFyKC0tcGFkZGluZy04KTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5sYWJlbHMgLmxhYmVsOmxhc3Qtb2YtdHlwZSB7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5jb250ZW50IHtcbiAgbWF4LWhlaWdodDogNDB2aDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gIC5jb250ZW50IHtcbiAgICBtYXgtaGVpZ2h0OiA1MHZoO1xuICB9XG59XG5cbi5jb250ZW50IHtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn0iXX0= */\";","import { ClipboardModule } from '@angular/cdk/clipboard';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { IconModule } from '@visurel/iconify-angular';\n\nimport { BreadcrumbsModule } from '@vex/components/breadcrumbs/breadcrumbs.module';\nimport { PageLayoutModule } from '@vex/components/page-layout/page-layout.module';\nimport { ScrollbarModule } from '@vex/components/scrollbar/scrollbar.module';\nimport { ContainerModule } from '@vex/directives/container/container.module';\n\nimport { ScenariosCreateModule } from '@scenarios/components/scenarios-create/scenarios-create.module';\nimport { ScenariosEditModule } from '@scenarios/components/scenarios-edit/scenarios-edit.module';\nimport { DataTableModule } from '@shared/components/data-table/data-table.module';\n\nimport { ScenariosDataTableComponent } from './components/scenarios-data-table/scenarios-data-table.component';\nimport { ScenariosTableMenuComponent } from './components/scenarios-table-menu/scenarios-table-menu.component';\nimport { ScenariosIndexComponent } from './scenarios-index.component';\nimport { ScenariosIndexIcons } from './services/scenarios-index-icons.service';\n\n@NgModule({\n  declarations: [ScenariosIndexComponent, ScenariosDataTableComponent, ScenariosTableMenuComponent],\n  imports: [\n    ClipboardModule,\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatMenuModule,\n    MatRippleModule,\n    MatDialogModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n\n    IconModule,\n\n    BreadcrumbsModule,\n    ContainerModule,\n    PageLayoutModule,\n    ScrollbarModule,\n\n    DataTableModule,\n    ScenariosEditModule,\n    ScenariosCreateModule,\n  ],\n  providers: [ScenariosIndexIcons],\n})\nexport class ScenariosIndexModule { }\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            },] }\n];\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            },] }\n];\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            },] }\n];\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            },] }\n];\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._ownHeaders.destroy();\n    }\n}\nMatAccordion.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi',\n                }\n            },] }\n];\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n//# sourceMappingURL=expansion.js.map\n","export default \"<vex-page-layout>\\n  <div class=\\\"w-full h-full flex flex-col\\\">\\n    <div class=\\\"px-gutter pt-6 pb-20 vex-layout-theme flex-none\\\">\\n      <div class=\\\"flex items-center\\\">\\n        <vex-page-layout-header fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\n          <div class=\\\"w-full flex flex-col sm:flex-row justify-between\\\">\\n            <div>\\n              <!-- <h1 class=\\\"title mt-0 mb-1\\\">{{ project.name }}</h1> -->\\n              <vex-breadcrumbs [crumbs]=\\\"crumbs\\\"></vex-breadcrumbs>\\n            </div>\\n          </div>\\n        </vex-page-layout-header>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"-mt-14 pt-0 overflow-hidden flex\\\">\\n\\n      <mat-drawer-container class=\\\"bg-transparent flex-auto flex\\\">\\n        <mat-drawer [(opened)]=\\\"menuOpen\\\" mode=\\\"over\\\">\\n          <scenarios-table-menu (get)=\\\"filterScenarios($event)\\\"\\n                                (create)=\\\"openCreateDialog()\\\"\\n                                class=\\\"sm:hidden\\\"></scenarios-table-menu>\\n        </mat-drawer>\\n        <mat-drawer-content class=\\\"p-gutter pt-0 flex-auto flex items-start\\\">\\n          <scenarios-table-menu\\n            (filter)=\\\"filterScenarios($event)\\\"\\n            (create)=\\\"openCreateDialog()\\\"\\n            class=\\\"hidden sm:block mr-6\\\">\\n          </scenarios-table-menu>\\n\\n          <div class=\\\"card h-full overflow-hidden flex-auto\\\">\\n            <data-table\\n              [buttonsTemplate]=\\\"buttonsTemplate\\\"\\n              [columns]=\\\"tableColumns\\\"\\n              [data]=\\\"scenarios\\\"\\n              [length]=\\\"totalScenarios\\\"\\n              [pageSize]=\\\"pageSize\\\"\\n              [page]=\\\"page\\\"\\n              [resourceName]=\\\"'scenario'\\\"\\n              [sortBy]=\\\"indexParams.sort_by\\\"\\n              [sortOrder]=\\\"indexParams.sort_order\\\"\\n              (toggleStar)=\\\"toggleScenarioStar($event)\\\"\\n              (delete)=\\\"deleteScenario($event)\\\"\\n              (paginate)=\\\"handlePaginateChange($event)\\\"\\n              (search)=\\\"searchScenarios($event)\\\"\\n              (sort)=\\\"sortScenarios($event)\\\"\\n              (view)=\\\"viewScenario($event)\\\"\\n            >\\n            </data-table>\\n          </div>\\n        </mat-drawer-content>\\n\\n      </mat-drawer-container>\\n    </div>\\n  </div>\\n</vex-page-layout>\\n\\n<ng-template #buttonsTemplate let-scenario=\\\"row\\\">\\n  <button mat-menu-item (click)=\\\"openEditDialog(scenario)\\\">\\n    <mat-icon [icIcon]=\\\"icons.icEdit\\\"></mat-icon>\\n    <span>Edit</span>\\n  </button>\\n\\n  <button mat-menu-item (click)=\\\"downloadScenario(scenario.id)\\\">\\n    <mat-icon [icIcon]=\\\"icons.icCloudDownload\\\"></mat-icon>\\n    <span>Download</span>\\n  </button>\\n</ng-template>\\n\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { ScenarioResource } from '@core/http/scenario-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScenarioResolver implements Resolve<any> {\n\n  constructor(\n    private scenarioResource: ScenarioResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.scenarioResource.show(route.params.scenario_id, {\n      project_id: route.queryParams.project_id,\n    });\n  }\n}\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M12 6.5c-2.49 0-4 2.02-4 4.5v6h8v-6c0-2.48-1.51-4.5-4-4.5z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { Location } from '@angular/common';\nimport { AfterViewInit, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatFormFieldDefaultOptions, MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatSelectChange } from '@angular/material/select';\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';\n\nimport { fadeInUp400ms, stagger40ms  } from '@vex/animations';\nimport { Breadcrumb } from '@vex/interfaces/breadcrumb.interface';\nimport { TableColumn } from '@vex/interfaces/table-column.interface';\n\nimport { RequestResource } from '@core/http/request-resource.service';\nimport { FileService } from '@core/utils/file.service';\nimport { RequestIndexResponse } from '@data/interfaces';\nimport { Project, Request, Scenario } from '@data/schema';\nimport { ProjectDataService } from '@projects/services/project-data.service';\nimport { ScrumboardDialogComponent } from '@requests/components/scrumboard-dialog/scrumboard-dialog.component';\n\nimport { RequestsCreateComponent } from './components/requests-create/requests-create.component';\nimport { RequestsDataService } from './services/requests-data.service';\nimport { ScenarioDetailsIcons } from './services/scenario-details-icons.service';\n\n@Component({\n  selector: 'scenario-details',\n  templateUrl: './scenario-details.component.html',\n  styleUrls: ['./scenario-details.component.scss'],\n  animations: [\n    fadeInUp400ms,\n    stagger40ms,\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard',\n      } as MatFormFieldDefaultOptions,\n    },\n  ],\n})\nexport class ScenarioDetailsComponent implements OnInit, AfterViewInit, OnDestroy {\n  layoutCtrl = new FormControl('boxed');\n  crumbs: Breadcrumb[] = [];\n\n  projectId: Project['id'];\n  scenario: Scenario;\n  requests: Request[];\n  indexParams: any = {};\n\n  // Table\n  @Input()\n  tableColumns: TableColumn<Request>[];\n  totalRequests: number;\n  page = 0;\n  pageSize = 10;\n  filter: string;\n\n  constructor(\n    public icons: ScenarioDetailsIcons,\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private location: Location,\n    private file: FileService,\n    private projectDataService: ProjectDataService,\n    private requestResource: RequestResource,\n    private requestsDataService: RequestsDataService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    const routeSnapshot =  this.route.snapshot;\n\n    this.projectId = routeSnapshot.queryParams.project_id;\n    this.scenario = routeSnapshot.data.scenario;\n\n    const requests = routeSnapshot.data.requests;\n    this.requests = requests.list;\n    this.totalRequests = requests.total;\n    this.requestsDataService.set(this.requests.map(request => {\n      return new Request(request);\n    }));\n\n    this.indexParams = { ...routeSnapshot.queryParams };\n    this.indexParams.page = this.indexParams.page || 0;\n    this.indexParams.size = this.indexParams.size || 20;\n    this.page = this.indexParams.page;\n    this.pageSize = this.indexParams.size;\n    this.filter = this.indexParams.filter;\n\n    this.buildBreadcrumbs();\n    this.tableColumns = this.buildTableColumns();\n  }\n\n  ngAfterViewInit() {}\n\n// API Access\n\n  createRequest(data: FormData) {\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const project_id = snapshot.queryParams.project_id;\n\n    data.append('project_id', project_id);\n\n    this.requestResource.create(data).subscribe(\n      (res: Request) => {\n        const clone = this.requests.slice();\n        clone.unshift(res);\n        this.requests = clone;\n      },\n      error => {\n\n      });\n  }\n\n  getRequests(params: any = { ...this.indexParams }) {\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const project_id = snapshot.queryParams.project_id;\n\n    params.project_id = project_id;\n    params.scenario_id = this.scenario.id;\n\n    this.requestResource.index(params).subscribe(\n      (res: RequestIndexResponse) => {\n        this.requests = res.list;\n        this.totalRequests = res.total;\n\n        this.requestsDataService.set(this.requests.map(request => {\n          return new Request(request);\n        }));\n\n        delete params.scenario_id;\n        this.updateUrlQueryParams(params);\n      },\n      error => {\n\n      }\n    );\n  }\n\n  destroyRequest(requestId: Request['id']) {\n    this.requestResource.destroy(requestId).subscribe(res => {\n      const clone = this.requests.filter((request: Request) => {\n        return request.id !== requestId;\n      });\n\n      for (let i = 0; i < clone.length; ++i) {\n        clone[i].position = i;\n      }\n\n      this.requests = clone;\n    });\n  }\n\n  sortRequests(event) {\n    const column: string = event.active;\n    const direction: string = event.direction; // desc or asc\n\n    if (!direction) {\n      delete this.indexParams.sort_by;\n      delete this.indexParams.sort_order;\n    } else {\n      this.indexParams.sort_by = column;\n      this.indexParams.sort_order = direction;\n    }\n\n    this.getRequests();\n  }\n\n  searchRequests(queryString: string) {\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const project_id = snapshot.queryParams.project_id;\n\n    this.indexParams.page = 0;\n    this.page = 0;\n\n    if (!queryString.length) {\n      delete this.indexParams.q;\n    } else {\n      this.indexParams.q = queryString;\n    }\n\n    this.getRequests();\n  }\n\n// View Access\n\n  viewRequest(requestId: Request['id']) {\n    const request = this.requests.find(r => {\n      return r.id === requestId;\n    });\n\n    this.dialog.open(ScrumboardDialogComponent, {\n      data: { request },\n      width: '750px',\n      maxWidth: '100%',\n      disableClose: true,\n    });\n  }\n\n  editRequest(requestId: Request['id']) {\n    const path: string = this.file.join(location.pathname, '/requests', requestId);\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n\n    this.router.navigate([path], {\n       queryParams: { project_id: snapshot.queryParams.project_id },\n    });\n  }\n\n  showEndpoint(request: Request) {\n    const path: string = this.file.join('/endpoints', request.rollupId);\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n\n    this.router.navigate([path], {\n       queryParams: { project_id: snapshot.queryParams.project_id },\n    });\n  }\n\n  openCreateDialog() {\n    const dialogRef = this.dialog.open(RequestsCreateComponent, {\n      width: '600px',\n    });\n\n    const onCreateSub = dialogRef.componentInstance.onCreate.subscribe(($event) => {\n      this.createRequest($event);\n    });\n\n    dialogRef.afterClosed().subscribe((request: Request) => {\n      onCreateSub.unsubscribe();\n    });\n  }\n\n  showBuilder() {\n    const snapshot: ActivatedRouteSnapshot = this.route.snapshot;\n    const path = `${location.pathname}/editor`;\n\n    this.router.navigate([path], {\n       queryParams: { project_id: snapshot.queryParams.project_id },\n    });\n  }\n\n  onComponentChange(change: MatSelectChange, row: Request) {\n    const requests = this.requestsDataService.requests;\n    const index = requests.findIndex(c => c === row);\n    requests[index].components = change.value;\n    this.requestsDataService.set(requests);\n  }\n\n /*\n  *\n  * $event = {\n  *   previousPageIndex: 0\n  *   pageIndex: 0\n  *   pageSize: 50\n  *   length: 3\n  * }\n  *\n  */\n  handlePaginateChange($event) {\n    const curIndex = this.page;\n    const curSize = this.pageSize;\n    const newIndex = $event.pageIndex;\n    const newSize = $event.pageSize;\n\n    if (curSize !== newSize) {\n      this.pageSize = newSize;\n    }\n\n    if (curIndex != newIndex) {\n      this.page = newIndex;\n    }\n\n    if (curIndex != newIndex || curSize !== newSize) {\n      this.indexParams.page = newIndex;\n      this.indexParams.size = newSize;\n      this.getRequests();\n    }\n  }\n\n// Helpers\n\n  updateUrlQueryParams(newQueryParams) {\n    const queryParams = { ...this.indexParams };\n\n    Object.entries(newQueryParams).forEach(([key, value]) => {\n      queryParams[key] = value;\n    });\n\n    const url = this\n        .router\n        .createUrlTree([], {relativeTo: this.activatedRoute, queryParams})\n        .toString();\n\n    this.location.go(url);\n  }\n\n  projectIdQuery() {\n    return {project_id: this.route.snapshot.queryParams.project_id};\n  }\n\n  endpointPath(request: Request) {\n    if (!request.rollupId) { return ''; }\n    return this.file.join('/endpoints', request.rollupId);\n  }\n\n  buildBreadcrumbs() {\n    // Build breadcrumb\n    if (this.projectDataService.project) {\n      this.crumbs.push({\n        name: this.projectDataService.project.name,\n      });\n    } else {\n      const o = this.projectDataService.project$.subscribe((project: Project) => {\n        if (project) {\n          this.crumbs.unshift({\n            name: project.name,\n          });\n\n          o.unsubscribe();\n        }\n      });\n      this.projectDataService.fetch(this.projectId);\n    }\n\n    this.crumbs.push({\n      name: 'Scenarios',\n      routerLink: ['/scenarios'],\n      queryParams: this.route.snapshot.queryParams,\n    });\n    this.crumbs.push({ name: this.scenario.name });\n  }\n\n  buildTableColumns(): TableColumn<Request>[] {\n    return [\n      { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true, canHide: false },\n      { label: 'Position', property: 'position', type: 'custom', visible: true, canHide: true, cssClasses: ['text-secondary'] },\n      { label: 'Method', property: 'method', type: 'text', visible: true, canHide: true, cssClasses: ['text-secondary'] },\n      { label: 'URL', property: 'url', type: 'text', visible: true, canHide: true, cssClasses: ['font-medium'] },\n      { label: 'Endpoint', property: 'endpoint', type: 'link', visible: true, canHide: true,\n        routerLink: (request: Request) => {\n          return [this.endpointPath(request)];\n        },\n        queryParams: () => {\n          return this.projectIdQuery();\n        },\n      },\n      { label: 'Status', property: 'status', type: 'custom', visible: true, canHide: true },\n      { label: 'Latency', property: 'latency', type: 'custom', visible: true, canHide: true },\n      { label: 'Components', property: 'components', type: 'custom', visible: false, canHide: true },\n      { label: 'Created At', property: 'created_at', type: 'date', visible: false, canHide: true, cssClasses: ['text-secondary'] },\n      {\n        label: '',\n        property: 'menu',\n        type: 'menuButton',\n        cssClasses: ['text-secondary', 'w-10'],\n        visible: true,\n        canHide: false,\n      },\n    ];\n  }\n\n  ngOnDestroy() { }\n}\n","import { Injectable } from '@angular/core';\n\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icAttachFile from '@iconify/icons-ic/twotone-attach-file';\nimport icClear from '@iconify/icons-ic/twotone-clear';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport icInsertComment from '@iconify/icons-ic/twotone-insert-comment';\nimport icNotifications from '@iconify/icons-ic/twotone-notifications';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icStarBorder from '@iconify/icons-ic/twotone-star-border';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScenariosBuilderIcons {\n\n  icNotifications = icNotifications;\n  icInsertComment = icInsertComment;\n  icAttachFile = icAttachFile;\n  icAdd = icAdd;\n  icClose = icClose;\n  icStar = icStar;\n  icStarBorder = icStarBorder;\n  icClear = icClear;\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { RequestResource } from '@core/http/request-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestsResolver implements Resolve<any> {\n\n  constructor(\n    private requestResource: RequestResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.requestResource.index({\n      components: true,\n      scenario_id: route.params.scenario_id,\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}