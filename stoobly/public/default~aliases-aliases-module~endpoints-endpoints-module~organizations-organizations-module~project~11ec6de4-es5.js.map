{"version":3,"sources":["webpack:///node_modules/@iconify/icons-ic/twotone-filter-list.js","webpack:///node_modules/@angular/material/fesm2015/paginator.js","webpack:///src/@vex/components/page-layout/page-layout.module.ts","webpack:///node_modules/@iconify/icons-ic/twotone-add.js","webpack:///src/@vex/components/page-layout/page-layout.component.scss","webpack:///src/@vex/components/page-layout/page-layout-content.directive.ts","webpack:///src/app/core/utils/file.service.ts","webpack:///node_modules/@angular/cdk/fesm2015/table.js","webpack:///node_modules/@angular/material/fesm2015/sort.js","webpack:///node_modules/@angular/material/fesm2015/table.js","webpack:///node_modules/@angular/material/fesm2015/button-toggle.js","webpack:///src/@vex/components/page-layout/page-layout.component.ts","webpack:///src/@vex/components/page-layout/page-layout-header.directive.ts"],"names":["data","exports","__esModule","MatPaginatorIntl","changes","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","getRangeLabel","page","pageSize","length","Math","max","startIndex","endIndex","min","Éµprov","factory","MatPaginatorIntl_Factory","token","providedIn","decorators","type","args","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorMixinBase","_MatPaginatorMixinBase","_MatPaginatorBase","_intl","_changeDetectorRef","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","_markInitialized","unsubscribe","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","disabled","_displayedPageSizeOptions","slice","indexOf","push","sort","a","b","emit","value","map","p","ctorParameters","undefined","propDecorators","color","MatPaginator","intl","changeDetectorRef","formFieldAppearance","_formFieldAppearance","selector","exportAs","template","inputs","host","changeDetection","OnPush","encapsulation","None","styles","MatPaginatorModule","imports","declarations","providers","PageLayoutModule","PageLayoutContentDirective","FileService","path","slashIndex","lastIndexOf","substr","len","i","pathLen","tok","replace","dotIndex","href","index","substring","join","mixinHasStickyInput","base","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_columnCssClassName","cssClassFriendlyName","_name","_updateColumnCssClassName","name","_setNameInput","useExisting","stickyEnd","cell","headerCell","footerCell","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","CdkFooterCell","CdkCell","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","task","_createScheduleIfNeeded","next","complete","_getScheduleObservable","pipe","schedule","isStable","Promise","resolve","onStable","CDK_ROW_TEMPLATE","BaseRowDef","_differs","_columnsDiffer","columns","currentValue","find","create","diff","column","CdkHeaderRowDef","CdkFooterRowDef","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkRowDef","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkHeaderRow","Default","CdkFooterRow","CdkRow","CdkNoDataRow","templateRef","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_cachedCellWidths","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","children","_scheduleStyleChanges","element","_removeStickyStyle","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","start","end","_addStickyStyle","rowsToStick","stickyStates","position","reverse","states","stickyHeights","elementsToStick","rowIndex","stickyHeight","Array","from","getBoundingClientRect","height","tableElement","tfoot","querySelector","dir","style","hasDirection","zIndex","_getCalculatedZIndex","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","width","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_elementRef","role","_dir","_document","_platform","_viewRepeater","_viewportRuler","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","viewChange","Number","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","change","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","ngDevMode","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","updateStickyColumnStyles","_checkStickyStates","_rowOutlet","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","forEachOperation","prevIndex","previousIndex","renderRow","$implicit","_renderRow","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","headerRowDef","footerRowDef","noDataRow","_customNoDataRow","headerRows","_getRenderedRows","thead","display","def","sticky","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","when","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","dataColumnsChanged","reduce","_forceRenderDataRows","headerColumnsChanged","footerColumnsChanged","_dataSource","dataStream","connect","isArray","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","outlet","createEmbeddedView","_getCellTemplates","cellTemplate","renderIndex","count","first","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","_trackByFn","fn","console","warn","_switchDataSource","useClass","String","fixedLayout","descendants","array","concat","CdkTextColumn","_options","justify","_syncColumnDefName","headerText","_createDefaultHeaderText","dataAccessor","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","EXPORTED_DECLARATIONS","CdkTableModule","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MatSortBase","_MatSortMixinBase","MatSort","arguments","sortables","_stateChanges","_direction","sortChange","sortable","active","getNextSortDirection","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","_disableClear","sortOrder","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","transform","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","sortButtonLabel","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","MatSortHeaderBase","_MatSortHeaderMixinBase","MatSortHeader","_sort","_columnDef","_focusMonitor","_showIndicatorHint","_arrowDirection","_disableViewStateAnimation","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","toState","_setAnimationTransitionState","fromState","register","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","deregister","visible","_isDisabled","viewState","_toggleOnInteraction","event","keyCode","preventDefault","animations","MatSortModule","MatTable","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatNoDataRow","MatTextColumn","MatTableModule","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","EMPTY","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","_updateChangeSubscription","initialized","pageChange","_paginator","filteredData","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","paginator","_updatePaginator","filteredDataLength","then","lastPageIndex","newPageIndex","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","MatButtonToggleGroup","multi","_uniqueIdCounter","MatButtonToggleChange","source","_changeDetector","defaultOptions","_vertical","_multiple","_disabled","_controlValueAccessorChangeFn","_onTouched","valueChange","appearance","_selectionModel","multiple","select","_buttonToggles","toggle","checked","isDisabled","selected","isUserInput","deferEvents","deselect","_updateModelValue","isSelected","_rawValue","_clearSelection","_selectValue","correspondingOption","_emitChangeEvent","_markForCheck","newValue","_setSelectionByValue","MatButtonToggle","vertical","MatButtonToggleBase","_MatButtonToggleMixinBase","toggleGroup","defaultTabIndex","_isSingleSelector","_checked","ariaLabelledby","parsedTabIndex","tabIndex","buttonToggleGroup","group","_isPrechecked","_isSelected","_syncButtonToggle","options","_buttonElement","focus","newChecked","_appearance","ariaLabel","MatButtonToggleModule","PageLayoutComponent","mode","PageLayoutHeaderDirective"],"mappings":"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","file":"default~aliases-aliases-module~endpoints-endpoints-module~organizations-organizations-module~project~11ec6de4-es5.js","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { CommonModule } from '@angular/common';\nimport { ÉµÉµdefineInjectable, Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} â ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.Éµprov = ÉµÉµdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\nMatPaginatorIntl.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nclass MatPaginatorMixinBase {\n}\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(MatPaginatorMixinBase));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons, } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() { return this._pageIndex; }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() { return this._length; }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() { return this._pageSize; }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() { return this._hidePageSize; }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\n_MatPaginatorBase.decorators = [\n    { type: Directive }\n];\n_MatPaginatorBase.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined }\n];\n_MatPaginatorBase.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            },] }\n];\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                    MatCommonModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n//# sourceMappingURL=paginator.js.map\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageLayoutContentDirective } from './page-layout-content.directive';\nimport { PageLayoutHeaderDirective } from './page-layout-header.directive';\nimport { PageLayoutComponent } from './page-layout.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PageLayoutComponent, PageLayoutHeaderDirective, PageLayoutContentDirective],\n  exports: [PageLayoutComponent, PageLayoutHeaderDirective, PageLayoutContentDirective]\n})\nexport class PageLayoutModule {\n}\n","var data = {\n\t\"body\": \"<path d=\\\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","export default \".vex-layout-theme-contrast {\\n  --text-opacity: 1;\\n  color: #FFF;\\n  color: rgba(255, 255, 255, var(--text-opacity));\\n}\\n\\n.vex-layout-theme-bg {\\n  --bg-opacity: 1;\\n  background-color: #5c77ff;\\n  background-color: rgba(92, 119, 255, var(--bg-opacity));\\n}\\n\\n.vex-layout-theme {\\n  --bg-opacity: 1;\\n  background-color: #5c77ff;\\n  background-color: rgba(92, 119, 255, var(--bg-opacity));\\n  --text-opacity: 1;\\n  color: #FFF;\\n  color: rgba(255, 255, 255, var(--text-opacity));\\n}\\n\\n.vex-page-layout {\\n  display: block;\\n}\\n\\n.vex-page-layout-simple .vex-page-layout-content {\\n  padding-bottom: var(--padding-gutter);\\n  padding-top: var(--padding-gutter);\\n}\\n\\n.vex-page-layout-card {\\n  padding-bottom: var(--padding);\\n}\\n\\n.vex-page-layout-card .vex-page-layout-header {\\n  margin-bottom: calc(var(--page-layout-toolbar-height) * -1);\\n  padding-bottom: var(--page-layout-toolbar-height);\\n}\\n\\n.vex-page-layout-card .vex-page-layout-content > * > .mat-tab-group .mat-tab-label,\\n.vex-page-layout-card .vex-page-layout-content > .mat-tab-group .mat-tab-label {\\n  height: var(--page-layout-toolbar-height);\\n}\\n\\n.vex-page-layout-card .vex-page-layout-content > * > .mat-tab-group .mat-tab-label.mat-tab-label-active,\\n.vex-page-layout-card .vex-page-layout-content > .mat-tab-group .mat-tab-label.mat-tab-label-active {\\n  opacity: 1;\\n}\\n\\n.vex-page-layout-header {\\n  align-items: center;\\n  box-sizing: content-box !important;\\n  display: flex;\\n  flex-direction: row;\\n  height: calc(var(--page-layout-header-height) - var(--page-layout-toolbar-height));\\n  padding-left: var(--padding);\\n  padding-right: var(--padding);\\n  place-content: center flex-start;\\n}\\n\\n.vex-page-layout-header .vex-breadcrumb a {\\n  --text-opacity: 1;\\n  color: #FFF;\\n  color: rgba(255, 255, 255, var(--text-opacity));\\n  opacity: 0.5;\\n}\\n\\n.vex-page-layout-header .vex-breadcrumb a:hover {\\n  --text-opacity: 1;\\n  color: #FFF;\\n  color: rgba(255, 255, 255, var(--text-opacity));\\n  opacity: 1;\\n}\\n\\n.vex-page-layout-header .vex-breadcrumb span {\\n  --text-opacity: 1;\\n  color: #FFF;\\n  color: rgba(255, 255, 255, var(--text-opacity));\\n  opacity: 1;\\n}\\n\\n.vex-page-layout-content {\\n  box-sizing: border-box;\\n  display: block;\\n  padding-left: var(--padding-gutter);\\n  padding-right: var(--padding-gutter);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhZ2UtbGF5b3V0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsK0NBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSx5QkFBQTtFQUNBLHVEQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0VBQ0EseUJBQUE7RUFDQSx1REFBQTtFQUNBLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLCtDQUFBO0FBQ0Y7O0FBRUE7RUFDRSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxxQ0FBQTtFQUNBLGtDQUFBO0FBQ0Y7O0FBRUE7RUFDRSw4QkFBQTtBQUNGOztBQUVBO0VBQ0UsMkRBQUE7RUFDQSxpREFBQTtBQUNGOztBQUVBOztFQUVFLHlDQUFBO0FBQ0Y7O0FBRUE7O0VBRUUsVUFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7RUFDQSxrQ0FBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGtGQUFBO0VBQ0EsNEJBQUE7RUFDQSw2QkFBQTtFQUNBLGdDQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtFQUNBLFdBQUE7RUFDQSwrQ0FBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLCtDQUFBO0VBQ0EsVUFBQTtBQUNGOztBQUVBO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsK0NBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxzQkFBQTtFQUNBLGNBQUE7RUFDQSxtQ0FBQTtFQUNBLG9DQUFBO0FBQ0YiLCJmaWxlIjoicGFnZS1sYXlvdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmV4LWxheW91dC10aGVtZS1jb250cmFzdCB7XG4gIC0tdGV4dC1vcGFjaXR5OiAxO1xuICBjb2xvcjogI0ZGRjtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgdmFyKC0tdGV4dC1vcGFjaXR5KSk7XG59XG5cbi52ZXgtbGF5b3V0LXRoZW1lLWJnIHtcbiAgLS1iZy1vcGFjaXR5OiAxO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWM3N2ZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDkyLCAxMTksIDI1NSwgdmFyKC0tYmctb3BhY2l0eSkpO1xufVxuXG4udmV4LWxheW91dC10aGVtZSB7XG4gIC0tYmctb3BhY2l0eTogMTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVjNzdmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg5MiwgMTE5LCAyNTUsIHZhcigtLWJnLW9wYWNpdHkpKTtcbiAgLS10ZXh0LW9wYWNpdHk6IDE7XG4gIGNvbG9yOiAjRkZGO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCB2YXIoLS10ZXh0LW9wYWNpdHkpKTtcbn1cblxuLnZleC1wYWdlLWxheW91dCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4udmV4LXBhZ2UtbGF5b3V0LXNpbXBsZSAudmV4LXBhZ2UtbGF5b3V0LWNvbnRlbnQge1xuICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZy1ndXR0ZXIpO1xuICBwYWRkaW5nLXRvcDogdmFyKC0tcGFkZGluZy1ndXR0ZXIpO1xufVxuXG4udmV4LXBhZ2UtbGF5b3V0LWNhcmQge1xuICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZyk7XG59XG5cbi52ZXgtcGFnZS1sYXlvdXQtY2FyZCAudmV4LXBhZ2UtbGF5b3V0LWhlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IGNhbGModmFyKC0tcGFnZS1sYXlvdXQtdG9vbGJhci1oZWlnaHQpICogLTEpO1xuICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFnZS1sYXlvdXQtdG9vbGJhci1oZWlnaHQpO1xufVxuXG4udmV4LXBhZ2UtbGF5b3V0LWNhcmQgLnZleC1wYWdlLWxheW91dC1jb250ZW50ID4gKiA+IC5tYXQtdGFiLWdyb3VwIC5tYXQtdGFiLWxhYmVsLFxuLnZleC1wYWdlLWxheW91dC1jYXJkIC52ZXgtcGFnZS1sYXlvdXQtY29udGVudCA+IC5tYXQtdGFiLWdyb3VwIC5tYXQtdGFiLWxhYmVsIHtcbiAgaGVpZ2h0OiB2YXIoLS1wYWdlLWxheW91dC10b29sYmFyLWhlaWdodCk7XG59XG5cbi52ZXgtcGFnZS1sYXlvdXQtY2FyZCAudmV4LXBhZ2UtbGF5b3V0LWNvbnRlbnQgPiAqID4gLm1hdC10YWItZ3JvdXAgLm1hdC10YWItbGFiZWwubWF0LXRhYi1sYWJlbC1hY3RpdmUsXG4udmV4LXBhZ2UtbGF5b3V0LWNhcmQgLnZleC1wYWdlLWxheW91dC1jb250ZW50ID4gLm1hdC10YWItZ3JvdXAgLm1hdC10YWItbGFiZWwubWF0LXRhYi1sYWJlbC1hY3RpdmUge1xuICBvcGFjaXR5OiAxO1xufVxuXG4udmV4LXBhZ2UtbGF5b3V0LWhlYWRlciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94ICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGhlaWdodDogY2FsYyh2YXIoLS1wYWdlLWxheW91dC1oZWFkZXItaGVpZ2h0KSAtIHZhcigtLXBhZ2UtbGF5b3V0LXRvb2xiYXItaGVpZ2h0KSk7XG4gIHBhZGRpbmctbGVmdDogdmFyKC0tcGFkZGluZyk7XG4gIHBhZGRpbmctcmlnaHQ6IHZhcigtLXBhZGRpbmcpO1xuICBwbGFjZS1jb250ZW50OiBjZW50ZXIgZmxleC1zdGFydDtcbn1cblxuLnZleC1wYWdlLWxheW91dC1oZWFkZXIgLnZleC1icmVhZGNydW1iIGEge1xuICAtLXRleHQtb3BhY2l0eTogMTtcbiAgY29sb3I6ICNGRkY7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIHZhcigtLXRleHQtb3BhY2l0eSkpO1xuICBvcGFjaXR5OiAwLjU7XG59XG5cbi52ZXgtcGFnZS1sYXlvdXQtaGVhZGVyIC52ZXgtYnJlYWRjcnVtYiBhOmhvdmVyIHtcbiAgLS10ZXh0LW9wYWNpdHk6IDE7XG4gIGNvbG9yOiAjRkZGO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCB2YXIoLS10ZXh0LW9wYWNpdHkpKTtcbiAgb3BhY2l0eTogMTtcbn1cblxuLnZleC1wYWdlLWxheW91dC1oZWFkZXIgLnZleC1icmVhZGNydW1iIHNwYW4ge1xuICAtLXRleHQtb3BhY2l0eTogMTtcbiAgY29sb3I6ICNGRkY7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIHZhcigtLXRleHQtb3BhY2l0eSkpO1xuICBvcGFjaXR5OiAxO1xufVxuXG4udmV4LXBhZ2UtbGF5b3V0LWNvbnRlbnQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy1sZWZ0OiB2YXIoLS1wYWRkaW5nLWd1dHRlcik7XG4gIHBhZGRpbmctcmlnaHQ6IHZhcigtLXBhZGRpbmctZ3V0dGVyKTtcbn0iXX0= */\";","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[vexPageLayoutContent],vex-page-layout-content',\n  host: {\n    class: 'vex-page-layout-content'\n  }\n})\nexport class PageLayoutContentDirective {\n\n  constructor() { }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileService {\n\n  constructor() { }\n\n  basename(path: string) {\n    const slashIndex = path.lastIndexOf('/');\n\n    return path.substr(slashIndex + 1);\n  }\n\n  join(...args: any[]) {\n    let path = args[0];\n    const len = args.length;\n\n    for (let i = 1; i < len; ++i) {\n      const pathLen = path.length;\n      let tok = args[i];\n\n      if (tok[0] === '/') {\n          tok = tok.replace('/', '');\n      }\n\n      if (path[pathLen - 1] === '/') {\n          path += tok;\n      } else {\n          path += ('/' + tok);\n      }\n    }\n\n    return path;\n  }\n\n  dirname(path: string) {\n    if (!path) { return; }\n    const slashIndex = path.lastIndexOf('/');\n    if (slashIndex === 0) { return '/'; }\n    return path.substr(0, slashIndex);\n  }\n\n  extension(path: string) {\n    const dotIndex = path.lastIndexOf('.');\n\n    if (dotIndex === -1) {\n        return undefined;\n    }\n\n    return path.substr(dotIndex + 1);\n  }\n\n  hrefAppend(href: string, path: string) {\n    const index = href.indexOf('?');\n    let p = href.substring(0, index);\n\n    p = this.join((p.length === 0 ? href : p), path);\n\n    if (index !== -1) {\n        return (p + href.substr(index));\n    } else {\n        return p;\n    }\n  }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.decorators = [\n    { type: Directive, args: [{ selector: '[cdkCellDef]' },] }\n];\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.decorators = [\n    { type: Directive, args: [{ selector: '[cdkHeaderCellDef]' },] }\n];\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.decorators = [\n    { type: Directive, args: [{ selector: '[cdkFooterCellDef]' },] }\n];\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n            },] }\n];\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader',\n                },\n            },] }\n];\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell',\n                },\n            },] }\n];\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell',\n                },\n            },] }\n];\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable ?\n            from(Promise.resolve(undefined)) :\n            this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.decorators = [\n    { type: Injectable }\n];\n_CoalescedStyleScheduler.ctorParameters = () => [\n    { type: NgZone }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.decorators = [\n    { type: Directive }\n];\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n            },] }\n];\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n            },] }\n];\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n            },] }\n];\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[cdkCellOutlet]' },] }\n];\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            },] }\n];\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            },] }\n];\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            },] }\n];\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkNoDataRow.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[cdkNoDataRow]'\n            },] }\n];\nCdkNoDataRow.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \n    /**\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._cachedCellWidths = [];\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i]);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i]);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyHeight = 0; rowIndex < rows.length; rowIndex++) {\n            stickyHeights[rowIndex] = stickyHeight;\n            if (!states[rowIndex]) {\n                continue;\n            }\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            if (rowIndex !== rows.length - 1) {\n                stickyHeight += row.getBoundingClientRect().height;\n            }\n        }\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const height = stickyHeights[rowIndex];\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, height);\n                }\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Schedules styles to be applied when the style scheduler deems appropriate.\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\n     */\n    _scheduleStyleChanges(changes) {\n        if (this._coalescedStyleScheduler) {\n            this._coalescedStyleScheduler.schedule(changes);\n        }\n        else {\n            changes();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[rowOutlet]' },] }\n];\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[headerRowOutlet]' },] }\n];\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[footerRowOutlet]' },] }\n];\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[noDataRowOutlet]' },] }\n];\nNoDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \n    /**\n     * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\n     *    parameters to become required.\n     * @breaking-change 11.0.0\n     */\n    _viewRepeater, _coalescedStyleScheduler, \n    // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\n    // this property will never be null.\n    // tslint:disable-next-line: lightweight-tokens\n    _viewportRuler) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        // Table cell dimensions may change after resizing the window. Signal the sticky styler to\n        // refresh its cache of cell widths the next time sticky styles are updated.\n        // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        if (this._viewportRuler) {\n            this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n                this._forceRecalculateCellWidths = true;\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\n        // `else` clause once `_viewRepeater` is turned into a required parameter.\n        if (this._viewRepeater) {\n            this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n                if (change.operation === 1 /* INSERTED */ && change.context) {\n                    this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n                }\n            });\n        }\n        else {\n            changes.forEachOperation((record, prevIndex, currentIndex) => {\n                if (record.previousIndex == null) {\n                    const renderRow = record.item;\n                    const rowDef = renderRow.rowDef;\n                    const context = { $implicit: renderRow.data };\n                    this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\n                }\n                else if (currentIndex == null) {\n                    viewContainer.remove(prevIndex);\n                }\n                else {\n                    const view = viewContainer.get(prevIndex);\n                    viewContainer.move(view, currentIndex);\n                }\n            });\n        }\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\n            || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (noDataRow) {\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\n            if (shouldShow !== this._isShowingNoDataRow) {\n                const container = this._noDataRowOutlet.viewContainer;\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                this._isShowingNoDataRow = shouldShow;\n            }\n        }\n    }\n}\nCdkTable.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table',\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [\n                    { provide: CDK_TABLE, useExisting: CdkTable },\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                ],\n                styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\n            },] }\n];\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Optional }, { type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    fixedLayout: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }],\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\n};\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            },] }\n];\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.decorators = [\n    { type: NgModule, args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                imports: [ScrollingModule]\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n//# sourceMappingURL=table.js.map\n","import { EventEmitter, Directive, Input, Output, ÉµÉµdefineInjectable, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {\n}\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() { return this._direction; }\n    set direction(direction) {\n        if (direction && direction !== 'asc' && direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.decorators = [\n    { type: Directive, args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            },] }\n];\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         * @deprecated Not used anymore. To be removed.\n         * @breaking-change 8.0.0\n         */\n        this.sortButtonLabel = (id) => {\n            return `Change sorting for ${id}`;\n        };\n    }\n}\nMatSortHeaderIntl.Éµprov = ÉµÉµdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\nMatSortHeaderIntl.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {\n}\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    constructor(_intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            _changeDetectorRef.markForCheck();\n        });\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._toggleOnInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.decorators = [\n    { type: Component, args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     role=\\\"button\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            },] }\n];\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n//# sourceMappingURL=sort.js.map\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table',\n                    '[class.mat-table-fixed-layout]': 'fixedLayout',\n                },\n                providers: [\n                    // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                    //  is only included in the build if used.\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"]\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            },] }\n];\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            },] }\n];\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            },] }\n];\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ],\n            },] }\n];\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader',\n                },\n            },] }\n];\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell',\n                },\n            },] }\n];\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell',\n                },\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n            },] }\n];\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n            },] }\n];\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n            },] }\n];\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            },] }\n];\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            },] }\n];\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            },] }\n];\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n}\nMatNoDataRow.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[matNoDataRow]',\n                providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS,\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + 'â¬';\n            }, '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() { return this._data.value; }\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() { return this._filter.value; }\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() { return this._sort; }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() { return this._paginator; }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort ?\n            merge(this._sort.sortChange, this._sort.initialized) :\n            of(null);\n        const pageChange = this._paginator ?\n            merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) :\n            of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData = (this.filter == null || this.filter === '') ? data :\n            data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * @docs-private\n     */\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n//# sourceMappingURL=table.js.map\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true\n};\nlet _uniqueIdCounter = 0;\n/** Change event object emitted by MatButtonToggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The MatButtonToggle that emits the event. */\n    source, \n    /** The value assigned to the MatButtonToggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${_uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** `name` attribute for the underlying `input` element. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => {\n                toggle.name = this._name;\n                toggle._markForCheck();\n            });\n        }\n    }\n    /** Whether the toggle group is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : (selected[0] || null);\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => toggle._markForCheck());\n        }\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        const selected = this.selected;\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        const event = new MatButtonToggleChange(source, this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(isUserInput));\n        }\n        else {\n            this._updateModelValue(isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => toggle.checked = false);\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent();\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n}\nMatButtonToggleGroup.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-button-toggle-group',\n                providers: [\n                    MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                    { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                ],\n                host: {\n                    'role': 'group',\n                    'class': 'mat-button-toggle-group',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[class.mat-button-toggle-vertical]': 'vertical',\n                    '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"',\n                },\n                exportAs: 'matButtonToggleGroup',\n            },] }\n];\nMatButtonToggleGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggleGroup.propDecorators = {\n    _buttonToggles: [{ type: ContentChildren, args: [forwardRef(() => MatButtonToggle), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                },] }],\n    appearance: [{ type: Input }],\n    name: [{ type: Input }],\n    vertical: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    multiple: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nclass MatButtonToggleBase {\n}\nconst _MatButtonToggleMixinBase = mixinDisableRipple(MatButtonToggleBase);\n/** Single button inside of a toggle group. */\nclass MatButtonToggle extends _MatButtonToggleMixinBase {\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._isSingleSelector = false;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() { return `${this.id}-button`; }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this._isSingleSelector = group && !group.multiple;\n        this.id = this.id || `mat-button-toggle-${_uniqueIdCounter++}`;\n        if (this._isSingleSelector) {\n            this.name = group.name;\n        }\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        const newChecked = this._isSingleSelector ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatButtonToggle.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-button-toggle',\n                template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matButtonToggle',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disableRipple'],\n                host: {\n                    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                    '[class.mat-button-toggle-checked]': 'checked',\n                    '[class.mat-button-toggle-disabled]': 'disabled',\n                    '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                    'class': 'mat-button-toggle',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.id]': 'id',\n                    '[attr.name]': 'null',\n                    '(focus)': 'focus()',\n                    'role': 'presentation',\n                },\n                styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"]\n            },] }\n];\nMatButtonToggle.ctorParameters = () => [\n    { type: MatButtonToggleGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_GROUP,] }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggle.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    _buttonElement: [{ type: ViewChild, args: ['button',] }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    value: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    appearance: [{ type: Input }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule, MatRippleModule],\n                exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                declarations: [MatButtonToggleGroup, MatButtonToggle],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n//# sourceMappingURL=button-toggle.js.map\n","import { Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'vex-page-layout',\n  template: '<ng-content></ng-content>',\n  host: {\n    class: 'vex-page-layout'\n  },\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./page-layout.component.scss']\n})\nexport class PageLayoutComponent {\n\n  @Input() mode: 'card' | 'simple' = 'simple';\n\n  constructor() { }\n\n  @HostBinding('class.vex-page-layout-card')\n  get isCard() {\n    return this.mode === 'card';\n  }\n\n  @HostBinding('class.vex-page-layout-simple')\n  get isSimple() {\n    return this.mode === 'simple';\n  }\n\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[vexPageLayoutHeader],vex-page-layout-header',\n  host: {\n    class: 'vex-page-layout-header'\n  }\n})\nexport class PageLayoutHeaderDirective {\n\n  constructor() { }\n\n}\n\n"]}